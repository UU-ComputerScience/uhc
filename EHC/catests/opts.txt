BinTree:
("TyGam: ",BinTree ->
  Type Error: BinTree.BinTree dataTgi)
("DataGam: ",BinTree a 5 6 7 8 9 10 11 12
  BinTree.BinTree {_u (BinTree (5 6 7 8 9 10 11 12) (a)) (7,8)} {_u a (9,10)} {_u (BinTree (5 6 7 8 9 10 11 12) (a)) (11,12)}
  BinTree.Leaf {_u a (5,6)})
("num constraints: ",759)
("still to do cs",0,38)
("Tys",u3_37_0_@UNQ_@32_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
u3_37_0_@UNQ_@31 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
u5_24 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111))) (top,lzero)}
u5_62 ->
  {_u (forall {} . cs: 0 => ()) (lzero,CA@1972)}
u5_54 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
u5_48 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
mapTreeUnitToFac ->
  {_u (forall {CA@841,CA@842,CA@735,CA@781,CA@780,CA@1946,CA@1945,CA@826,CA@859} . cs: 5 => ({_u (BinTree (CA@841 CA@842 lzero lzero CA@780 CA@781 lzero lzero) (CA@859)) (lzero,lone)} -> {_u (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int)) CA@826})
           lzero U CA@826 == CA@826
           CA@735 U CA@826 == CA@826
           CA@826 (+) lzero == CA@826
           CA@826 (+) lzero == CA@826
           CA@826 (+) lzero == CA@826
      ) (top,top)}
u5_81 ->
  {_u (forall {CA@3679,CA@3683,CA@3682,CA@3681,CA@3680,CA@457} . cs: 0 => (BinTree (lzero CA@3679 CA@3680 CA@3681 CA@3682 CA@3683 lzero CA@457) (()))) (lzero,{set {0,1}})}
u5_80 ->
  {_u (forall {CA@3981,CA@3982,CA@3983,CA@3985,CA@3986,CA@3987,CA@3977} . cs: 0 => (BinTree (CA@3982 CA@3983 CA@3985 CA@3981 CA@3987 CA@3986 CA@3977 lzero) (Int))) (top,top)}
n_@NEW_@14_@UNQ_@51_@CCN ->
  {_u (forall {CA@1972,CA@457} . cs: 11 => ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) lzero})
           lzero (+) CA@457 == CA@457
           CA@457 > top == top
           CA@457 > {set {1,infty}} == {set {1,infty}}
           CA@457 > lone == lone
           CA@457 > lone == lone
           CA@457 > lzero == lzero
           CA@457 (+) lzero == CA@457
           CA@457 > lzero == lzero
           CA@457 > lzero == lzero
           CA@457 (+) lzero == CA@457
           CA@457 > lzero == lzero
      ) (lzero,lzero)}
u5_35 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_61 ->
  {_u (forall {CA@1869,CA@1875,CA@1872,CA@1870,CA@1871,CA@1876,CA@1972} . cs: 0 => (BinTree (lzero CA@1972 CA@1875 CA@1876 CA@1871 CA@1872 CA@1870 CA@1869) (()))) (lzero,lone)}
u5_38 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u3_498_0_@UNQ_@71_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@859) (CA@841,CA@842)}
u5_39 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
u5_77 ->
  {_u (forall {} . cs: 0 => Int) (top,lzero)}
__@UNQ_@48 ->
  {_u (forall {} . cs: 0 => CA@111) (CA@184,CA@185)}
u5_76 ->
  {_u (forall {CA@1887,CA@1886,CA@1885,CA@1884,CA@1890,CA@1891,CA@805} . cs: 1 => (BinTree (CA@805 lzero CA@1890 CA@1891 CA@1886 CA@1887 CA@1885 CA@1884) (Int))
           CA@826 (+) lzero == CA@826
      ) (CA@826,lone)}
n_@UNQ_@30 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
n_@UNQ_@51_@CCN ->
  {_u (forall {} . cs: 0 => (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (()))) (lzero,{set {0,1}})}
u5_75 ->
  {_u (forall {} . cs: 0 => Int) (top,lzero)}
u3_322_0_@UNQ_@60_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
genBalancedBinTree ->
  {_u (forall {CA@1972,CA@457} . cs: 11 => ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) lzero})
           lzero (+) CA@457 == CA@457
           CA@457 > top == top
           CA@457 > {set {1,infty}} == {set {1,infty}}
           CA@457 > lone == lone
           CA@457 > lone == lone
           CA@457 > lzero == lzero
           CA@457 (+) lzero == CA@457
           CA@457 > lzero == lzero
           CA@457 > lzero == lzero
           CA@457 (+) lzero == CA@457
           CA@457 > lzero == lzero
      ) (top,top)}
r_@UNQ_@66_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@841 CA@842 lzero lzero CA@780 CA@781 lzero lzero) (CA@859))) (lzero,lzero)}
x1_@NEW_@15_@UNQ_@49 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
u3_322_0_@UNQ_@59 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
l_@UNQ_@42_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111))) (lzero,lzero)}
sub_@UNQ_@57 ->
  {_u (forall {} . cs: 3 => (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (()))
           CA@457 > lzero == lzero
           CA@457 (+) lzero == CA@457
           CA@457 > lzero == lzero
      ) (lzero,CA@457)}
u3_538_0_@UNQ_@65_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@859) (CA@780,CA@781)}
r'_@UNQ_@70 ->
  {_u (forall {} . cs: 1 => (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int))
           CA@826 (+) lzero == CA@826
      ) (CA@826,lzero)}
r_@UNQ_@44_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111))) (lzero,lzero)}
BinTree ->
  {_u (forall {CA@49,CA@46,CA@41,CA@43,CA@45,CA@26,CA@27,CA@22,CA@23,CA@31,CA@30,CA@33,CA@32,CA@24} . cs: 4 => ({_u (BinTree (CA@32 CA@33 CA@22 CA@23 CA@26 CA@27 CA@30 CA@31) (CA@24)) (lzero,lzero)} -> {_u ({_u CA@24 (CA@45,CA@46)} -> {_u ({_u (BinTree (CA@32 CA@33 CA@22 CA@23 CA@26 CA@27 CA@30 CA@31) (CA@24)) (CA@30,CA@31)} -> {_u (BinTree (CA@32 CA@33 CA@22 CA@23 CA@26 CA@27 CA@30 CA@31) (CA@24)) CA@41}) CA@43}) CA@49})
           CA@43 . CA@26 == CA@45
           CA@43 . CA@27 == CA@46
           CA@43 . CA@22 == lzero
           CA@43 . CA@23 == lzero
      ) (top,top)}
l'_@UNQ_@69 ->
  {_u (forall {} . cs: 1 => (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int))
           CA@826 (+) lzero == CA@826
      ) (CA@826,lzero)}
x1_@UNQ_@36 ->
  {_u (forall {} . cs: 0 => CA@0) (CA@2,CA@3)}
x2_@UNQ_@34 ->
  {_u (forall {} . cs: 0 => CA@24) (CA@45,CA@46)}
x3_@UNQ_@35 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@32 CA@33 CA@22 CA@23 CA@26 CA@27 CA@30 CA@31) (CA@24))) (CA@30,CA@31)}
x1_@UNQ_@37 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111))) (top,{set {1,infty}})}
x1_@UNQ_@33 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@32 CA@33 CA@22 CA@23 CA@26 CA@27 CA@30 CA@31) (CA@24))) (lzero,lzero)}
x1_@UNQ_@61 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@841 CA@842 lzero lzero CA@780 CA@781 lzero lzero) (CA@859))) (lzero,lone)}
x1_@UNQ_@49 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
Leaf ->
  {_u (forall {CA@13,CA@11,CA@10,CA@8,CA@9,CA@2,CA@3,CA@6,CA@7,CA@0} . cs: 0 => ({_u CA@0 (CA@2,CA@3)} -> {_u (BinTree (CA@2 CA@3 CA@6 CA@7 CA@8 CA@9 CA@10 CA@11) (CA@0)) CA@13})) (top,top)}
u3_215_0_@UNQ_@41_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111))) (lone,lomega)}
fact ->
  {_u (forall {} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u Int top})) (lzero,lzero)}
testTree ->
  {_u (forall {CA@4144,CA@4141,CA@4140,CA@4143} . cs: 0 => (BinTree (CA@4140 CA@4141 lzero lzero CA@4144 CA@4143 lzero lzero) (Int))) (top,top)}
l_@UNQ_@64_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@841 CA@842 lzero lzero CA@780 CA@781 lzero lzero) (CA@859))) (lzero,lzero)}
u5_25 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111))) (top,lzero)}
mirror ->
  {_u (forall {CA@185,CA@184,CA@108,CA@111} . cs: 0 => ({_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) (top,{set {1,infty}})} -> {_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) top})) (top,top)}
u5_21 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111))) (top,lone)}
u3_489_0_@UNQ_@63_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@841 CA@842 lzero lzero CA@780 CA@781 lzero lzero) (CA@859))) (lone,lomega)}
a_@UNQ_@43_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@111) (lzero,CA@108)})
"start optimizing"
let
  Leaf = (\x1_@UNQ_@36 ->
            (BinTree.Leaf x1_@UNQ_@36) :: {_u (BinTree (CA@2 CA@3 CA@6 CA@7 CA@8 CA@9 CA@10 CA@11) (CA@0)) CA@13}
         ) :: {_u ({_u CA@0 (CA@2,CA@3)} -> {_u (BinTree (CA@2 CA@3 CA@6 CA@7 CA@8 CA@9 CA@10 CA@11) (CA@0)) CA@13}) top}
in
  let
    BinTree = (\x1_@UNQ_@33 ->
                 (\x2_@UNQ_@34 ->
                    (\x3_@UNQ_@35 ->
                       (BinTree.BinTree x1_@UNQ_@33 x2_@UNQ_@34 x3_@UNQ_@35) :: {_u (BinTree (CA@32 CA@33 CA@22 CA@23 CA@26 CA@27 CA@30 CA@31) (CA@24)) CA@41}
                    ) :: {_u ({_u (BinTree (CA@32 CA@33 CA@22 CA@23 CA@26 CA@27 CA@30 CA@31) (CA@24)) (CA@30,CA@31)} -> {_u (BinTree (CA@32 CA@33 CA@22 CA@23 CA@26 CA@27 CA@30 CA@31) (CA@24)) CA@41}) CA@43}
                 ) :: {_u ({_u CA@24 (CA@45,CA@46)} -> {_u ({_u (BinTree (CA@32 CA@33 CA@22 CA@23 CA@26 CA@27 CA@30 CA@31) (CA@24)) (CA@30,CA@31)} -> {_u (BinTree (CA@32 CA@33 CA@22 CA@23 CA@26 CA@27 CA@30 CA@31) (CA@24)) CA@41}) CA@43}) CA@49}
              ) :: {_u ({_u (BinTree (CA@32 CA@33 CA@22 CA@23 CA@26 CA@27 CA@30 CA@31) (CA@24)) (lzero,lzero)} -> {_u ({_u CA@24 (CA@45,CA@46)} -> {_u ({_u (BinTree (CA@32 CA@33 CA@22 CA@23 CA@26 CA@27 CA@30 CA@31) (CA@24)) (CA@30,CA@31)} -> {_u (BinTree (CA@32 CA@33 CA@22 CA@23 CA@26 CA@27 CA@30 CA@31) (CA@24)) CA@41}) CA@43}) CA@49}) top}
  in
    let
      mirror = (\x1_@UNQ_@37 ->
                  let!
                    u3_215_0_@UNQ_@41_@EVL = x1_@UNQ_@37 :: {_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) lzero}
                  in
                    (case u3_215_0_@UNQ_@41_@EVL :: {_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) lone} of
                       BinTree l_@UNQ_@42_@FLD_@0 a_@UNQ_@43_@FLD_@1 r_@UNQ_@44_@FLD_@2 -> let
                                                                                             u5_25 = (mirror :: {_u ({_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) (top,{set {1,infty}})} -> {_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) top}) lone} l_@UNQ_@42_@FLD_@0) :: {_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) top}
                                                                                           in
                                                                                             let
                                                                                               u5_24 = (mirror :: {_u ({_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) (top,{set {1,infty}})} -> {_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) top}) lone} r_@UNQ_@44_@FLD_@2) :: {_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) top}
                                                                                             in
                                                                                               let
                                                                                                 u5_21 = (((BinTree :: {_u ({_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) (lzero,lzero)} -> {_u ({_u CA@111 (lzero,CA@108)} -> {_u ({_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) (lzero,lzero)} -> {_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) top}) lone}) lone}) lone} u5_24) :: {_u ({_u CA@111 (lzero,CA@108)} -> {_u ({_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) (lzero,lzero)} -> {_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) top}) lone}) lone} a_@UNQ_@43_@FLD_@1) :: {_u ({_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) (lzero,lzero)} -> {_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) top}) lone} u5_25) :: {_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) top}
                                                                                               in
                                                                                                 u5_21 :: {_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) top}
                       Leaf __@UNQ_@48 -> x1_@UNQ_@37 :: {_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) top}
                    ) :: {_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) top}
               ) :: {_u ({_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) (top,{set {1,infty}})} -> {_u (BinTree (CA@184 CA@185 lzero lzero lzero CA@108 lzero lzero) (CA@111)) top}) top}
    in
      let
        fact = (\n_@UNQ_@30 ->
                  let
                    u3_37_0_@UNQ_@31 = (((<= :: {_u ({_u (_'Ord (CA@2182 CA@2179 CA@2178 CA@2244 lone CA@2189 CA@2188 CA@2191 lone CA@2193 CA@2187 CA@2187 CA@2186 lone top CA@2201 lone CA@2196 CA@2198 CA@2198 CA@2195 lone top CA@2219 CA@2218 CA@2248 CA@2245 CA@2223 CA@2221 CA@2221 CA@2220 lone top lone lone lzero lone lone lzero lone top CA@2181 CA@2180 CA@2227 CA@2226 CA@2229 CA@2228 CA@2225 top CA@2184 CA@2185 CA@2231 CA@2230 CA@2234 CA@2232 CA@2235 top CA@2243 lone CA@2238 CA@2239 CA@2239 CA@2237 lone top CA@2241 CA@2242 CA@2177 CA@2175 CA@2175 CA@2174 lone top CA@2247 CA@2249 CA@2206 CA@2210 CA@2210 CA@2208 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} n_@UNQ_@30) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
                  in
                    let!
                      u3_37_0_@UNQ_@32_@EVL = u3_37_0_@UNQ_@31 :: {_u Bool top}
                    in
                      (case u3_37_0_@UNQ_@32_@EVL :: {_u Bool lone} of
                         False -> let
                                    u5_39 = (((- :: {_u ({_u (_'Num (CA@2462 CA@2461 CA@2463 top CA@2465 CA@2472 CA@2473 CA@2476 lone CA@2470 CA@2474 CA@2474 CA@2475 lone top CA@2509 lone CA@2507 CA@2512 CA@2512 CA@2508 lone top CA@2505 CA@2504 lone lone lzero lone lone lzero lone top CA@2445 CA@2446 CA@2494 CA@2490 CA@2490 CA@2492 lone top CA@2447 lone CA@2497 CA@2454 CA@2454 CA@2455 lone top CA@2450 lone CA@2459 lone top top CA@2451 CA@2489 lone CA@2489 CA@2443 CA@2444 CA@2485 CA@2487 top CA@2449 lone CA@2479 lone top CA@2467 CA@2464 CA@2482 CA@2483 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@30) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                  in
                                    let
                                      u5_38 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} u5_39) :: {_u Int top}
                                    in
                                      let
                                        u5_35 = (((* :: {_u ({_u (_'Num (CA@2754 CA@2755 CA@2774 top CA@2760 CA@2775 CA@2776 CA@2777 lone CA@2779 CA@2773 CA@2773 CA@2770 lone top CA@2771 lone CA@2763 CA@2768 CA@2768 CA@2764 lone top CA@2732 CA@2734 CA@2709 lone CA@2733 CA@2738 CA@2738 CA@2735 lone top lone lone lzero lone lone lzero lone top CA@2707 lone CA@2714 CA@2716 CA@2716 CA@2711 lone top CA@2756 lone CA@2717 lone top top CA@2752 CA@2745 lone CA@2745 CA@2751 CA@2749 CA@2741 CA@2728 top CA@2750 lone CA@2726 lone top CA@2757 CA@2758 CA@2725 CA@2740 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@30) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_38) :: {_u Int top}
                                      in
                                        u5_35 :: {_u Int top}
                         True -> 1 :: {_u Int top}
                      ) :: {_u Int top}
               ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lzero}
      in
        let
          n_@NEW_@14_@UNQ_@51_@CCN = (\x1_@NEW_@15_@UNQ_@49 ->
                                        let
                                          u5_48 = (((- :: {_u ({_u (_'Num (CA@3062 CA@3061 CA@3063 top CA@3065 CA@3072 CA@3073 CA@3076 lone CA@3070 CA@3074 CA@3074 CA@3075 lone top CA@3109 lone CA@3107 CA@3112 CA@3112 CA@3108 lone top CA@3105 CA@3104 lone lone lzero lone lone lzero lone top CA@3045 CA@3046 CA@3094 CA@3090 CA@3090 CA@3092 lone top CA@3047 lone CA@3097 CA@3054 CA@3054 CA@3055 lone top CA@3050 lone CA@3059 lone top top CA@3051 CA@3089 lone CA@3089 CA@3043 CA@3044 CA@3085 CA@3087 top CA@3049 lone CA@3079 lone top CA@3067 CA@3064 CA@3082 CA@3083 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} x1_@NEW_@15_@UNQ_@49) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                        in
                                          let
                                            sub_@UNQ_@57 = (genBalancedBinTree :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) lzero}) lone} u5_48) :: {_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) lzero}
                                          in
                                            let
                                              u5_54 = () :: {_u () lzero}
                                            in
                                              (((BinTree :: {_u ({_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) (lzero,lzero)} -> {_u ({_u () (lzero,lzero)} -> {_u ({_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) (lzero,CA@457)} -> {_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) lzero}) lone}) lone}) lone} sub_@UNQ_@57) :: {_u ({_u () (lzero,lzero)} -> {_u ({_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) (lzero,CA@457)} -> {_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) lzero}) lone}) lone} u5_54) :: {_u ({_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) (lzero,CA@457)} -> {_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) lzero}) lone} sub_@UNQ_@57) :: {_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) lzero}
                                     ) :: {_u ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) lzero}) lzero}
          genBalancedBinTree = (\x1_@UNQ_@49 ->
                                  let
                                    n_@UNQ_@51_@CCN = (n_@NEW_@14_@UNQ_@51_@CCN :: {_u ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) lzero}) lone} x1_@UNQ_@49) :: {_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) lzero}
                                  in
                                    let
                                      u3_322_0_@UNQ_@59 = (((< :: {_u ({_u (_'Ord (CA@3387 CA@3388 CA@3395 CA@3347 lone CA@3396 CA@3392 CA@3394 lone CA@3393 CA@3391 CA@3391 CA@3353 lone top CA@3352 lone CA@3358 CA@3356 CA@3356 CA@3349 lone top CA@3361 CA@3360 CA@3344 CA@3345 CA@3363 CA@3365 CA@3365 CA@3364 lone top CA@3340 lone CA@3373 CA@3369 CA@3369 CA@3370 lone top CA@3383 CA@3384 CA@3378 CA@3375 CA@3376 CA@3379 CA@3380 top CA@3385 CA@3386 CA@3374 CA@3330 CA@3331 CA@3328 CA@3329 top CA@3381 lone CA@3326 CA@3325 CA@3325 CA@3320 lone top lone lone lzero lone lone lzero lone top CA@3343 CA@3342 CA@3333 CA@3335 CA@3335 CA@3336 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} x1_@UNQ_@49) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
                                    in
                                      let!
                                        u3_322_0_@UNQ_@60_@EVL = u3_322_0_@UNQ_@59 :: {_u Bool top}
                                      in
                                        (case u3_322_0_@UNQ_@60_@EVL :: {_u Bool lone} of
                                           False -> n_@UNQ_@51_@CCN :: {_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) lzero}
                                           True -> let
                                                     u5_62 = () :: {_u () lzero}
                                                   in
                                                     let
                                                       u5_61 = (Leaf :: {_u ({_u () (lzero,CA@1972)} -> {_u (BinTree (lzero CA@1972 CA@1875 CA@1876 CA@1871 CA@1872 CA@1870 CA@1869) (())) lzero}) lone} u5_62) :: {_u (BinTree (lzero CA@1972 CA@1875 CA@1876 CA@1871 CA@1872 CA@1870 CA@1869) (())) lzero}
                                                     in
                                                       u5_61 :: {_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) lzero}
                                        ) :: {_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) lzero}
                               ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@1972 lzero lzero lzero lzero lzero CA@457) (())) lzero}) top}
        in
          let
            mapTreeUnitToFac = (\x1_@UNQ_@61 ->
                                  let!
                                    u3_489_0_@UNQ_@63_@EVL = x1_@UNQ_@61 :: {_u (BinTree (CA@841 CA@842 lzero lzero CA@780 CA@781 lzero lzero) (CA@859)) lzero}
                                  in
                                    (case u3_489_0_@UNQ_@63_@EVL :: {_u (BinTree (CA@841 CA@842 lzero lzero CA@780 CA@781 lzero lzero) (CA@859)) lone} of
                                       BinTree l_@UNQ_@64_@FLD_@0 u3_538_0_@UNQ_@65_@FLD_@1 r_@UNQ_@66_@FLD_@2 -> let
                                                                                                                    l'_@UNQ_@69 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@841 CA@842 lzero lzero CA@780 CA@781 lzero lzero) (CA@859)) (lzero,lone)} -> {_u (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int)) CA@826}) lone} l_@UNQ_@64_@FLD_@0) :: {_u (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int)) CA@826}
                                                                                                                  in
                                                                                                                    let
                                                                                                                      r'_@UNQ_@70 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@841 CA@842 lzero lzero CA@780 CA@781 lzero lzero) (CA@859)) (lzero,lone)} -> {_u (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int)) CA@826}) lone} r_@UNQ_@66_@FLD_@2) :: {_u (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int)) CA@826}
                                                                                                                    in
                                                                                                                      let
                                                                                                                        u5_75 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 12) :: {_u Int top}
                                                                                                                      in
                                                                                                                        (((BinTree :: {_u ({_u (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int)) (lzero,lzero)} -> {_u ({_u Int (lzero,lzero)} -> {_u ({_u (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int)) (CA@735,lzero)} -> {_u (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int)) CA@826}) lone}) lone}) lone} l'_@UNQ_@69) :: {_u ({_u Int (lzero,lzero)} -> {_u ({_u (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int)) (CA@735,lzero)} -> {_u (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int)) CA@826}) lone}) lone} u5_75) :: {_u ({_u (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int)) (CA@735,lzero)} -> {_u (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int)) CA@826}) lone} r'_@UNQ_@70) :: {_u (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int)) CA@826}
                                       Leaf u3_498_0_@UNQ_@71_@FLD_@0 -> let
                                                                           u5_77 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 12) :: {_u Int top}
                                                                         in
                                                                           let
                                                                             u5_76 = (Leaf :: {_u ({_u Int (CA@805,lzero)} -> {_u (BinTree (CA@805 lzero CA@1890 CA@1891 CA@1886 CA@1887 CA@1885 CA@1884) (Int)) CA@826}) lone} u5_77) :: {_u (BinTree (CA@805 lzero CA@1890 CA@1891 CA@1886 CA@1887 CA@1885 CA@1884) (Int)) CA@826}
                                                                           in
                                                                             u5_76 :: {_u (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int)) CA@826}
                                    ) :: {_u (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int)) CA@826}
                               ) :: {_u ({_u (BinTree (CA@841 CA@842 lzero lzero CA@780 CA@781 lzero lzero) (CA@859)) (lzero,lone)} -> {_u (BinTree (CA@1946 CA@1945 lzero lzero lzero lzero CA@735 lzero) (Int)) CA@826}) top}
          in
            let
              u5_81 = (genBalancedBinTree :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@3679 CA@3680 CA@3681 CA@3682 CA@3683 lzero CA@457) (())) lzero}) lone} 20) :: {_u (BinTree (lzero CA@3679 CA@3680 CA@3681 CA@3682 CA@3683 lzero CA@457) (())) lzero}
            in
              let
                u5_80 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@4100 CA@4101 lzero lzero CA@4104 CA@4103 lzero lzero) (())) (lzero,lone)} -> {_u (BinTree (CA@3982 CA@3983 CA@3985 CA@3981 CA@3987 CA@3986 CA@3977 lzero) (Int)) top}) lone} u5_81) :: {_u (BinTree (CA@3982 CA@3983 CA@3985 CA@3981 CA@3987 CA@3986 CA@3977 lzero) (Int)) top}
              in
                let
                  testTree = (mirror :: {_u ({_u (BinTree (CA@4140 CA@4141 lzero lzero CA@4144 CA@4143 lzero lzero) (Int)) (top,{set {1,infty}})} -> {_u (BinTree (CA@4140 CA@4141 lzero lzero CA@4144 CA@4143 lzero lzero) (Int)) top}) lone} u5_80) :: {_u (BinTree (CA@4140 CA@4141 lzero lzero CA@4144 CA@4143 lzero lzero) (Int)) top}
                in
                  0 :: {_u Int CA@921}
let
  Leaf = \x1_@UNQ_@36 ->
           Leaf BinTree.x1_@UNQ_@36
in let
     BinTree = \x1_@UNQ_@33 ->
                 \x2_@UNQ_@34 ->
                   \x3_@UNQ_@35 ->
                     BinTree BinTree.x1_@UNQ_@33 BinTree.x2_@UNQ_@34 BinTree.x3_@UNQ_@35
   in let
        mirror = \x1_@UNQ_@37 ->
                   let! u3_215_0_@UNQ_@41_@EVL = x1_@UNQ_@37
                   in case u3_215_0_@UNQ_@41_@EVL of
                        BinTree l_@UNQ_@42_@FLD_@0 a_@UNQ_@43_@FLD_@1 r_@UNQ_@44_@FLD_@2 -> let
                                                                                              u5_25 = mirror l_@UNQ_@42_@FLD_@0
                                                                                            in let
                                                                                                 u5_24 = mirror r_@UNQ_@44_@FLD_@2
                                                                                               in let
                                                                                                    u5_21 = BinTree u5_24 a_@UNQ_@43_@FLD_@1 u5_25
                                                                                                  in u5_21
                        Leaf __@UNQ_@48 -> x1_@UNQ_@37
      in let
           fact = \n_@UNQ_@30 ->
                    let
                      u3_37_0_@UNQ_@31 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@30 1
                    in let! u3_37_0_@UNQ_@32_@EVL = u3_37_0_@UNQ_@31
                       in case u3_37_0_@UNQ_@32_@EVL of
                            False  -> let
                                        u5_39 = - Num_@DCT_@u88_18_0 n_@UNQ_@30 1
                                      in let
                                           u5_38 = fact u5_39
                                         in let
                                              u5_35 = * Num_@DCT_@u88_18_0 n_@UNQ_@30 u5_38
                                            in u5_35
                            True  -> 1
         in let
              n_@NEW_@14_@UNQ_@51_@CCN = \x1_@NEW_@15_@UNQ_@49 ->
                                           let
                                             u5_48 = - Num_@DCT_@u88_18_0 x1_@NEW_@15_@UNQ_@49 1
                                           in let
                                                sub_@UNQ_@57 = genBalancedBinTree u5_48
                                              in let
                                                   u5_54 = ()
                                                 in BinTree sub_@UNQ_@57 u5_54 sub_@UNQ_@57
              genBalancedBinTree = \x1_@UNQ_@49 ->
                                     let
                                       n_@UNQ_@51_@CCN = n_@NEW_@14_@UNQ_@51_@CCN x1_@UNQ_@49
                                     in let
                                          u3_322_0_@UNQ_@59 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@49 1
                                        in let! u3_322_0_@UNQ_@60_@EVL = u3_322_0_@UNQ_@59
                                           in case u3_322_0_@UNQ_@60_@EVL of
                                                False  -> n_@UNQ_@51_@CCN
                                                True  -> let
                                                           u5_62 = ()
                                                         in let
                                                              u5_61 = Leaf u5_62
                                                            in u5_61
            in let
                 mapTreeUnitToFac = \x1_@UNQ_@61 ->
                                      let! u3_489_0_@UNQ_@63_@EVL = x1_@UNQ_@61
                                      in case u3_489_0_@UNQ_@63_@EVL of
                                           BinTree l_@UNQ_@64_@FLD_@0 u3_538_0_@UNQ_@65_@FLD_@1 r_@UNQ_@66_@FLD_@2 -> let
                                                                                                                        l'_@UNQ_@69 = mapTreeUnitToFac l_@UNQ_@64_@FLD_@0
                                                                                                                      in let
                                                                                                                           r'_@UNQ_@70 = mapTreeUnitToFac r_@UNQ_@66_@FLD_@2
                                                                                                                         in let
                                                                                                                              u5_75 = fact 12
                                                                                                                            in BinTree l'_@UNQ_@69 u5_75 r'_@UNQ_@70
                                           Leaf u3_498_0_@UNQ_@71_@FLD_@0 -> let
                                                                               u5_77 = fact 12
                                                                             in let
                                                                                  u5_76 = Leaf u5_77
                                                                                in u5_76
               in let
                    u5_81 = genBalancedBinTree 20
                  in let
                       u5_80 = mapTreeUnitToFac u5_81
                     in let
                          testTree = mirror u5_80
                        in 0
("opt-let",BinTree.u5_76)
("opt-let",BinTree.u5_61)
("opt-let",BinTree.u3_322_0_@UNQ_@59)
("opt-let",BinTree.u5_48)
("opt-let",BinTree.u5_35)
("opt-let",BinTree.u5_38)
("opt-let",BinTree.u5_39)
("opt-let",BinTree.u3_37_0_@UNQ_@31)
("opt-let",BinTree.u5_21)
("Transformation applied: ",9)
let
  Leaf = \x1_@UNQ_@36 ->
           Leaf BinTree.x1_@UNQ_@36
in let
     BinTree = \x1_@UNQ_@33 ->
                 \x2_@UNQ_@34 ->
                   \x3_@UNQ_@35 ->
                     BinTree BinTree.x1_@UNQ_@33 BinTree.x2_@UNQ_@34 BinTree.x3_@UNQ_@35
   in let
        mirror = \x1_@UNQ_@37 ->
                   let! u3_215_0_@UNQ_@41_@EVL = x1_@UNQ_@37
                   in case u3_215_0_@UNQ_@41_@EVL of
                        BinTree l_@UNQ_@42_@FLD_@0 a_@UNQ_@43_@FLD_@1 r_@UNQ_@44_@FLD_@2 -> let
                                                                                              u5_25 = mirror l_@UNQ_@42_@FLD_@0
                                                                                            in let
                                                                                                 u5_24 = mirror r_@UNQ_@44_@FLD_@2
                                                                                               in let! u5_21 = BinTree u5_24 a_@UNQ_@43_@FLD_@1 u5_25
                                                                                                  in u5_21
                        Leaf __@UNQ_@48 -> x1_@UNQ_@37
      in let
           fact = \n_@UNQ_@30 ->
                    let! u3_37_0_@UNQ_@31 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@30 1
                    in let! u3_37_0_@UNQ_@32_@EVL = u3_37_0_@UNQ_@31
                       in case u3_37_0_@UNQ_@32_@EVL of
                            False  -> let! u5_39 = - Num_@DCT_@u88_18_0 n_@UNQ_@30 1
                                      in let! u5_38 = fact u5_39
                                         in let! u5_35 = * Num_@DCT_@u88_18_0 n_@UNQ_@30 u5_38
                                            in u5_35
                            True  -> 1
         in let
              n_@NEW_@14_@UNQ_@51_@CCN = \x1_@NEW_@15_@UNQ_@49 ->
                                           let! u5_48 = - Num_@DCT_@u88_18_0 x1_@NEW_@15_@UNQ_@49 1
                                           in let
                                                sub_@UNQ_@57 = genBalancedBinTree u5_48
                                              in let
                                                   u5_54 = ()
                                                 in BinTree sub_@UNQ_@57 u5_54 sub_@UNQ_@57
              genBalancedBinTree = \x1_@UNQ_@49 ->
                                     let
                                       n_@UNQ_@51_@CCN = n_@NEW_@14_@UNQ_@51_@CCN x1_@UNQ_@49
                                     in let! u3_322_0_@UNQ_@59 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@49 1
                                        in let! u3_322_0_@UNQ_@60_@EVL = u3_322_0_@UNQ_@59
                                           in case u3_322_0_@UNQ_@60_@EVL of
                                                False  -> n_@UNQ_@51_@CCN
                                                True  -> let
                                                           u5_62 = ()
                                                         in let! u5_61 = Leaf u5_62
                                                            in u5_61
            in let
                 mapTreeUnitToFac = \x1_@UNQ_@61 ->
                                      let! u3_489_0_@UNQ_@63_@EVL = x1_@UNQ_@61
                                      in case u3_489_0_@UNQ_@63_@EVL of
                                           BinTree l_@UNQ_@64_@FLD_@0 u3_538_0_@UNQ_@65_@FLD_@1 r_@UNQ_@66_@FLD_@2 -> let
                                                                                                                        l'_@UNQ_@69 = mapTreeUnitToFac l_@UNQ_@64_@FLD_@0
                                                                                                                      in let
                                                                                                                           r'_@UNQ_@70 = mapTreeUnitToFac r_@UNQ_@66_@FLD_@2
                                                                                                                         in let
                                                                                                                              u5_75 = fact 12
                                                                                                                            in BinTree l'_@UNQ_@69 u5_75 r'_@UNQ_@70
                                           Leaf u3_498_0_@UNQ_@71_@FLD_@0 -> let
                                                                               u5_77 = fact 12
                                                                             in let! u5_76 = Leaf u5_77
                                                                                in u5_76
               in let
                    u5_81 = genBalancedBinTree 20
                  in let
                       u5_80 = mapTreeUnitToFac u5_81
                     in let
                          testTree = mirror u5_80
                        in 0
compilation run
No 'main' defined:

BinTreeInternals:
("TyGam: ",BinTree ->
  Type Error: MainOpts.BinTree dataTgi)
("DataGam: ",BinTree a 5 6 7 8 9 10 11 12
  MainOpts.Leaf {_u a (5,6)}
  MainOpts.BinTree {_u (BinTree (5 6 7 8 9 10 11 12) (a)) (7,8)} {_u a (9,10)} {_u (BinTree (5 6 7 8 9 10 11 12) (a)) (11,12)})
("num constraints: ",966)
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@1210}, a2_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]}, a_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}})
("still to do cs",0,41)
("Tys",n_@UNQ_@39 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
__@UNQ_@91 ->
  {_u (forall {} . cs: 0 => CA@772) (CA@845,CA@846)}
main ->
  {_u (forall {CA@5305,CA@5641} . cs: 0 => (CA@5641 CA@5305)) (lone,lone)}
r_@UNQ_@63_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@682 CA@683 lzero lzero CA@621 CA@622 lzero lzero) (CA@700))) (lzero,lzero)}
u5_80 ->
  {_u (forall {CA@4264,CA@4267,CA@4266,CA@4263,CA@4262} . cs: 0 => (BinTree (CA@4262 lzero CA@4264 CA@4266 CA@4263 CA@4267 lzero lzero) (Int))) (lzero,{set {1,infty}})}
u5_87 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
mirror ->
  {_u (forall {CA@845,CA@846,CA@769,CA@772} . cs: 0 => ({_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) lzero})) (lone,lone)}
u5_81 ->
  {_u (forall {CA@3975,CA@3985,CA@3984,CA@3981,CA@3983,CA@3982} . cs: 0 => (BinTree (lzero CA@3981 CA@3984 CA@3985 CA@3983 CA@3982 lzero CA@3975) (()))) (lzero,lone)}
Leaf ->
  {_u (forall {CA@222,CA@225,CA@220,CA@223,CA@224,CA@227,CA@221,CA@216,CA@217,CA@214} . cs: 0 => ({_u CA@214 (CA@216,CA@217)} -> {_u (BinTree (CA@216 CA@217 CA@220 CA@221 CA@222 CA@223 CA@224 CA@225) (CA@214)) CA@227})) (top,top)}
u5_103 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
r_@UNQ_@87_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772))) (lzero,lzero)}
BinTree ->
  {_u (forall {CA@179,CA@178,CA@199,CA@197,CA@189,CA@183,CA@182,CA@187,CA@188,CA@186,CA@202,CA@201,CA@205,CA@180} . cs: 4 => ({_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) (lzero,lzero)} -> {_u ({_u CA@180 (CA@201,CA@202)} -> {_u ({_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) (CA@186,CA@187)} -> {_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) CA@197}) CA@199}) CA@205})
           CA@199 . CA@182 == CA@201
           CA@199 . CA@183 == CA@202
           CA@199 . CA@178 == lzero
           CA@199 . CA@179 == lzero
      ) (top,top)}
sub_@UNQ_@54 ->
  {_u (forall {} . cs: 3 => (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (()))
           CA@3975 > lzero == lzero
           CA@3975 (+) lzero == CA@3975
           CA@3975 > lzero == lzero
      ) (lzero,CA@3975)}
u5_73 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772))) (lzero,lone)}
l_@UNQ_@72_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (top lone CA@1050 lone lzero lone CA@1064 lone) (Int))) (CA@1050,lone)}
fact ->
  {_u (forall {} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u Int top})) (lzero,lzero)}
u3_681_0_@UNQ_@84_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772))) (lone,lomega)}
u3_392_0_@UNQ_@68_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@700) (CA@682,CA@683)}
testBinTreeInternals ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
l_@UNQ_@85_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772))) (lzero,lzero)}
n_@UNQ_@48_@CCN ->
  {_u (forall {} . cs: 0 => (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (()))) (lzero,{set {0,1}})}
u3_432_0_@UNQ_@62_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@700) (CA@621,CA@622)}
a_@UNQ_@86_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@772) (lzero,CA@769)}
l_@UNQ_@61_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@682 CA@683 lzero lzero CA@621 CA@622 lzero lzero) (CA@700))) (lzero,lzero)}
genBalancedBinTree ->
  {_u (forall {CA@3261} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) lzero})) (lone,lone)}
mapTreeUnitToFac ->
  {_u (forall {CA@683,CA@682,CA@621,CA@622,CA@667,CA@3238,CA@576,CA@700} . cs: 3 => ({_u (BinTree (CA@682 CA@683 lzero lzero CA@621 CA@622 lzero lzero) (CA@700)) (lzero,lone)} -> {_u (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int)) CA@667})
           lzero U CA@667 == CA@667
           CA@576 U CA@667 == CA@667
           CA@667 (+) lzero == CA@667
      ) (lone,lone)}
u3_216_0_@UNQ_@57_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
u5_9 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
x1_@UNQ_@69 ->
  {_u (forall {} . cs: 0 => (BinTree (top lone CA@1050 lone lzero lone CA@1064 lone) (Int))) (CA@954,lone)}
x1_@UNQ_@80 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772))) (lzero,{set {1,infty}})}
x2_@UNQ_@44 ->
  {_u (forall {} . cs: 0 => CA@180) (CA@201,CA@202)}
x1_@UNQ_@46 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
x1_@UNQ_@43 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180))) (lzero,lzero)}
x3_@UNQ_@45 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180))) (CA@186,CA@187)}
x1_@UNQ_@42 ->
  {_u (forall {} . cs: 0 => CA@214) (CA@216,CA@217)}
x1_@UNQ_@58 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@682 CA@683 lzero lzero CA@621 CA@622 lzero lzero) (CA@700))) (lzero,lone)}
u5_13 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
r_@UNQ_@74_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (top lone CA@1050 lone lzero lone CA@1064 lone) (Int))) (CA@1064,lone)}
u5_12 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
x_@UNQ_@73_@FLD_@1 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
u5_51 ->
  {_u (forall {CA@3289,CA@3290,CA@3295,CA@3292,CA@3291,CA@3293,CA@3261} . cs: 0 => (BinTree (lzero CA@3261 CA@3291 CA@3295 CA@3289 CA@3292 CA@3293 CA@3290) (()))) (lzero,lone)}
u3_216_0_@UNQ_@56 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
main ->
  {_u (forall {CA@5640} . cs: 0 => (CA@5641 CA@5640)) (lone,lone)}
l'_@UNQ_@66 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int))) (CA@667,lzero)}
r'_@UNQ_@67 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int))) (CA@667,lzero)}
x1_@NEW_@10_@UNQ_@46 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
n_@NEW_@9_@UNQ_@48_@CCN ->
  {_u (forall {CA@3261} . cs: 0 => ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) lzero})) (lzero,lzero)}
x_@UNQ_@78_@FLD_@0 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u3_561_0_@UNQ_@71_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (top lone CA@1050 lone lzero lone CA@1064 lone) (Int))) (lone,lomega)}
u5_90 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_38 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
u3_383_0_@UNQ_@60_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@682 CA@683 lzero lzero CA@621 CA@622 lzero lzero) (CA@700))) (lone,lomega)}
u5_94 ->
  {_u (forall {} . cs: 1 => Int
           CA@954 U CA@1064 == CA@1064
      ) (top,lone)}
u5_93 ->
  {_u (forall {} . cs: 1 => Int
           CA@954 U CA@1050 == CA@1050
      ) (top,lone)}
u5_66 ->
  {_u (forall {CA@646,CA@3308,CA@3307,CA@3306,CA@3305,CA@3304,CA@3310} . cs: 1 => (BinTree (CA@646 lzero CA@3306 CA@3310 CA@3304 CA@3307 CA@3308 CA@3305) (Int))
           CA@667 (+) lzero == CA@667
      ) (CA@667,lone)}
u5_65 ->
  {_u (forall {} . cs: 0 => Int) (top,lzero)}
u5_67 ->
  {_u (forall {} . cs: 0 => Int) (top,lzero)}
u3_37_0_@UNQ_@41_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
u5_44 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
sumTree ->
  {_u (forall {CA@954,CA@1064,CA@1050} . cs: 3 => ({_u (BinTree (top lone CA@1050 lone lzero lone CA@1064 lone) (Int)) (CA@954,lone)} -> {_u Int top})
           lone > CA@1050 == CA@1050
           CA@954 U CA@1064 == CA@1064
           CA@954 U CA@1050 == CA@1050
      ) (lone,lzero)}
testTree ->
  {_u (forall {CA@4592,CA@4593,CA@4587,CA@4589} . cs: 0 => (BinTree (CA@4593 CA@4587 lzero lzero CA@4592 CA@4589 lzero lzero) (Int))) (lzero,lone)}
u3_37_0_@UNQ_@40 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
u5_77 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772))) (lzero,lzero)}
u5_76 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772))) (lzero,lzero)}
u5_52 ->
  {_u (forall {} . cs: 0 => ()) (lzero,CA@3261)})
"start optimizing"
let
  fact = (\n_@UNQ_@39 ->
            let
              u3_37_0_@UNQ_@40 = (((<= :: {_u ({_u (_'Ord (CA@2361 CA@2358 CA@2357 CA@2423 lone CA@2368 CA@2367 CA@2370 lone CA@2372 CA@2366 CA@2366 CA@2365 lone top CA@2380 lone CA@2375 CA@2377 CA@2377 CA@2374 lone top CA@2398 CA@2397 CA@2427 CA@2424 CA@2402 CA@2400 CA@2400 CA@2399 lone top lone lone lzero lone lone lzero lone top CA@2360 CA@2359 CA@2406 CA@2405 CA@2408 CA@2407 CA@2404 top CA@2363 CA@2364 CA@2410 CA@2409 CA@2413 CA@2411 CA@2414 top CA@2422 lone CA@2417 CA@2418 CA@2418 CA@2416 lone top CA@2420 CA@2421 CA@2356 CA@2354 CA@2354 CA@2353 lone top CA@2426 CA@2428 CA@2385 CA@2389 CA@2389 CA@2387 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} n_@UNQ_@39) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
            in
              let!
                u3_37_0_@UNQ_@41_@EVL = u3_37_0_@UNQ_@40 :: {_u Bool top}
              in
                (case u3_37_0_@UNQ_@41_@EVL :: {_u Bool lone} of
                   False -> let
                              u5_13 = (((- :: {_u ({_u (_'Num (CA@2641 CA@2640 CA@2642 top CA@2644 CA@2651 CA@2652 CA@2655 lone CA@2649 CA@2653 CA@2653 CA@2654 lone top CA@2688 lone CA@2686 CA@2691 CA@2691 CA@2687 lone top CA@2684 CA@2683 lone lone lzero lone lone lzero lone top CA@2624 CA@2625 CA@2673 CA@2669 CA@2669 CA@2671 lone top CA@2626 lone CA@2676 CA@2633 CA@2633 CA@2634 lone top CA@2629 lone CA@2638 lone top top CA@2630 CA@2668 lone CA@2668 CA@2622 CA@2623 CA@2664 CA@2666 top CA@2628 lone CA@2658 lone top CA@2646 CA@2643 CA@2661 CA@2662 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@39) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                            in
                              let
                                u5_12 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} u5_13) :: {_u Int top}
                              in
                                let
                                  u5_9 = (((* :: {_u ({_u (_'Num (CA@2933 CA@2934 CA@2953 top CA@2939 CA@2954 CA@2955 CA@2956 lone CA@2958 CA@2952 CA@2952 CA@2949 lone top CA@2950 lone CA@2942 CA@2947 CA@2947 CA@2943 lone top CA@2911 CA@2913 CA@2888 lone CA@2912 CA@2917 CA@2917 CA@2914 lone top lone lone lzero lone lone lzero lone top CA@2886 lone CA@2893 CA@2895 CA@2895 CA@2890 lone top CA@2935 lone CA@2896 lone top top CA@2931 CA@2924 lone CA@2924 CA@2930 CA@2928 CA@2920 CA@2907 top CA@2929 lone CA@2905 lone top CA@2936 CA@2937 CA@2904 CA@2919 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@39) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_12) :: {_u Int top}
                                in
                                  u5_9 :: {_u Int top}
                   True -> 1 :: {_u Int top}
                ) :: {_u Int top}
         ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lzero}
in
  let
    BinTree = (\x1_@UNQ_@43 ->
                 (\x2_@UNQ_@44 ->
                    (\x3_@UNQ_@45 ->
                       (MainOpts.BinTree x1_@UNQ_@43 x2_@UNQ_@44 x3_@UNQ_@45) :: {_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) CA@197}
                    ) :: {_u ({_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) (CA@186,CA@187)} -> {_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) CA@197}) CA@199}
                 ) :: {_u ({_u CA@180 (CA@201,CA@202)} -> {_u ({_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) (CA@186,CA@187)} -> {_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) CA@197}) CA@199}) CA@205}
              ) :: {_u ({_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) (lzero,lzero)} -> {_u ({_u CA@180 (CA@201,CA@202)} -> {_u ({_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) (CA@186,CA@187)} -> {_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) CA@197}) CA@199}) CA@205}) top}
  in
    let
      Leaf = (\x1_@UNQ_@42 ->
                (MainOpts.Leaf x1_@UNQ_@42) :: {_u (BinTree (CA@216 CA@217 CA@220 CA@221 CA@222 CA@223 CA@224 CA@225) (CA@214)) CA@227}
             ) :: {_u ({_u CA@214 (CA@216,CA@217)} -> {_u (BinTree (CA@216 CA@217 CA@220 CA@221 CA@222 CA@223 CA@224 CA@225) (CA@214)) CA@227}) top}
    in
      let
        n_@NEW_@9_@UNQ_@48_@CCN = (\x1_@NEW_@10_@UNQ_@46 ->
                                     let
                                       u5_38 = (((- :: {_u ({_u (_'Num (CA@3364 CA@3363 CA@3365 top CA@3367 CA@3374 CA@3375 CA@3378 lone CA@3372 CA@3376 CA@3376 CA@3377 lone top CA@3411 lone CA@3409 CA@3414 CA@3414 CA@3410 lone top CA@3407 CA@3406 lone lone lzero lone lone lzero lone top CA@3347 CA@3348 CA@3396 CA@3392 CA@3392 CA@3394 lone top CA@3349 lone CA@3399 CA@3356 CA@3356 CA@3357 lone top CA@3352 lone CA@3361 lone top top CA@3353 CA@3391 lone CA@3391 CA@3345 CA@3346 CA@3387 CA@3389 top CA@3351 lone CA@3381 lone top CA@3369 CA@3366 CA@3384 CA@3385 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} x1_@NEW_@10_@UNQ_@46) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                     in
                                       let
                                         sub_@UNQ_@54 = (genBalancedBinTree :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) lzero}) lone} u5_38) :: {_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) lzero}
                                       in
                                         let
                                           u5_44 = () :: {_u () lzero}
                                         in
                                           (((BinTree :: {_u ({_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) (lzero,lzero)} -> {_u ({_u () (lzero,lzero)} -> {_u ({_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) (lzero,CA@3975)} -> {_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) lzero}) lone}) lone}) lone} sub_@UNQ_@54) :: {_u ({_u () (lzero,lzero)} -> {_u ({_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) (lzero,CA@3975)} -> {_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) lzero}) lone}) lone} u5_44) :: {_u ({_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) (lzero,CA@3975)} -> {_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) lzero}) lone} sub_@UNQ_@54) :: {_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) lzero}
                                  ) :: {_u ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) lzero}) lzero}
        genBalancedBinTree = (\x1_@UNQ_@46 ->
                                let
                                  n_@UNQ_@48_@CCN = (n_@NEW_@9_@UNQ_@48_@CCN :: {_u ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) lzero}) lone} x1_@UNQ_@46) :: {_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) lzero}
                                in
                                  let
                                    u3_216_0_@UNQ_@56 = (((< :: {_u ({_u (_'Ord (CA@3689 CA@3690 CA@3697 CA@3649 lone CA@3698 CA@3694 CA@3696 lone CA@3695 CA@3693 CA@3693 CA@3655 lone top CA@3654 lone CA@3660 CA@3658 CA@3658 CA@3651 lone top CA@3663 CA@3662 CA@3646 CA@3647 CA@3665 CA@3667 CA@3667 CA@3666 lone top CA@3642 lone CA@3675 CA@3671 CA@3671 CA@3672 lone top CA@3685 CA@3686 CA@3680 CA@3677 CA@3678 CA@3681 CA@3682 top CA@3687 CA@3688 CA@3676 CA@3632 CA@3633 CA@3630 CA@3631 top CA@3683 lone CA@3628 CA@3627 CA@3627 CA@3622 lone top lone lone lzero lone lone lzero lone top CA@3645 CA@3644 CA@3635 CA@3637 CA@3637 CA@3638 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} x1_@UNQ_@46) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
                                  in
                                    let!
                                      u3_216_0_@UNQ_@57_@EVL = u3_216_0_@UNQ_@56 :: {_u Bool top}
                                    in
                                      (case u3_216_0_@UNQ_@57_@EVL :: {_u Bool lone} of
                                         False -> n_@UNQ_@48_@CCN :: {_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) lzero}
                                         True -> let
                                                   u5_52 = () :: {_u () lzero}
                                                 in
                                                   let
                                                     u5_51 = (Leaf :: {_u ({_u () (lzero,CA@3261)} -> {_u (BinTree (lzero CA@3261 CA@3291 CA@3295 CA@3289 CA@3292 CA@3293 CA@3290) (())) lzero}) lone} u5_52) :: {_u (BinTree (lzero CA@3261 CA@3291 CA@3295 CA@3289 CA@3292 CA@3293 CA@3290) (())) lzero}
                                                   in
                                                     u5_51 :: {_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) lzero}
                                      ) :: {_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) lzero}
                             ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@3261 lzero lzero lzero lzero lzero CA@3975) (())) lzero}) lone}
      in
        let
          mapTreeUnitToFac = (\x1_@UNQ_@58 ->
                                let!
                                  u3_383_0_@UNQ_@60_@EVL = x1_@UNQ_@58 :: {_u (BinTree (CA@682 CA@683 lzero lzero CA@621 CA@622 lzero lzero) (CA@700)) lzero}
                                in
                                  (case u3_383_0_@UNQ_@60_@EVL :: {_u (BinTree (CA@682 CA@683 lzero lzero CA@621 CA@622 lzero lzero) (CA@700)) lone} of
                                     BinTree l_@UNQ_@61_@FLD_@0 u3_432_0_@UNQ_@62_@FLD_@1 r_@UNQ_@63_@FLD_@2 -> let
                                                                                                                  r'_@UNQ_@67 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@682 CA@683 lzero lzero CA@621 CA@622 lzero lzero) (CA@700)) (lzero,lone)} -> {_u (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int)) CA@667}) lone} r_@UNQ_@63_@FLD_@2) :: {_u (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int)) CA@667}
                                                                                                                in
                                                                                                                  let
                                                                                                                    l'_@UNQ_@66 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@682 CA@683 lzero lzero CA@621 CA@622 lzero lzero) (CA@700)) (lzero,lone)} -> {_u (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int)) CA@667}) lone} l_@UNQ_@61_@FLD_@0) :: {_u (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int)) CA@667}
                                                                                                                  in
                                                                                                                    let
                                                                                                                      u5_65 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 12) :: {_u Int top}
                                                                                                                    in
                                                                                                                      (((BinTree :: {_u ({_u (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int)) (lzero,lzero)} -> {_u ({_u Int (lzero,lzero)} -> {_u ({_u (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int)) (CA@576,lzero)} -> {_u (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int)) CA@667}) lone}) lone}) lone} l'_@UNQ_@66) :: {_u ({_u Int (lzero,lzero)} -> {_u ({_u (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int)) (CA@576,lzero)} -> {_u (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int)) CA@667}) lone}) lone} u5_65) :: {_u ({_u (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int)) (CA@576,lzero)} -> {_u (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int)) CA@667}) lone} r'_@UNQ_@67) :: {_u (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int)) CA@667}
                                     Leaf u3_392_0_@UNQ_@68_@FLD_@0 -> let
                                                                         u5_67 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 12) :: {_u Int top}
                                                                       in
                                                                         let
                                                                           u5_66 = (Leaf :: {_u ({_u Int (CA@646,lzero)} -> {_u (BinTree (CA@646 lzero CA@3306 CA@3310 CA@3304 CA@3307 CA@3308 CA@3305) (Int)) CA@667}) lone} u5_67) :: {_u (BinTree (CA@646 lzero CA@3306 CA@3310 CA@3304 CA@3307 CA@3308 CA@3305) (Int)) CA@667}
                                                                         in
                                                                           u5_66 :: {_u (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int)) CA@667}
                                  ) :: {_u (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int)) CA@667}
                             ) :: {_u ({_u (BinTree (CA@682 CA@683 lzero lzero CA@621 CA@622 lzero lzero) (CA@700)) (lzero,lone)} -> {_u (BinTree (CA@3238 lzero lzero lzero lzero lzero CA@576 lzero) (Int)) CA@667}) lone}
        in
          let
            mirror = (\x1_@UNQ_@80 ->
                        let!
                          u3_681_0_@UNQ_@84_@EVL = x1_@UNQ_@80 :: {_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) lzero}
                        in
                          (case u3_681_0_@UNQ_@84_@EVL :: {_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) lone} of
                             BinTree l_@UNQ_@85_@FLD_@0 a_@UNQ_@86_@FLD_@1 r_@UNQ_@87_@FLD_@2 -> let
                                                                                                   u5_77 = (mirror :: {_u ({_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) lzero}) lone} l_@UNQ_@85_@FLD_@0) :: {_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) lzero}
                                                                                                 in
                                                                                                   let
                                                                                                     u5_76 = (mirror :: {_u ({_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) lzero}) lone} r_@UNQ_@87_@FLD_@2) :: {_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) lzero}
                                                                                                   in
                                                                                                     let
                                                                                                       u5_73 = (((BinTree :: {_u ({_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) (lzero,lzero)} -> {_u ({_u CA@772 (lzero,CA@769)} -> {_u ({_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) (lzero,lzero)} -> {_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) lzero}) lone}) lone}) lone} u5_76) :: {_u ({_u CA@772 (lzero,CA@769)} -> {_u ({_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) (lzero,lzero)} -> {_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) lzero}) lone}) lone} a_@UNQ_@86_@FLD_@1) :: {_u ({_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) (lzero,lzero)} -> {_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) lzero}) lone} u5_77) :: {_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) lzero}
                                                                                                     in
                                                                                                       u5_73 :: {_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) lzero}
                             Leaf __@UNQ_@91 -> x1_@UNQ_@80 :: {_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) lzero}
                          ) :: {_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) lzero}
                     ) :: {_u ({_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@845 CA@846 lzero lzero lzero CA@769 lzero lzero) (CA@772)) lzero}) lone}
          in
            let
              u5_81 = (genBalancedBinTree :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@3981 CA@3984 CA@3985 CA@3983 CA@3982 lzero CA@3975) (())) lzero}) lone} 20) :: {_u (BinTree (lzero CA@3981 CA@3984 CA@3985 CA@3983 CA@3982 lzero CA@3975) (())) lzero}
            in
              let
                u5_80 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@4556 CA@4555 lzero lzero CA@4557 CA@4558 lzero lzero) (())) (lzero,lone)} -> {_u (BinTree (CA@4262 lzero CA@4264 CA@4266 CA@4263 CA@4267 lzero lzero) (Int)) lzero}) lone} u5_81) :: {_u (BinTree (CA@4262 lzero CA@4264 CA@4266 CA@4263 CA@4267 lzero lzero) (Int)) lzero}
              in
                let
                  testTree = (mirror :: {_u ({_u (BinTree (CA@4593 CA@4587 lzero lzero CA@4592 CA@4589 lzero lzero) (Int)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@4593 CA@4587 lzero lzero CA@4592 CA@4589 lzero lzero) (Int)) lzero}) lone} u5_80) :: {_u (BinTree (CA@4593 CA@4587 lzero lzero CA@4592 CA@4589 lzero lzero) (Int)) lzero}
                in
                  let
                    sumTree = (\x1_@UNQ_@69 ->
                                 let!
                                   u3_561_0_@UNQ_@71_@EVL = x1_@UNQ_@69 :: {_u (BinTree (top lone CA@1050 lone lzero lone CA@1064 lone) (Int)) CA@954}
                                 in
                                   (case u3_561_0_@UNQ_@71_@EVL :: {_u (BinTree (top lone CA@1050 lone lzero lone CA@1064 lone) (Int)) lone} of
                                      BinTree l_@UNQ_@72_@FLD_@0 x_@UNQ_@73_@FLD_@1 r_@UNQ_@74_@FLD_@2 -> let
                                                                                                            u5_94 = (sumTree :: {_u ({_u (BinTree (top lone CA@1050 lone lzero lone CA@1064 lone) (Int)) (CA@954,lone)} -> {_u Int top}) lone} r_@UNQ_@74_@FLD_@2) :: {_u Int top}
                                                                                                          in
                                                                                                            let
                                                                                                              u5_93 = (sumTree :: {_u ({_u (BinTree (top lone CA@1050 lone lzero lone CA@1064 lone) (Int)) (CA@954,lone)} -> {_u Int top}) lone} l_@UNQ_@72_@FLD_@0) :: {_u Int top}
                                                                                                            in
                                                                                                              let
                                                                                                                u5_90 = (((+ :: {_u ({_u (_'Num (CA@4681 CA@4682 CA@4687 top CA@4684 CA@4737 CA@4736 CA@4735 lone CA@4733 CA@4739 CA@4739 CA@4738 lone top CA@4728 lone CA@4723 CA@4725 CA@4725 CA@4722 lone top CA@4719 CA@4718 CA@4688 lone CA@4721 CA@4715 CA@4715 CA@4714 lone top CA@4689 CA@4691 CA@4712 CA@4710 CA@4710 CA@4708 lone top lone lone lzero lone lone lzero lone top CA@4699 lone CA@4747 lone top top CA@4700 CA@4706 lone CA@4706 CA@4697 CA@4696 CA@4703 CA@4702 top CA@4695 lone CA@4748 lone top CA@4686 CA@4685 CA@4752 CA@4751 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_93) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} x_@UNQ_@73_@FLD_@1) :: {_u Int top}
                                                                                                              in
                                                                                                                let
                                                                                                                  u5_87 = (((+ :: {_u ({_u (_'Num (CA@4933 CA@4934 CA@4939 top CA@4936 CA@4989 CA@4988 CA@4987 lone CA@4985 CA@4991 CA@4991 CA@4990 lone top CA@4980 lone CA@4975 CA@4977 CA@4977 CA@4974 lone top CA@4971 CA@4970 CA@4940 lone CA@4973 CA@4967 CA@4967 CA@4966 lone top CA@4941 CA@4943 CA@4964 CA@4962 CA@4962 CA@4960 lone top lone lone lzero lone lone lzero lone top CA@4951 lone CA@4999 lone top top CA@4952 CA@4958 lone CA@4958 CA@4949 CA@4948 CA@4955 CA@4954 top CA@4947 lone CA@5000 lone top CA@4938 CA@4937 CA@5004 CA@5003 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_90) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_94) :: {_u Int top}
                                                                                                                in
                                                                                                                  u5_87 :: {_u Int top}
                                      Leaf x_@UNQ_@78_@FLD_@0 -> x_@UNQ_@78_@FLD_@0 :: {_u Int top}
                                   ) :: {_u Int top}
                              ) :: {_u ({_u (BinTree (top lone CA@1050 lone lzero lone CA@1064 lone) (Int)) (CA@954,lone)} -> {_u Int top}) lone}
                  in
                    let
                      testBinTreeInternals = (sumTree :: {_u ({_u (BinTree (top lone CA@1050 lone lzero lone lzero lone) (Int)) (lzero,lone)} -> {_u Int top}) lone} testTree) :: {_u Int top}
                    in
                      let
                        main = ((print :: {_u ({_u (_'Show (CA@5345 CA@5348 lone lone lzero lone top CA@5351 CA@5349 CA@5343 CA@5344 CA@5314 lone CA@5308 CA@5311 CA@5347 CA@5309 CA@5310 CA@5312 CA@5337 CA@5336 CA@5333 CA@5332 CA@5329 CA@5328 CA@5335 CA@5334 CA@5331 CA@5330 CA@5342 CA@5307 CA@5313 CA@5340 lone CA@5339 CA@5341 CA@5324 CA@5317 CA@5322 CA@5318 CA@5323 CA@5320 CA@5325 CA@5319 CA@5326 CA@5321) (Int)) (lone,lone)} -> {_u ({_u Int (lone,lone)} -> {_u (CA@5641 CA@5305) lone}) lone}) top} Show_@DCT_@u95_17_0) :: {_u ({_u Int (lone,lone)} -> {_u (CA@5641 CA@5305) lone}) lone} testBinTreeInternals) :: {_u (CA@5641 CA@5305) lone}
                      in
                        let
                          u5_103 = () :: {_u () lzero}
                        in
                          let
                            main = ((ehcRunMain :: {_u ({_u (CA@5641 CA@5640) (lone,lone)} -> {_u ({_u () (lzero,lzero)} -> {_u (CA@5641 CA@5640) lone}) lone}) top} main) :: {_u ({_u () (lzero,lzero)} -> {_u (CA@5641 CA@5640) lone}) lone} u5_103) :: {_u (CA@5641 CA@5640) lone}
                          in
                            main :: {_u (CA@5641 CA@5774) lone}
let
  fact = \n_@UNQ_@39 ->
           let
             u3_37_0_@UNQ_@40 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@39 1
           in let! u3_37_0_@UNQ_@41_@EVL = u3_37_0_@UNQ_@40
              in case u3_37_0_@UNQ_@41_@EVL of
                   False  -> let
                               u5_13 = - Num_@DCT_@u88_18_0 n_@UNQ_@39 1
                             in let
                                  u5_12 = fact u5_13
                                in let
                                     u5_9 = * Num_@DCT_@u88_18_0 n_@UNQ_@39 u5_12
                                   in u5_9
                   True  -> 1
in let
     BinTree = \x1_@UNQ_@43 ->
                 \x2_@UNQ_@44 ->
                   \x3_@UNQ_@45 ->
                     BinTree MainOpts.x1_@UNQ_@43 MainOpts.x2_@UNQ_@44 MainOpts.x3_@UNQ_@45
   in let
        Leaf = \x1_@UNQ_@42 ->
                 Leaf MainOpts.x1_@UNQ_@42
      in let
           n_@NEW_@9_@UNQ_@48_@CCN = \x1_@NEW_@10_@UNQ_@46 ->
                                       let
                                         u5_38 = - Num_@DCT_@u88_18_0 x1_@NEW_@10_@UNQ_@46 1
                                       in let
                                            sub_@UNQ_@54 = genBalancedBinTree u5_38
                                          in let
                                               u5_44 = ()
                                             in BinTree sub_@UNQ_@54 u5_44 sub_@UNQ_@54
           genBalancedBinTree = \x1_@UNQ_@46 ->
                                  let
                                    n_@UNQ_@48_@CCN = n_@NEW_@9_@UNQ_@48_@CCN x1_@UNQ_@46
                                  in let
                                       u3_216_0_@UNQ_@56 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@46 1
                                     in let! u3_216_0_@UNQ_@57_@EVL = u3_216_0_@UNQ_@56
                                        in case u3_216_0_@UNQ_@57_@EVL of
                                             False  -> n_@UNQ_@48_@CCN
                                             True  -> let
                                                        u5_52 = ()
                                                      in let
                                                           u5_51 = Leaf u5_52
                                                         in u5_51
         in let
              mapTreeUnitToFac = \x1_@UNQ_@58 ->
                                   let! u3_383_0_@UNQ_@60_@EVL = x1_@UNQ_@58
                                   in case u3_383_0_@UNQ_@60_@EVL of
                                        BinTree l_@UNQ_@61_@FLD_@0 u3_432_0_@UNQ_@62_@FLD_@1 r_@UNQ_@63_@FLD_@2 -> let
                                                                                                                     r'_@UNQ_@67 = mapTreeUnitToFac r_@UNQ_@63_@FLD_@2
                                                                                                                   in let
                                                                                                                        l'_@UNQ_@66 = mapTreeUnitToFac l_@UNQ_@61_@FLD_@0
                                                                                                                      in let
                                                                                                                           u5_65 = fact 12
                                                                                                                         in BinTree l'_@UNQ_@66 u5_65 r'_@UNQ_@67
                                        Leaf u3_392_0_@UNQ_@68_@FLD_@0 -> let
                                                                            u5_67 = fact 12
                                                                          in let
                                                                               u5_66 = Leaf u5_67
                                                                             in u5_66
            in let
                 mirror = \x1_@UNQ_@80 ->
                            let! u3_681_0_@UNQ_@84_@EVL = x1_@UNQ_@80
                            in case u3_681_0_@UNQ_@84_@EVL of
                                 BinTree l_@UNQ_@85_@FLD_@0 a_@UNQ_@86_@FLD_@1 r_@UNQ_@87_@FLD_@2 -> let
                                                                                                       u5_77 = mirror l_@UNQ_@85_@FLD_@0
                                                                                                     in let
                                                                                                          u5_76 = mirror r_@UNQ_@87_@FLD_@2
                                                                                                        in let
                                                                                                             u5_73 = BinTree u5_76 a_@UNQ_@86_@FLD_@1 u5_77
                                                                                                           in u5_73
                                 Leaf __@UNQ_@91 -> x1_@UNQ_@80
               in let
                    u5_81 = genBalancedBinTree 20
                  in let
                       u5_80 = mapTreeUnitToFac u5_81
                     in let
                          testTree = mirror u5_80
                        in let
                             sumTree = \x1_@UNQ_@69 ->
                                         let! u3_561_0_@UNQ_@71_@EVL = x1_@UNQ_@69
                                         in case u3_561_0_@UNQ_@71_@EVL of
                                              BinTree l_@UNQ_@72_@FLD_@0 x_@UNQ_@73_@FLD_@1 r_@UNQ_@74_@FLD_@2 -> let
                                                                                                                    u5_94 = sumTree r_@UNQ_@74_@FLD_@2
                                                                                                                  in let
                                                                                                                       u5_93 = sumTree l_@UNQ_@72_@FLD_@0
                                                                                                                     in let
                                                                                                                          u5_90 = + Num_@DCT_@u88_18_0 u5_93 x_@UNQ_@73_@FLD_@1
                                                                                                                        in let
                                                                                                                             u5_87 = + Num_@DCT_@u88_18_0 u5_90 u5_94
                                                                                                                           in u5_87
                                              Leaf x_@UNQ_@78_@FLD_@0 -> x_@UNQ_@78_@FLD_@0
                           in let
                                testBinTreeInternals = sumTree testTree
                              in let
                                   main = print Show_@DCT_@u95_17_0 testBinTreeInternals
                                 in let
                                      u5_103 = ()
                                    in let
                                         main = ehcRunMain main u5_103
                                       in main
("opt-let",main)
("opt-let",MainOpts.main)
("opt-let",MainOpts.testBinTreeInternals)
("opt-AltCon",[7_17])
("opt-let",MainOpts.u5_87)
("opt-let",MainOpts.u5_90)
("opt-let",MainOpts.u5_93)
("opt-let",MainOpts.u5_94)
("opt-AltCon",[7_13,7_14,7_15])
("opt-let",MainOpts.testTree)
("opt-let",MainOpts.u5_80)
("opt-let",MainOpts.u5_81)
("opt-let",MainOpts.u5_73)
("opt-let",MainOpts.u5_66)
("opt-let",MainOpts.u5_51)
("opt-let",MainOpts.u3_216_0_@UNQ_@56)
("opt-let",MainOpts.u5_38)
("opt-let",MainOpts.u5_9)
("opt-let",MainOpts.u5_12)
("opt-let",MainOpts.u5_13)
("opt-let",MainOpts.u3_37_0_@UNQ_@40)
("Transformation applied: ",23)
let
  fact = \n_@UNQ_@39 ->
           let! u3_37_0_@UNQ_@40 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@39 1
           in let! u3_37_0_@UNQ_@41_@EVL = u3_37_0_@UNQ_@40
              in case u3_37_0_@UNQ_@41_@EVL of
                   False  -> let! u5_13 = - Num_@DCT_@u88_18_0 n_@UNQ_@39 1
                             in let! u5_12 = fact u5_13
                                in let! u5_9 = * Num_@DCT_@u88_18_0 n_@UNQ_@39 u5_12
                                   in u5_9
                   True  -> 1
in let
     BinTree = \x1_@UNQ_@43 ->
                 \x2_@UNQ_@44 ->
                   \x3_@UNQ_@45 ->
                     BinTree MainOpts.x1_@UNQ_@43 MainOpts.x2_@UNQ_@44 MainOpts.x3_@UNQ_@45
   in let
        Leaf = \x1_@UNQ_@42 ->
                 Leaf MainOpts.x1_@UNQ_@42
      in let
           n_@NEW_@9_@UNQ_@48_@CCN = \x1_@NEW_@10_@UNQ_@46 ->
                                       let! u5_38 = - Num_@DCT_@u88_18_0 x1_@NEW_@10_@UNQ_@46 1
                                       in let
                                            sub_@UNQ_@54 = genBalancedBinTree u5_38
                                          in let
                                               u5_44 = ()
                                             in BinTree sub_@UNQ_@54 u5_44 sub_@UNQ_@54
           genBalancedBinTree = \x1_@UNQ_@46 ->
                                  let
                                    n_@UNQ_@48_@CCN = n_@NEW_@9_@UNQ_@48_@CCN x1_@UNQ_@46
                                  in let! u3_216_0_@UNQ_@56 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@46 1
                                     in let! u3_216_0_@UNQ_@57_@EVL = u3_216_0_@UNQ_@56
                                        in case u3_216_0_@UNQ_@57_@EVL of
                                             False  -> n_@UNQ_@48_@CCN
                                             True  -> let
                                                        u5_52 = ()
                                                      in let! u5_51 = Leaf u5_52
                                                         in u5_51
         in let
              mapTreeUnitToFac = \x1_@UNQ_@58 ->
                                   let! u3_383_0_@UNQ_@60_@EVL = x1_@UNQ_@58
                                   in case u3_383_0_@UNQ_@60_@EVL of
                                        BinTree l_@UNQ_@61_@FLD_@0 u3_432_0_@UNQ_@62_@FLD_@1 r_@UNQ_@63_@FLD_@2 -> let
                                                                                                                     r'_@UNQ_@67 = mapTreeUnitToFac r_@UNQ_@63_@FLD_@2
                                                                                                                   in let
                                                                                                                        l'_@UNQ_@66 = mapTreeUnitToFac l_@UNQ_@61_@FLD_@0
                                                                                                                      in let
                                                                                                                           u5_65 = fact 12
                                                                                                                         in BinTree l'_@UNQ_@66 u5_65 r'_@UNQ_@67
                                        Leaf u3_392_0_@UNQ_@68_@FLD_@0 -> let
                                                                            u5_67 = fact 12
                                                                          in let! u5_66 = Leaf u5_67
                                                                             in u5_66
            in let
                 mirror = \x1_@UNQ_@80 ->
                            let! u3_681_0_@UNQ_@84_@EVL = x1_@UNQ_@80
                            in case u3_681_0_@UNQ_@84_@EVL of
                                 BinTree l_@UNQ_@85_@FLD_@0 a_@UNQ_@86_@FLD_@1 r_@UNQ_@87_@FLD_@2 -> let
                                                                                                       u5_77 = mirror l_@UNQ_@85_@FLD_@0
                                                                                                     in let
                                                                                                          u5_76 = mirror r_@UNQ_@87_@FLD_@2
                                                                                                        in let! u5_73 = BinTree u5_76 a_@UNQ_@86_@FLD_@1 u5_77
                                                                                                           in u5_73
                                 Leaf __@UNQ_@91 -> x1_@UNQ_@80
               in let! u5_81 = genBalancedBinTree 20
                  in let! u5_80 = mapTreeUnitToFac u5_81
                     in let! testTree = mirror u5_80
                        in let
                             sumTree = \x1_@UNQ_@69 ->
                                         let! u3_561_0_@UNQ_@71_@EVL = x1_@UNQ_@69
                                         in case u3_561_0_@UNQ_@71_@EVL of
                                              BinTree l_@UNQ_@72_@FLD_@0 x_@UNQ_@73_@FLD_@1 r_@UNQ_@74_@FLD_@2 -> let! u7_13 = l_@UNQ_@72_@FLD_@0
                                                                                                                  in let! u7_14 = x_@UNQ_@73_@FLD_@1
                                                                                                                     in let! u7_15 = r_@UNQ_@74_@FLD_@2
                                                                                                                        in let! u5_94 = sumTree r_@UNQ_@74_@FLD_@2
                                                                                                                           in let! u5_93 = sumTree l_@UNQ_@72_@FLD_@0
                                                                                                                              in let! u5_90 = + Num_@DCT_@u88_18_0 u5_93 x_@UNQ_@73_@FLD_@1
                                                                                                                                 in let! u5_87 = + Num_@DCT_@u88_18_0 u5_90 u5_94
                                                                                                                                    in u5_87
                                              Leaf x_@UNQ_@78_@FLD_@0 -> let! u7_17 = x_@UNQ_@78_@FLD_@0
                                                                         in x_@UNQ_@78_@FLD_@0
                           in let! testBinTreeInternals = sumTree testTree
                              in let! main = print Show_@DCT_@u95_17_0 testBinTreeInternals
                                 in let
                                      u5_103 = ()
                                    in let! main = ehcRunMain main u5_103
                                       in main

BinTreeNoInternals:
("TyGam: ",BinTree ->
  Type Error: MainOpts.BinTree dataTgi)
("DataGam: ",BinTree a 5 6 7 8 9 10 11 12
  MainOpts.Leaf {_u a (5,6)}
  MainOpts.BinTree {_u (BinTree (5 6 7 8 9 10 11 12) (a)) (7,8)} {_u a (9,10)} {_u (BinTree (5 6 7 8 9 10 11 12) (a)) (11,12)})
("num constraints: ",962)
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@1209}, a2_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]}, a_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}})
("still to do cs",0,13)
("Tys",n_@UNQ_@43 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
__@UNQ_@93 ->
  {_u (forall {} . cs: 0 => CA@952) (CA@1025,CA@1026)}
u3_346_0_@UNQ_@70_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
main ->
  {_u (forall {CA@5291,CA@5627} . cs: 0 => (CA@5627 CA@5291)) (lone,lone)}
u5_57 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
u5_80 ->
  {_u (forall {} . cs: 0 => Int) (top,lzero)}
mirror ->
  {_u (forall {CA@949,CA@1025,CA@1026,CA@952} . cs: 0 => ({_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) lzero})) (lone,lone)}
u5_86 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952))) (lzero,lone)}
Leaf ->
  {_u (forall {CA@403,CA@402,CA@401,CA@400,CA@407,CA@405,CA@404,CA@396,CA@397,CA@394} . cs: 0 => ({_u CA@394 (CA@396,CA@397)} -> {_u (BinTree (CA@396 CA@397 CA@400 CA@401 CA@402 CA@403 CA@404 CA@405) (CA@394)) CA@407})) (top,top)}
u5_103 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
l_@UNQ_@87_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952))) (lzero,lzero)}
u5_64 ->
  {_u (forall {CA@3256,CA@3894,CA@3897,CA@3892,CA@3896,CA@3893,CA@3891} . cs: 0 => (BinTree (lzero CA@3256 CA@3894 CA@3893 CA@3892 CA@3891 CA@3897 CA@3896) (()))) (lzero,lone)}
u3_522_0_@UNQ_@81_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@880) (CA@862,CA@863)}
BinTree ->
  {_u (forall {CA@179,CA@178,CA@199,CA@197,CA@189,CA@183,CA@182,CA@187,CA@188,CA@186,CA@204,CA@203,CA@205,CA@180} . cs: 4 => ({_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) (lzero,lzero)} -> {_u ({_u CA@180 (CA@203,CA@204)} -> {_u ({_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) (CA@186,CA@187)} -> {_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) CA@197}) CA@199}) CA@205})
           CA@199 . CA@178 == lzero
           CA@199 . CA@179 == lzero
           CA@199 . CA@182 == CA@203
           CA@199 . CA@183 == CA@204
      ) (top,top)}
u5_79 ->
  {_u (forall {CA@826,CA@3907,CA@3906,CA@3909,CA@3908,CA@3911,CA@3912} . cs: 1 => (BinTree (CA@826 lzero CA@3909 CA@3908 CA@3907 CA@3906 CA@3912 CA@3911) (Int))
           CA@847 (+) lzero == CA@847
      ) (CA@847,lone)}
countLeafs ->
  {_u (forall {CA@228,CA@366,CA@365,CA@369,CA@370,CA@381} . cs: 1 => ({_u (BinTree (CA@369 CA@370 lzero lone CA@365 CA@366 CA@228 lone) (CA@381)) (lzero,lone)} -> {_u Int top})
           lzero U CA@228 == CA@228
      ) (lone,lzero)}
u3_242_0_@UNQ_@54_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@381) (CA@365,CA@366)}
sub_@UNQ_@67 ->
  {_u (forall {} . cs: 0 => (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (()))) (lzero,lone)}
fact ->
  {_u (forall {} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u Int top})) (lzero,lzero)}
u3_513_0_@UNQ_@73_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@862 CA@863 lzero lzero CA@801 CA@802 lzero lzero) (CA@880))) (lone,lomega)}
testBinTreeNoInternals ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
a_@UNQ_@88_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@952) (lzero,CA@949)}
r_@UNQ_@76_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@862 CA@863 lzero lzero CA@801 CA@802 lzero lzero) (CA@880))) (lzero,lzero)}
n_@NEW_@15_@UNQ_@61_@CCN ->
  {_u (forall {CA@3256} . cs: 0 => ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) lzero})) (lzero,lzero)}
r_@UNQ_@55_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@369 CA@370 lzero lone CA@365 CA@366 CA@228 lone) (CA@381))) (CA@228,lone)}
u3_562_0_@UNQ_@75_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@880) (CA@801,CA@802)}
u3_346_0_@UNQ_@69 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
x1_@NEW_@16_@UNQ_@59 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
u3_699_0_@UNQ_@86_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952))) (lone,lomega)}
u3_218_0_@UNQ_@58_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@381) (CA@369,CA@370)}
genBalancedBinTree ->
  {_u (forall {CA@3256} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) lzero})) (lone,lone)}
mapTreeUnitToFac ->
  {_u (forall {CA@847,CA@863,CA@862,CA@802,CA@801,CA@756,CA@3233,CA@880} . cs: 4 => ({_u (BinTree (CA@862 CA@863 lzero lzero CA@801 CA@802 lzero lzero) (CA@880)) (lzero,lone)} -> {_u (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int)) CA@847})
           lzero U CA@847 == CA@847
           CA@756 U CA@847 == CA@847
           CA@847 (+) lzero == CA@847
           CA@847 (+) lzero == CA@847
      ) (lone,lone)}
u5_9 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
x1_@UNQ_@82 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952))) (lzero,{set {1,infty}})}
x1_@UNQ_@47 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180))) (lzero,lzero)}
x1_@UNQ_@46 ->
  {_u (forall {} . cs: 0 => CA@394) (CA@396,CA@397)}
x3_@UNQ_@49 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180))) (CA@186,CA@187)}
x2_@UNQ_@48 ->
  {_u (forall {} . cs: 0 => CA@180) (CA@203,CA@204)}
x1_@UNQ_@50 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@369 CA@370 lzero lone CA@365 CA@366 CA@228 lone) (CA@381))) (lzero,lone)}
x1_@UNQ_@59 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
x1_@UNQ_@71 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@862 CA@863 lzero lzero CA@801 CA@802 lzero lzero) (CA@880))) (lzero,lone)}
u5_13 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
l_@UNQ_@74_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@862 CA@863 lzero lzero CA@801 CA@802 lzero lzero) (CA@880))) (lzero,lzero)}
u5_12 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_51 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
main ->
  {_u (forall {CA@5626} . cs: 0 => (CA@5627 CA@5626)) (lone,lone)}
u3_37_0_@UNQ_@45_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
l'_@UNQ_@79 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int))) (CA@847,lzero)}
r'_@UNQ_@80 ->
  {_u (forall {} . cs: 1 => (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int))
           CA@847 (+) lzero == CA@847
      ) (CA@847,lzero)}
u5_35 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
n_@UNQ_@61_@CCN ->
  {_u (forall {} . cs: 0 => (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (()))) (lzero,{set {0,1}})}
u5_39 ->
  {_u (forall {} . cs: 1 => Int
           lzero U CA@228 == CA@228
      ) (top,lone)}
u5_90 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952))) (lzero,lzero)}
u5_38 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_32 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_89 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952))) (lzero,lzero)}
u5_94 ->
  {_u (forall {CA@4584,CA@4585,CA@4586,CA@4587,CA@4583} . cs: 0 => (BinTree (lzero CA@4584 CA@4587 CA@4586 CA@4583 CA@4585 lzero lone) (()))) (lzero,lone)}
u5_93 ->
  {_u (forall {CA@4866,CA@4869,CA@4867,CA@4868,CA@4870} . cs: 0 => (BinTree (CA@4868 lzero CA@4870 CA@4869 CA@4866 CA@4867 lzero lzero) (Int))) (lzero,{set {1,infty}})}
u3_209_0_@UNQ_@52_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@369 CA@370 lzero lone CA@365 CA@366 CA@228 lone) (CA@381))) (lone,lomega)}
u5_65 ->
  {_u (forall {} . cs: 0 => ()) (lzero,CA@3256)}
l_@UNQ_@53_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@369 CA@370 lzero lone CA@365 CA@366 CA@228 lone) (CA@381))) (lzero,lone)}
testTree ->
  {_u (forall {CA@5189,CA@5195,CA@5192,CA@5191} . cs: 0 => (BinTree (CA@5192 CA@5195 lzero lzero CA@5189 CA@5191 lzero lzero) (Int))) (lzero,lone)}
r_@UNQ_@89_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952))) (lzero,lzero)}
u5_78 ->
  {_u (forall {} . cs: 0 => Int) (top,lzero)}
u3_37_0_@UNQ_@44 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)})
"start optimizing"
let
  fact = (\n_@UNQ_@43 ->
            let
              u3_37_0_@UNQ_@44 = (((<= :: {_u ({_u (_'Ord (CA@2356 CA@2353 CA@2352 CA@2418 lone CA@2363 CA@2362 CA@2365 lone CA@2367 CA@2361 CA@2361 CA@2360 lone top CA@2375 lone CA@2370 CA@2372 CA@2372 CA@2369 lone top CA@2393 CA@2392 CA@2422 CA@2419 CA@2397 CA@2395 CA@2395 CA@2394 lone top lone lone lzero lone lone lzero lone top CA@2355 CA@2354 CA@2401 CA@2400 CA@2403 CA@2402 CA@2399 top CA@2358 CA@2359 CA@2405 CA@2404 CA@2408 CA@2406 CA@2409 top CA@2417 lone CA@2412 CA@2413 CA@2413 CA@2411 lone top CA@2415 CA@2416 CA@2351 CA@2349 CA@2349 CA@2348 lone top CA@2421 CA@2423 CA@2380 CA@2384 CA@2384 CA@2382 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} n_@UNQ_@43) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
            in
              let!
                u3_37_0_@UNQ_@45_@EVL = u3_37_0_@UNQ_@44 :: {_u Bool top}
              in
                (case u3_37_0_@UNQ_@45_@EVL :: {_u Bool lone} of
                   False -> let
                              u5_13 = (((- :: {_u ({_u (_'Num (CA@2636 CA@2635 CA@2637 top CA@2639 CA@2646 CA@2647 CA@2650 lone CA@2644 CA@2648 CA@2648 CA@2649 lone top CA@2683 lone CA@2681 CA@2686 CA@2686 CA@2682 lone top CA@2679 CA@2678 lone lone lzero lone lone lzero lone top CA@2619 CA@2620 CA@2668 CA@2664 CA@2664 CA@2666 lone top CA@2621 lone CA@2671 CA@2628 CA@2628 CA@2629 lone top CA@2624 lone CA@2633 lone top top CA@2625 CA@2663 lone CA@2663 CA@2617 CA@2618 CA@2659 CA@2661 top CA@2623 lone CA@2653 lone top CA@2641 CA@2638 CA@2656 CA@2657 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@43) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                            in
                              let
                                u5_12 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} u5_13) :: {_u Int top}
                              in
                                let
                                  u5_9 = (((* :: {_u ({_u (_'Num (CA@2928 CA@2929 CA@2948 top CA@2934 CA@2949 CA@2950 CA@2951 lone CA@2953 CA@2947 CA@2947 CA@2944 lone top CA@2945 lone CA@2937 CA@2942 CA@2942 CA@2938 lone top CA@2906 CA@2908 CA@2883 lone CA@2907 CA@2912 CA@2912 CA@2909 lone top lone lone lzero lone lone lzero lone top CA@2881 lone CA@2888 CA@2890 CA@2890 CA@2885 lone top CA@2930 lone CA@2891 lone top top CA@2926 CA@2919 lone CA@2919 CA@2925 CA@2923 CA@2915 CA@2902 top CA@2924 lone CA@2900 lone top CA@2931 CA@2932 CA@2899 CA@2914 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@43) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_12) :: {_u Int top}
                                in
                                  u5_9 :: {_u Int top}
                   True -> 1 :: {_u Int top}
                ) :: {_u Int top}
         ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lzero}
in
  let
    BinTree = (\x1_@UNQ_@47 ->
                 (\x2_@UNQ_@48 ->
                    (\x3_@UNQ_@49 ->
                       (MainOpts.BinTree x1_@UNQ_@47 x2_@UNQ_@48 x3_@UNQ_@49) :: {_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) CA@197}
                    ) :: {_u ({_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) (CA@186,CA@187)} -> {_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) CA@197}) CA@199}
                 ) :: {_u ({_u CA@180 (CA@203,CA@204)} -> {_u ({_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) (CA@186,CA@187)} -> {_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) CA@197}) CA@199}) CA@205}
              ) :: {_u ({_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) (lzero,lzero)} -> {_u ({_u CA@180 (CA@203,CA@204)} -> {_u ({_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) (CA@186,CA@187)} -> {_u (BinTree (CA@188 CA@189 CA@178 CA@179 CA@182 CA@183 CA@186 CA@187) (CA@180)) CA@197}) CA@199}) CA@205}) top}
  in
    let
      countLeafs = (\x1_@UNQ_@50 ->
                      let!
                        u3_209_0_@UNQ_@52_@EVL = x1_@UNQ_@50 :: {_u (BinTree (CA@369 CA@370 lzero lone CA@365 CA@366 CA@228 lone) (CA@381)) lzero}
                      in
                        (case u3_209_0_@UNQ_@52_@EVL :: {_u (BinTree (CA@369 CA@370 lzero lone CA@365 CA@366 CA@228 lone) (CA@381)) lone} of
                           BinTree l_@UNQ_@53_@FLD_@0 u3_242_0_@UNQ_@54_@FLD_@1 r_@UNQ_@55_@FLD_@2 -> let
                                                                                                        u5_39 = (countLeafs :: {_u ({_u (BinTree (CA@369 CA@370 lzero lone CA@365 CA@366 CA@228 lone) (CA@381)) (lzero,lone)} -> {_u Int top}) lone} r_@UNQ_@55_@FLD_@2) :: {_u Int top}
                                                                                                      in
                                                                                                        let
                                                                                                          u5_38 = (countLeafs :: {_u ({_u (BinTree (CA@369 CA@370 lzero lone CA@365 CA@366 CA@228 lone) (CA@381)) (lzero,lone)} -> {_u Int top}) lone} l_@UNQ_@53_@FLD_@0) :: {_u Int top}
                                                                                                        in
                                                                                                          let
                                                                                                            u5_35 = (((+ :: {_u ({_u (_'Num (CA@3323 CA@3324 CA@3329 top CA@3326 CA@3379 CA@3378 CA@3377 lone CA@3375 CA@3381 CA@3381 CA@3380 lone top CA@3370 lone CA@3365 CA@3367 CA@3367 CA@3364 lone top CA@3361 CA@3360 CA@3330 lone CA@3363 CA@3357 CA@3357 CA@3356 lone top CA@3331 CA@3333 CA@3354 CA@3352 CA@3352 CA@3350 lone top lone lone lzero lone lone lzero lone top CA@3341 lone CA@3389 lone top top CA@3342 CA@3348 lone CA@3348 CA@3339 CA@3338 CA@3345 CA@3344 top CA@3337 lone CA@3390 lone top CA@3328 CA@3327 CA@3394 CA@3393 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_38) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                                                                                          in
                                                                                                            let
                                                                                                              u5_32 = (((+ :: {_u ({_u (_'Num (CA@3574 CA@3575 CA@3580 top CA@3577 CA@3630 CA@3629 CA@3628 lone CA@3626 CA@3632 CA@3632 CA@3631 lone top CA@3621 lone CA@3616 CA@3618 CA@3618 CA@3615 lone top CA@3612 CA@3611 CA@3581 lone CA@3614 CA@3608 CA@3608 CA@3607 lone top CA@3582 CA@3584 CA@3605 CA@3603 CA@3603 CA@3601 lone top lone lone lzero lone lone lzero lone top CA@3592 lone CA@3640 lone top top CA@3593 CA@3599 lone CA@3599 CA@3590 CA@3589 CA@3596 CA@3595 top CA@3588 lone CA@3641 lone top CA@3579 CA@3578 CA@3645 CA@3644 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_35) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_39) :: {_u Int top}
                                                                                                            in
                                                                                                              u5_32 :: {_u Int top}
                           Leaf u3_218_0_@UNQ_@58_@FLD_@0 -> 1 :: {_u Int top}
                        ) :: {_u Int top}
                   ) :: {_u ({_u (BinTree (CA@369 CA@370 lzero lone CA@365 CA@366 CA@228 lone) (CA@381)) (lzero,lone)} -> {_u Int top}) lone}
    in
      let
        Leaf = (\x1_@UNQ_@46 ->
                  (MainOpts.Leaf x1_@UNQ_@46) :: {_u (BinTree (CA@396 CA@397 CA@400 CA@401 CA@402 CA@403 CA@404 CA@405) (CA@394)) CA@407}
               ) :: {_u ({_u CA@394 (CA@396,CA@397)} -> {_u (BinTree (CA@396 CA@397 CA@400 CA@401 CA@402 CA@403 CA@404 CA@405) (CA@394)) CA@407}) top}
      in
        let
          n_@NEW_@15_@UNQ_@61_@CCN = (\x1_@NEW_@16_@UNQ_@59 ->
                                        let
                                          u5_51 = (((- :: {_u ({_u (_'Num (CA@3966 CA@3965 CA@3967 top CA@3969 CA@3976 CA@3977 CA@3980 lone CA@3974 CA@3978 CA@3978 CA@3979 lone top CA@4013 lone CA@4011 CA@4016 CA@4016 CA@4012 lone top CA@4009 CA@4008 lone lone lzero lone lone lzero lone top CA@3949 CA@3950 CA@3998 CA@3994 CA@3994 CA@3996 lone top CA@3951 lone CA@4001 CA@3958 CA@3958 CA@3959 lone top CA@3954 lone CA@3963 lone top top CA@3955 CA@3993 lone CA@3993 CA@3947 CA@3948 CA@3989 CA@3991 top CA@3953 lone CA@3983 lone top CA@3971 CA@3968 CA@3986 CA@3987 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} x1_@NEW_@16_@UNQ_@59) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                        in
                                          let
                                            sub_@UNQ_@67 = (genBalancedBinTree :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) lzero}) lone} u5_51) :: {_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) lzero}
                                          in
                                            let
                                              u5_57 = () :: {_u () lzero}
                                            in
                                              (((BinTree :: {_u ({_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) (lzero,lzero)} -> {_u ({_u () (lzero,lzero)} -> {_u ({_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) (lzero,lone)} -> {_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) lzero}) lone}) lone}) lone} sub_@UNQ_@67) :: {_u ({_u () (lzero,lzero)} -> {_u ({_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) (lzero,lone)} -> {_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) lzero}) lone}) lone} u5_57) :: {_u ({_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) (lzero,lone)} -> {_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) lzero}) lone} sub_@UNQ_@67) :: {_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) lzero}
                                     ) :: {_u ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) lzero}) lzero}
          genBalancedBinTree = (\x1_@UNQ_@59 ->
                                  let
                                    n_@UNQ_@61_@CCN = (n_@NEW_@15_@UNQ_@61_@CCN :: {_u ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) lzero}) lone} x1_@UNQ_@59) :: {_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) lzero}
                                  in
                                    let
                                      u3_346_0_@UNQ_@69 = (((< :: {_u ({_u (_'Ord (CA@4291 CA@4292 CA@4299 CA@4251 lone CA@4300 CA@4296 CA@4298 lone CA@4297 CA@4295 CA@4295 CA@4257 lone top CA@4256 lone CA@4262 CA@4260 CA@4260 CA@4253 lone top CA@4265 CA@4264 CA@4248 CA@4249 CA@4267 CA@4269 CA@4269 CA@4268 lone top CA@4244 lone CA@4277 CA@4273 CA@4273 CA@4274 lone top CA@4287 CA@4288 CA@4282 CA@4279 CA@4280 CA@4283 CA@4284 top CA@4289 CA@4290 CA@4278 CA@4234 CA@4235 CA@4232 CA@4233 top CA@4285 lone CA@4230 CA@4229 CA@4229 CA@4224 lone top lone lone lzero lone lone lzero lone top CA@4247 CA@4246 CA@4237 CA@4239 CA@4239 CA@4240 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} x1_@UNQ_@59) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
                                    in
                                      let!
                                        u3_346_0_@UNQ_@70_@EVL = u3_346_0_@UNQ_@69 :: {_u Bool top}
                                      in
                                        (case u3_346_0_@UNQ_@70_@EVL :: {_u Bool lone} of
                                           False -> n_@UNQ_@61_@CCN :: {_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) lzero}
                                           True -> let
                                                     u5_65 = () :: {_u () lzero}
                                                   in
                                                     let
                                                       u5_64 = (Leaf :: {_u ({_u () (lzero,CA@3256)} -> {_u (BinTree (lzero CA@3256 CA@3894 CA@3893 CA@3892 CA@3891 CA@3897 CA@3896) (())) lzero}) lone} u5_65) :: {_u (BinTree (lzero CA@3256 CA@3894 CA@3893 CA@3892 CA@3891 CA@3897 CA@3896) (())) lzero}
                                                     in
                                                       u5_64 :: {_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) lzero}
                                        ) :: {_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) lzero}
                               ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@3256 lzero lzero lzero lzero lzero lone) (())) lzero}) lone}
        in
          let
            mapTreeUnitToFac = (\x1_@UNQ_@71 ->
                                  let!
                                    u3_513_0_@UNQ_@73_@EVL = x1_@UNQ_@71 :: {_u (BinTree (CA@862 CA@863 lzero lzero CA@801 CA@802 lzero lzero) (CA@880)) lzero}
                                  in
                                    (case u3_513_0_@UNQ_@73_@EVL :: {_u (BinTree (CA@862 CA@863 lzero lzero CA@801 CA@802 lzero lzero) (CA@880)) lone} of
                                       BinTree l_@UNQ_@74_@FLD_@0 u3_562_0_@UNQ_@75_@FLD_@1 r_@UNQ_@76_@FLD_@2 -> let
                                                                                                                    r'_@UNQ_@80 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@862 CA@863 lzero lzero CA@801 CA@802 lzero lzero) (CA@880)) (lzero,lone)} -> {_u (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int)) CA@847}) lone} r_@UNQ_@76_@FLD_@2) :: {_u (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int)) CA@847}
                                                                                                                  in
                                                                                                                    let
                                                                                                                      l'_@UNQ_@79 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@862 CA@863 lzero lzero CA@801 CA@802 lzero lzero) (CA@880)) (lzero,lone)} -> {_u (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int)) CA@847}) lone} l_@UNQ_@74_@FLD_@0) :: {_u (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int)) CA@847}
                                                                                                                    in
                                                                                                                      let
                                                                                                                        u5_78 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 12) :: {_u Int top}
                                                                                                                      in
                                                                                                                        (((BinTree :: {_u ({_u (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int)) (lzero,lzero)} -> {_u ({_u Int (lzero,lzero)} -> {_u ({_u (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int)) (CA@756,lzero)} -> {_u (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int)) CA@847}) lone}) lone}) lone} l'_@UNQ_@79) :: {_u ({_u Int (lzero,lzero)} -> {_u ({_u (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int)) (CA@756,lzero)} -> {_u (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int)) CA@847}) lone}) lone} u5_78) :: {_u ({_u (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int)) (CA@756,lzero)} -> {_u (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int)) CA@847}) lone} r'_@UNQ_@80) :: {_u (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int)) CA@847}
                                       Leaf u3_522_0_@UNQ_@81_@FLD_@0 -> let
                                                                           u5_80 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 12) :: {_u Int top}
                                                                         in
                                                                           let
                                                                             u5_79 = (Leaf :: {_u ({_u Int (CA@826,lzero)} -> {_u (BinTree (CA@826 lzero CA@3909 CA@3908 CA@3907 CA@3906 CA@3912 CA@3911) (Int)) CA@847}) lone} u5_80) :: {_u (BinTree (CA@826 lzero CA@3909 CA@3908 CA@3907 CA@3906 CA@3912 CA@3911) (Int)) CA@847}
                                                                           in
                                                                             u5_79 :: {_u (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int)) CA@847}
                                    ) :: {_u (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int)) CA@847}
                               ) :: {_u ({_u (BinTree (CA@862 CA@863 lzero lzero CA@801 CA@802 lzero lzero) (CA@880)) (lzero,lone)} -> {_u (BinTree (CA@3233 lzero lzero lzero lzero lzero CA@756 lzero) (Int)) CA@847}) lone}
          in
            let
              mirror = (\x1_@UNQ_@82 ->
                          let!
                            u3_699_0_@UNQ_@86_@EVL = x1_@UNQ_@82 :: {_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) lzero}
                          in
                            (case u3_699_0_@UNQ_@86_@EVL :: {_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) lone} of
                               BinTree l_@UNQ_@87_@FLD_@0 a_@UNQ_@88_@FLD_@1 r_@UNQ_@89_@FLD_@2 -> let
                                                                                                     u5_90 = (mirror :: {_u ({_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) lzero}) lone} l_@UNQ_@87_@FLD_@0) :: {_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) lzero}
                                                                                                   in
                                                                                                     let
                                                                                                       u5_89 = (mirror :: {_u ({_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) lzero}) lone} r_@UNQ_@89_@FLD_@2) :: {_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) lzero}
                                                                                                     in
                                                                                                       let
                                                                                                         u5_86 = (((BinTree :: {_u ({_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) (lzero,lzero)} -> {_u ({_u CA@952 (lzero,CA@949)} -> {_u ({_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) (lzero,lzero)} -> {_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) lzero}) lone}) lone}) lone} u5_89) :: {_u ({_u CA@952 (lzero,CA@949)} -> {_u ({_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) (lzero,lzero)} -> {_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) lzero}) lone}) lone} a_@UNQ_@88_@FLD_@1) :: {_u ({_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) (lzero,lzero)} -> {_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) lzero}) lone} u5_90) :: {_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) lzero}
                                                                                                       in
                                                                                                         u5_86 :: {_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) lzero}
                               Leaf __@UNQ_@93 -> x1_@UNQ_@82 :: {_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) lzero}
                            ) :: {_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) lzero}
                       ) :: {_u ({_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1025 CA@1026 lzero lzero lzero CA@949 lzero lzero) (CA@952)) lzero}) lone}
            in
              let
                u5_94 = (genBalancedBinTree :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@4584 CA@4587 CA@4586 CA@4583 CA@4585 lzero lone) (())) lzero}) lone} 20) :: {_u (BinTree (lzero CA@4584 CA@4587 CA@4586 CA@4583 CA@4585 lzero lone) (())) lzero}
              in
                let
                  u5_93 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@5159 CA@5153 lzero lzero CA@5160 CA@5154 lzero lzero) (())) (lzero,lone)} -> {_u (BinTree (CA@4868 lzero CA@4870 CA@4869 CA@4866 CA@4867 lzero lzero) (Int)) lzero}) lone} u5_94) :: {_u (BinTree (CA@4868 lzero CA@4870 CA@4869 CA@4866 CA@4867 lzero lzero) (Int)) lzero}
                in
                  let
                    testTree = (mirror :: {_u ({_u (BinTree (CA@5192 CA@5195 lzero lzero CA@5189 CA@5191 lzero lzero) (Int)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@5192 CA@5195 lzero lzero CA@5189 CA@5191 lzero lzero) (Int)) lzero}) lone} u5_93) :: {_u (BinTree (CA@5192 CA@5195 lzero lzero CA@5189 CA@5191 lzero lzero) (Int)) lzero}
                  in
                    let
                      testBinTreeNoInternals = (countLeafs :: {_u ({_u (BinTree (CA@5225 CA@5223 lzero lone CA@5222 CA@5226 lzero lone) (Int)) (lzero,lone)} -> {_u Int top}) lone} testTree) :: {_u Int top}
                    in
                      let
                        main = ((print :: {_u ({_u (_'Show (CA@5331 CA@5334 lone lone lzero lone top CA@5337 CA@5335 CA@5329 CA@5330 CA@5300 lone CA@5294 CA@5297 CA@5333 CA@5295 CA@5296 CA@5298 CA@5323 CA@5322 CA@5319 CA@5318 CA@5315 CA@5314 CA@5321 CA@5320 CA@5317 CA@5316 CA@5328 CA@5293 CA@5299 CA@5326 lone CA@5325 CA@5327 CA@5310 CA@5303 CA@5308 CA@5304 CA@5309 CA@5306 CA@5311 CA@5305 CA@5312 CA@5307) (Int)) (lone,lone)} -> {_u ({_u Int (lone,lone)} -> {_u (CA@5627 CA@5291) lone}) lone}) top} Show_@DCT_@u95_17_0) :: {_u ({_u Int (lone,lone)} -> {_u (CA@5627 CA@5291) lone}) lone} testBinTreeNoInternals) :: {_u (CA@5627 CA@5291) lone}
                      in
                        let
                          u5_103 = () :: {_u () lzero}
                        in
                          let
                            main = ((ehcRunMain :: {_u ({_u (CA@5627 CA@5626) (lone,lone)} -> {_u ({_u () (lzero,lzero)} -> {_u (CA@5627 CA@5626) lone}) lone}) top} main) :: {_u ({_u () (lzero,lzero)} -> {_u (CA@5627 CA@5626) lone}) lone} u5_103) :: {_u (CA@5627 CA@5626) lone}
                          in
                            main :: {_u (CA@5627 CA@5760) lone}
let
  fact = \n_@UNQ_@43 ->
           let
             u3_37_0_@UNQ_@44 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@43 1
           in let! u3_37_0_@UNQ_@45_@EVL = u3_37_0_@UNQ_@44
              in case u3_37_0_@UNQ_@45_@EVL of
                   False  -> let
                               u5_13 = - Num_@DCT_@u88_18_0 n_@UNQ_@43 1
                             in let
                                  u5_12 = fact u5_13
                                in let
                                     u5_9 = * Num_@DCT_@u88_18_0 n_@UNQ_@43 u5_12
                                   in u5_9
                   True  -> 1
in let
     BinTree = \x1_@UNQ_@47 ->
                 \x2_@UNQ_@48 ->
                   \x3_@UNQ_@49 ->
                     BinTree MainOpts.x1_@UNQ_@47 MainOpts.x2_@UNQ_@48 MainOpts.x3_@UNQ_@49
   in let
        countLeafs = \x1_@UNQ_@50 ->
                       let! u3_209_0_@UNQ_@52_@EVL = x1_@UNQ_@50
                       in case u3_209_0_@UNQ_@52_@EVL of
                            BinTree l_@UNQ_@53_@FLD_@0 u3_242_0_@UNQ_@54_@FLD_@1 r_@UNQ_@55_@FLD_@2 -> let
                                                                                                         u5_39 = countLeafs r_@UNQ_@55_@FLD_@2
                                                                                                       in let
                                                                                                            u5_38 = countLeafs l_@UNQ_@53_@FLD_@0
                                                                                                          in let
                                                                                                               u5_35 = + Num_@DCT_@u88_18_0 u5_38 1
                                                                                                             in let
                                                                                                                  u5_32 = + Num_@DCT_@u88_18_0 u5_35 u5_39
                                                                                                                in u5_32
                            Leaf u3_218_0_@UNQ_@58_@FLD_@0 -> 1
      in let
           Leaf = \x1_@UNQ_@46 ->
                    Leaf MainOpts.x1_@UNQ_@46
         in let
              n_@NEW_@15_@UNQ_@61_@CCN = \x1_@NEW_@16_@UNQ_@59 ->
                                           let
                                             u5_51 = - Num_@DCT_@u88_18_0 x1_@NEW_@16_@UNQ_@59 1
                                           in let
                                                sub_@UNQ_@67 = genBalancedBinTree u5_51
                                              in let
                                                   u5_57 = ()
                                                 in BinTree sub_@UNQ_@67 u5_57 sub_@UNQ_@67
              genBalancedBinTree = \x1_@UNQ_@59 ->
                                     let
                                       n_@UNQ_@61_@CCN = n_@NEW_@15_@UNQ_@61_@CCN x1_@UNQ_@59
                                     in let
                                          u3_346_0_@UNQ_@69 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@59 1
                                        in let! u3_346_0_@UNQ_@70_@EVL = u3_346_0_@UNQ_@69
                                           in case u3_346_0_@UNQ_@70_@EVL of
                                                False  -> n_@UNQ_@61_@CCN
                                                True  -> let
                                                           u5_65 = ()
                                                         in let
                                                              u5_64 = Leaf u5_65
                                                            in u5_64
            in let
                 mapTreeUnitToFac = \x1_@UNQ_@71 ->
                                      let! u3_513_0_@UNQ_@73_@EVL = x1_@UNQ_@71
                                      in case u3_513_0_@UNQ_@73_@EVL of
                                           BinTree l_@UNQ_@74_@FLD_@0 u3_562_0_@UNQ_@75_@FLD_@1 r_@UNQ_@76_@FLD_@2 -> let
                                                                                                                        r'_@UNQ_@80 = mapTreeUnitToFac r_@UNQ_@76_@FLD_@2
                                                                                                                      in let
                                                                                                                           l'_@UNQ_@79 = mapTreeUnitToFac l_@UNQ_@74_@FLD_@0
                                                                                                                         in let
                                                                                                                              u5_78 = fact 12
                                                                                                                            in BinTree l'_@UNQ_@79 u5_78 r'_@UNQ_@80
                                           Leaf u3_522_0_@UNQ_@81_@FLD_@0 -> let
                                                                               u5_80 = fact 12
                                                                             in let
                                                                                  u5_79 = Leaf u5_80
                                                                                in u5_79
               in let
                    mirror = \x1_@UNQ_@82 ->
                               let! u3_699_0_@UNQ_@86_@EVL = x1_@UNQ_@82
                               in case u3_699_0_@UNQ_@86_@EVL of
                                    BinTree l_@UNQ_@87_@FLD_@0 a_@UNQ_@88_@FLD_@1 r_@UNQ_@89_@FLD_@2 -> let
                                                                                                          u5_90 = mirror l_@UNQ_@87_@FLD_@0
                                                                                                        in let
                                                                                                             u5_89 = mirror r_@UNQ_@89_@FLD_@2
                                                                                                           in let
                                                                                                                u5_86 = BinTree u5_89 a_@UNQ_@88_@FLD_@1 u5_90
                                                                                                              in u5_86
                                    Leaf __@UNQ_@93 -> x1_@UNQ_@82
                  in let
                       u5_94 = genBalancedBinTree 20
                     in let
                          u5_93 = mapTreeUnitToFac u5_94
                        in let
                             testTree = mirror u5_93
                           in let
                                testBinTreeNoInternals = countLeafs testTree
                              in let
                                   main = print Show_@DCT_@u95_17_0 testBinTreeNoInternals
                                 in let
                                      u5_103 = ()
                                    in let
                                         main = ehcRunMain main u5_103
                                       in main
("opt-let",main)
("opt-let",MainOpts.main)
("opt-let",MainOpts.testBinTreeNoInternals)
("opt-let",MainOpts.testTree)
("opt-let",MainOpts.u5_93)
("opt-let",MainOpts.u5_94)
("opt-let",MainOpts.u5_86)
("opt-let",MainOpts.u5_79)
("opt-let",MainOpts.u5_64)
("opt-let",MainOpts.u3_346_0_@UNQ_@69)
("opt-let",MainOpts.sub_@UNQ_@67)
("opt-let",MainOpts.u5_51)
("opt-let",MainOpts.u5_32)
("opt-let",MainOpts.u5_35)
("opt-let",MainOpts.u5_38)
("opt-let",MainOpts.u5_39)
("opt-AltCon",[7_4,7_5])
("opt-let",MainOpts.u5_9)
("opt-let",MainOpts.u5_12)
("opt-let",MainOpts.u5_13)
("opt-let",MainOpts.u3_37_0_@UNQ_@44)
("Transformation applied: ",22)
let
  fact = \n_@UNQ_@43 ->
           let! u3_37_0_@UNQ_@44 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@43 1
           in let! u3_37_0_@UNQ_@45_@EVL = u3_37_0_@UNQ_@44
              in case u3_37_0_@UNQ_@45_@EVL of
                   False  -> let! u5_13 = - Num_@DCT_@u88_18_0 n_@UNQ_@43 1
                             in let! u5_12 = fact u5_13
                                in let! u5_9 = * Num_@DCT_@u88_18_0 n_@UNQ_@43 u5_12
                                   in u5_9
                   True  -> 1
in let
     BinTree = \x1_@UNQ_@47 ->
                 \x2_@UNQ_@48 ->
                   \x3_@UNQ_@49 ->
                     BinTree MainOpts.x1_@UNQ_@47 MainOpts.x2_@UNQ_@48 MainOpts.x3_@UNQ_@49
   in let
        countLeafs = \x1_@UNQ_@50 ->
                       let! u3_209_0_@UNQ_@52_@EVL = x1_@UNQ_@50
                       in case u3_209_0_@UNQ_@52_@EVL of
                            BinTree l_@UNQ_@53_@FLD_@0 u3_242_0_@UNQ_@54_@FLD_@1 r_@UNQ_@55_@FLD_@2 -> let! u7_4 = l_@UNQ_@53_@FLD_@0
                                                                                                       in let! u7_5 = r_@UNQ_@55_@FLD_@2
                                                                                                          in let! u5_39 = countLeafs r_@UNQ_@55_@FLD_@2
                                                                                                             in let! u5_38 = countLeafs l_@UNQ_@53_@FLD_@0
                                                                                                                in let! u5_35 = + Num_@DCT_@u88_18_0 u5_38 1
                                                                                                                   in let! u5_32 = + Num_@DCT_@u88_18_0 u5_35 u5_39
                                                                                                                      in u5_32
                            Leaf u3_218_0_@UNQ_@58_@FLD_@0 -> 1
      in let
           Leaf = \x1_@UNQ_@46 ->
                    Leaf MainOpts.x1_@UNQ_@46
         in let
              n_@NEW_@15_@UNQ_@61_@CCN = \x1_@NEW_@16_@UNQ_@59 ->
                                           let! u5_51 = - Num_@DCT_@u88_18_0 x1_@NEW_@16_@UNQ_@59 1
                                           in let! sub_@UNQ_@67 = genBalancedBinTree u5_51
                                              in let
                                                   u5_57 = ()
                                                 in BinTree sub_@UNQ_@67 u5_57 sub_@UNQ_@67
              genBalancedBinTree = \x1_@UNQ_@59 ->
                                     let
                                       n_@UNQ_@61_@CCN = n_@NEW_@15_@UNQ_@61_@CCN x1_@UNQ_@59
                                     in let! u3_346_0_@UNQ_@69 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@59 1
                                        in let! u3_346_0_@UNQ_@70_@EVL = u3_346_0_@UNQ_@69
                                           in case u3_346_0_@UNQ_@70_@EVL of
                                                False  -> n_@UNQ_@61_@CCN
                                                True  -> let
                                                           u5_65 = ()
                                                         in let! u5_64 = Leaf u5_65
                                                            in u5_64
            in let
                 mapTreeUnitToFac = \x1_@UNQ_@71 ->
                                      let! u3_513_0_@UNQ_@73_@EVL = x1_@UNQ_@71
                                      in case u3_513_0_@UNQ_@73_@EVL of
                                           BinTree l_@UNQ_@74_@FLD_@0 u3_562_0_@UNQ_@75_@FLD_@1 r_@UNQ_@76_@FLD_@2 -> let
                                                                                                                        r'_@UNQ_@80 = mapTreeUnitToFac r_@UNQ_@76_@FLD_@2
                                                                                                                      in let
                                                                                                                           l'_@UNQ_@79 = mapTreeUnitToFac l_@UNQ_@74_@FLD_@0
                                                                                                                         in let
                                                                                                                              u5_78 = fact 12
                                                                                                                            in BinTree l'_@UNQ_@79 u5_78 r'_@UNQ_@80
                                           Leaf u3_522_0_@UNQ_@81_@FLD_@0 -> let
                                                                               u5_80 = fact 12
                                                                             in let! u5_79 = Leaf u5_80
                                                                                in u5_79
               in let
                    mirror = \x1_@UNQ_@82 ->
                               let! u3_699_0_@UNQ_@86_@EVL = x1_@UNQ_@82
                               in case u3_699_0_@UNQ_@86_@EVL of
                                    BinTree l_@UNQ_@87_@FLD_@0 a_@UNQ_@88_@FLD_@1 r_@UNQ_@89_@FLD_@2 -> let
                                                                                                          u5_90 = mirror l_@UNQ_@87_@FLD_@0
                                                                                                        in let
                                                                                                             u5_89 = mirror r_@UNQ_@89_@FLD_@2
                                                                                                           in let! u5_86 = BinTree u5_89 a_@UNQ_@88_@FLD_@1 u5_90
                                                                                                              in u5_86
                                    Leaf __@UNQ_@93 -> x1_@UNQ_@82
                  in let! u5_94 = genBalancedBinTree 20
                     in let! u5_93 = mapTreeUnitToFac u5_94
                        in let! testTree = mirror u5_93
                           in let! testBinTreeNoInternals = countLeafs testTree
                              in let! main = print Show_@DCT_@u95_17_0 testBinTreeNoInternals
                                 in let
                                      u5_103 = ()
                                    in let! main = ehcRunMain main u5_103
                                       in main

BinTreeNoInternalsViaList:
("TyGam: ",BinTree ->
  Type Error: MainOpts.BinTree dataTgi)
("DataGam: ",BinTree a 5 6 7 8 9 10 11 12
  MainOpts.Leaf {_u a (5,6)}
  MainOpts.BinTree {_u (BinTree (5 6 7 8 9 10 11 12) (a)) (7,8)} {_u a (9,10)} {_u (BinTree (5 6 7 8 9 10 11 12) (a)) (11,12)})
("num constraints: ",995)
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}, a2_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@45}, a_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@103}})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]})
("still to do cs",0,54)
("Tys",__@UNQ_@87 ->
  {_u (forall {} . cs: 0 => CA@970) (CA@1043,CA@1044)}
n_@UNQ_@35 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
main ->
  {_u (forall {CA@5551,CA@5132} . cs: 0 => (CA@5551 CA@5132)) (lone,lzero)}
testBinTreeNoInternalsViaList ->
  {_u (forall {} . cs: 0 => Int) (lzero,lzero)}
u5_57 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
u5_80 ->
  {_u (forall {} . cs: 0 => Int) (top,lzero)}
mirror ->
  {_u (forall {CA@1043,CA@1044,CA@967,CA@970} . cs: 0 => ({_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) lzero})) (lzero,lzero)}
u5_86 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970))) (lzero,lone)}
Leaf ->
  {_u (forall {CA@418,CA@415,CA@419,CA@414,CA@423,CA@422,CA@425,CA@421,CA@420,CA@412} . cs: 0 => ({_u CA@412 (CA@414,CA@415)} -> {_u (BinTree (CA@414 CA@415 CA@418 CA@419 CA@420 CA@421 CA@422 CA@423) (CA@412)) CA@425})) (top,top)}
u5_97 ->
  {_u (forall {} . cs: 0 => ([] (lzero lzero lzero lzero) (Int))) (lzero,lzero)}
u5_64 ->
  {_u (forall {CA@3703,CA@3702,CA@3700,CA@3675,CA@3695,CA@3699,CA@3697} . cs: 0 => (BinTree (lzero CA@3675 CA@3695 CA@3697 CA@3703 CA@3702 CA@3700 CA@3699) (()))) (lzero,lone)}
BinTree ->
  {_u (forall {CA@403,CA@402,CA@401,CA@397,CA@395,CA@376,CA@377,CA@384,CA@385,CA@386,CA@387,CA@380,CA@381,CA@378} . cs: 4 => ({_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) (lzero,lzero)} -> {_u ({_u CA@378 (CA@401,CA@402)} -> {_u ({_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) (CA@384,CA@385)} -> {_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) CA@395}) CA@397}) CA@403})
           CA@397 . CA@376 == lzero
           CA@397 . CA@377 == lzero
           CA@397 . CA@380 == CA@401
           CA@397 . CA@381 == CA@402
      ) (top,top)}
r_@UNQ_@70_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@880 CA@881 lzero lzero CA@819 CA@820 lzero lzero) (CA@898))) (lzero,lzero)}
u5_79 ->
  {_u (forall {CA@3717,CA@3714,CA@3710,CA@3715,CA@3712,CA@3718,CA@844} . cs: 1 => (BinTree (CA@844 lzero CA@3710 CA@3712 CA@3718 CA@3717 CA@3715 CA@3714) (Int))
           CA@865 (+) lzero == CA@865
      ) (CA@865,lone)}
u3_349_0_@UNQ_@63 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
sub_@UNQ_@61 ->
  {_u (forall {} . cs: 0 => (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (()))) (lzero,lone)}
fact ->
  {_u (forall {} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u Int top})) (lzero,lzero)}
l_@UNQ_@45_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27))) (CA@101,CA@106)}
u3_525_0_@UNQ_@75_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@898) (CA@880,CA@881)}
a_@UNQ_@46_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@27) (CA@115,lzero)}
a_@UNQ_@51_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@27) (CA@143,lzero)}
l_@UNQ_@81_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970))) (lzero,lzero)}
u3_565_0_@UNQ_@69_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@898) (CA@819,CA@820)}
a_@UNQ_@82_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@970) (lzero,CA@967)}
n_@UNQ_@55_@CCN ->
  {_u (forall {} . cs: 0 => (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (()))) (lzero,{set {0,1}})}
u5_104 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
u3_37_0_@UNQ_@37_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
flatten ->
  {_u (forall {CA@143,CA@115,CA@101,CA@106,CA@27} . cs: 31 => ({_u (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27)) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero})
           CA@106 U lzero == {set {0,1}}
           CA@106 U lzero == {set {0,1}}
           lone > CA@106 == CA@106
           CA@106 > CA@101 == CA@101
           CA@106 > lone == CA@106
           CA@106 > lone == CA@106
           CA@106 > lone == CA@106
           {set {0,1}} > CA@115 == CA@115
           CA@106 (+) lzero == CA@106
           CA@106 (+) lzero == CA@106
           lzero U CA@115 == CA@115
           lzero U CA@101 == CA@101
           CA@106 > lzero == lzero
           CA@106 (+) lzero == CA@106
           CA@106 > lzero == lzero
           lzero > CA@106 == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . {set {0,1}} == {set {0,1}}
           CA@106 . {set {0,1}} == {set {0,1}}
           lone U CA@106 == CA@106
           lone U CA@106 == CA@106
           lzero > CA@106 == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . {set {0,1}} == {set {0,1}}
           CA@106 . {set {0,1}} == {set {0,1}}
           lone U CA@106 == CA@106
           lzero U CA@143 == CA@143
      ) (lzero,lzero)}
u5_25 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_26 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
genBalancedBinTree ->
  {_u (forall {CA@3675} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) lzero})) (lzero,lzero)}
mapTreeUnitToFac ->
  {_u (forall {CA@820,CA@881,CA@880,CA@865,CA@819,CA@774,CA@3647,CA@898} . cs: 5 => ({_u (BinTree (CA@880 CA@881 lzero lzero CA@819 CA@820 lzero lzero) (CA@898)) (lzero,lone)} -> {_u (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int)) CA@865})
           lzero U CA@865 == CA@865
           CA@774 U CA@865 == CA@865
           CA@865 (+) lzero == CA@865
           CA@865 (+) lzero == CA@865
           CA@865 (+) lzero == CA@865
      ) (lzero,lzero)}
l_@UNQ_@68_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@880 CA@881 lzero lzero CA@819 CA@820 lzero lzero) (CA@898))) (lzero,lzero)}
x1_@UNQ_@76 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970))) (lzero,{set {1,infty}})}
x1_@UNQ_@65 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@880 CA@881 lzero lzero CA@819 CA@820 lzero lzero) (CA@898))) (lzero,lone)}
x1_@UNQ_@39 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378))) (lzero,lzero)}
x1_@UNQ_@38 ->
  {_u (forall {} . cs: 0 => CA@412) (CA@414,CA@415)}
x3_@UNQ_@41 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378))) (CA@384,CA@385)}
x2_@UNQ_@40 ->
  {_u (forall {} . cs: 0 => CA@378) (CA@401,CA@402)}
x1_@UNQ_@42 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27))) (lzero,lone)}
x1_@UNQ_@53 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
u5_8 ->
  {_u (forall {} . cs: 1 => ([] (lzero lzero lzero lzero) (CA@27))
           lzero U CA@115 == CA@115
      ) (lzero,{set {0,1}})}
u3_215_0_@UNQ_@44_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27))) (lone,lomega)}
u3_702_0_@UNQ_@80_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970))) (lone,lomega)}
u5_51 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
u3_349_0_@UNQ_@64_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
u3_516_0_@UNQ_@67_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@880 CA@881 lzero lzero CA@819 CA@820 lzero lzero) (CA@898))) (lone,lomega)}
main ->
  {_u (forall {CA@5550} . cs: 0 => (CA@5551 CA@5550)) (lone,lone)}
u5_22 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
l'_@UNQ_@73 ->
  {_u (forall {} . cs: 1 => (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int))
           CA@865 (+) lzero == CA@865
      ) (CA@865,lzero)}
r_@UNQ_@83_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970))) (lzero,lzero)}
r'_@UNQ_@74 ->
  {_u (forall {} . cs: 1 => (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int))
           CA@865 (+) lzero == CA@865
      ) (CA@865,lzero)}
u5_90 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970))) (lzero,lzero)}
u5_89 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970))) (lzero,lzero)}
u5_94 ->
  {_u (forall {CA@4387,CA@4385,CA@4386,CA@4388,CA@4389} . cs: 0 => (BinTree (lzero CA@4389 CA@4386 CA@4385 CA@4388 CA@4387 lzero lone) (()))) (lzero,lzero)}
u5_93 ->
  {_u (forall {CA@4673,CA@4675,CA@4674,CA@4671,CA@4670} . cs: 0 => (BinTree (CA@4674 lzero CA@4671 CA@4673 CA@4670 CA@4675 lzero lzero) (Int))) (lzero,lzero)}
u5_65 ->
  {_u (forall {} . cs: 0 => ()) (lzero,CA@3675)}
u5_7 ->
  {_u (forall {} . cs: 4 => ([] (lzero lzero lzero lzero) (CA@27))
           lzero U CA@101 == CA@101
           CA@106 > lzero == lzero
           CA@106 (+) lzero == CA@106
           CA@106 > lzero == lzero
      ) (lzero,CA@106)}
x1_@NEW_@17_@UNQ_@53 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
u5_11 ->
  {_u (forall {CA@154,CA@149} . cs: 1 => ([] (lzero lzero CA@154 CA@149) (CA@27))
           lzero U CA@143 == CA@143
      ) (lzero,lone)}
u5_5 ->
  {_u (forall {} . cs: 8 => ([] (lzero lzero lzero lzero) (CA@27))
           lone U CA@106 == CA@106
           lzero > CA@106 == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . {set {0,1}} == {set {0,1}}
           CA@106 . {set {0,1}} == {set {0,1}}
           lone U CA@106 == CA@106
      ) (lzero,lone)}
u5_10 ->
  {_u (forall {} . cs: 0 => ([] (lzero lzero lzero lzero) (CA@27))) (lzero,lzero)}
testTree ->
  {_u (forall {CA@4997,CA@4996,CA@4999,CA@5000} . cs: 0 => (BinTree (CA@4997 CA@4999 lzero lzero CA@5000 CA@4996 lzero lzero) (Int))) (lzero,lzero)}
u5_78 ->
  {_u (forall {} . cs: 0 => Int) (top,lzero)}
u3_37_0_@UNQ_@36 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
n_@NEW_@16_@UNQ_@55_@CCN ->
  {_u (forall {CA@3675} . cs: 0 => ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) lzero})) (lzero,lzero)}
r_@UNQ_@47_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27))) (lzero,lzero)})
"start optimizing"
let
  flatten = (\x1_@UNQ_@42 ->
               let!
                 u3_215_0_@UNQ_@44_@EVL = x1_@UNQ_@42 :: {_u (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27)) lzero}
               in
                 (case u3_215_0_@UNQ_@44_@EVL :: {_u (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27)) lone} of
                    BinTree l_@UNQ_@45_@FLD_@0 a_@UNQ_@46_@FLD_@1 r_@UNQ_@47_@FLD_@2 -> let
                                                                                          u5_10 = (flatten :: {_u ({_u (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27)) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) lone} r_@UNQ_@47_@FLD_@2) :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                                                                                        in
                                                                                          let
                                                                                            u5_8 = ((: :: {_u ({_u CA@27 (lzero,lzero)} -> {_u ({_u ([] (lzero lzero lzero lzero) (CA@27)) (lzero,lzero)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) lone}) top} a_@UNQ_@46_@FLD_@1) :: {_u ({_u ([] (lzero lzero lzero lzero) (CA@27)) (lzero,lzero)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) lone} u5_10) :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                                                                                          in
                                                                                            let
                                                                                              u5_7 = (flatten :: {_u ({_u (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27)) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) lone} l_@UNQ_@45_@FLD_@0) :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                                                                                            in
                                                                                              let
                                                                                                u5_5 = ((++ :: {_u ({_u ([] (lzero lzero lzero lzero) (CA@27)) (lzero,CA@106)} -> {_u ({_u ([] (lzero lzero lzero lzero) (CA@27)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) CA@106}) top} u5_7) :: {_u ({_u ([] (lzero lzero lzero lzero) (CA@27)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) CA@106} u5_8) :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                                                                                              in
                                                                                                u5_5 :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                    Leaf a_@UNQ_@51_@FLD_@0 -> let
                                                 u5_11 = ((: :: {_u ({_u CA@27 (lzero,lzero)} -> {_u ({_u ([] (lzero lzero CA@154 CA@149) (CA@27)) (CA@154,CA@149)} -> {_u ([] (lzero lzero CA@154 CA@149) (CA@27)) lzero}) lone}) top} a_@UNQ_@51_@FLD_@0) :: {_u ({_u ([] (lzero lzero CA@154 CA@149) (CA@27)) (CA@154,CA@149)} -> {_u ([] (lzero lzero CA@154 CA@149) (CA@27)) lzero}) lone} []) :: {_u ([] (lzero lzero CA@154 CA@149) (CA@27)) lzero}
                                               in
                                                 u5_11 :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                 ) :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
            ) :: {_u ({_u (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27)) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) lzero}
in
  let
    fact = (\n_@UNQ_@35 ->
              let
                u3_37_0_@UNQ_@36 = (((<= :: {_u ({_u (_'Ord (CA@2767 CA@2764 CA@2763 CA@2829 lone CA@2774 CA@2773 CA@2776 lone CA@2778 CA@2772 CA@2772 CA@2771 lone top CA@2786 lone CA@2781 CA@2783 CA@2783 CA@2780 lone top CA@2804 CA@2803 CA@2833 CA@2830 CA@2808 CA@2806 CA@2806 CA@2805 lone top lone lone lzero lone lone lzero lone top CA@2766 CA@2765 CA@2812 CA@2811 CA@2814 CA@2813 CA@2810 top CA@2769 CA@2770 CA@2816 CA@2815 CA@2819 CA@2817 CA@2820 top CA@2828 lone CA@2823 CA@2824 CA@2824 CA@2822 lone top CA@2826 CA@2827 CA@2762 CA@2760 CA@2760 CA@2759 lone top CA@2832 CA@2834 CA@2791 CA@2795 CA@2795 CA@2793 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} n_@UNQ_@35) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
              in
                let!
                  u3_37_0_@UNQ_@37_@EVL = u3_37_0_@UNQ_@36 :: {_u Bool top}
                in
                  (case u3_37_0_@UNQ_@37_@EVL :: {_u Bool lone} of
                     False -> let
                                u5_26 = (((- :: {_u ({_u (_'Num (CA@3047 CA@3046 CA@3048 top CA@3050 CA@3057 CA@3058 CA@3061 lone CA@3055 CA@3059 CA@3059 CA@3060 lone top CA@3094 lone CA@3092 CA@3097 CA@3097 CA@3093 lone top CA@3090 CA@3089 lone lone lzero lone lone lzero lone top CA@3030 CA@3031 CA@3079 CA@3075 CA@3075 CA@3077 lone top CA@3032 lone CA@3082 CA@3039 CA@3039 CA@3040 lone top CA@3035 lone CA@3044 lone top top CA@3036 CA@3074 lone CA@3074 CA@3028 CA@3029 CA@3070 CA@3072 top CA@3034 lone CA@3064 lone top CA@3052 CA@3049 CA@3067 CA@3068 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@35) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                              in
                                let
                                  u5_25 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} u5_26) :: {_u Int top}
                                in
                                  let
                                    u5_22 = (((* :: {_u ({_u (_'Num (CA@3339 CA@3340 CA@3359 top CA@3345 CA@3360 CA@3361 CA@3362 lone CA@3364 CA@3358 CA@3358 CA@3355 lone top CA@3356 lone CA@3348 CA@3353 CA@3353 CA@3349 lone top CA@3317 CA@3319 CA@3294 lone CA@3318 CA@3323 CA@3323 CA@3320 lone top lone lone lzero lone lone lzero lone top CA@3292 lone CA@3299 CA@3301 CA@3301 CA@3296 lone top CA@3341 lone CA@3302 lone top top CA@3337 CA@3330 lone CA@3330 CA@3336 CA@3334 CA@3326 CA@3313 top CA@3335 lone CA@3311 lone top CA@3342 CA@3343 CA@3310 CA@3325 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@35) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_25) :: {_u Int top}
                                  in
                                    u5_22 :: {_u Int top}
                     True -> 1 :: {_u Int top}
                  ) :: {_u Int top}
           ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lzero}
  in
    let
      BinTree = (\x1_@UNQ_@39 ->
                   (\x2_@UNQ_@40 ->
                      (\x3_@UNQ_@41 ->
                         (MainOpts.BinTree x1_@UNQ_@39 x2_@UNQ_@40 x3_@UNQ_@41) :: {_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) CA@395}
                      ) :: {_u ({_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) (CA@384,CA@385)} -> {_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) CA@395}) CA@397}
                   ) :: {_u ({_u CA@378 (CA@401,CA@402)} -> {_u ({_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) (CA@384,CA@385)} -> {_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) CA@395}) CA@397}) CA@403}
                ) :: {_u ({_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) (lzero,lzero)} -> {_u ({_u CA@378 (CA@401,CA@402)} -> {_u ({_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) (CA@384,CA@385)} -> {_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) CA@395}) CA@397}) CA@403}) top}
    in
      let
        Leaf = (\x1_@UNQ_@38 ->
                  (MainOpts.Leaf x1_@UNQ_@38) :: {_u (BinTree (CA@414 CA@415 CA@418 CA@419 CA@420 CA@421 CA@422 CA@423) (CA@412)) CA@425}
               ) :: {_u ({_u CA@412 (CA@414,CA@415)} -> {_u (BinTree (CA@414 CA@415 CA@418 CA@419 CA@420 CA@421 CA@422 CA@423) (CA@412)) CA@425}) top}
      in
        let
          n_@NEW_@16_@UNQ_@55_@CCN = (\x1_@NEW_@17_@UNQ_@53 ->
                                        let
                                          u5_51 = (((- :: {_u ({_u (_'Num (CA@3770 CA@3769 CA@3771 top CA@3773 CA@3780 CA@3781 CA@3784 lone CA@3778 CA@3782 CA@3782 CA@3783 lone top CA@3817 lone CA@3815 CA@3820 CA@3820 CA@3816 lone top CA@3813 CA@3812 lone lone lzero lone lone lzero lone top CA@3753 CA@3754 CA@3802 CA@3798 CA@3798 CA@3800 lone top CA@3755 lone CA@3805 CA@3762 CA@3762 CA@3763 lone top CA@3758 lone CA@3767 lone top top CA@3759 CA@3797 lone CA@3797 CA@3751 CA@3752 CA@3793 CA@3795 top CA@3757 lone CA@3787 lone top CA@3775 CA@3772 CA@3790 CA@3791 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} x1_@NEW_@17_@UNQ_@53) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                        in
                                          let
                                            sub_@UNQ_@61 = (genBalancedBinTree :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) lzero}) lone} u5_51) :: {_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) lzero}
                                          in
                                            let
                                              u5_57 = () :: {_u () lzero}
                                            in
                                              (((BinTree :: {_u ({_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) (lzero,lzero)} -> {_u ({_u () (lzero,lzero)} -> {_u ({_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) (lzero,lone)} -> {_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) lzero}) lone}) lone}) lone} sub_@UNQ_@61) :: {_u ({_u () (lzero,lzero)} -> {_u ({_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) (lzero,lone)} -> {_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) lzero}) lone}) lone} u5_57) :: {_u ({_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) (lzero,lone)} -> {_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) lzero}) lone} sub_@UNQ_@61) :: {_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) lzero}
                                     ) :: {_u ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) lzero}) lzero}
          genBalancedBinTree = (\x1_@UNQ_@53 ->
                                  let
                                    n_@UNQ_@55_@CCN = (n_@NEW_@16_@UNQ_@55_@CCN :: {_u ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) lzero}) lone} x1_@UNQ_@53) :: {_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) lzero}
                                  in
                                    let
                                      u3_349_0_@UNQ_@63 = (((< :: {_u ({_u (_'Ord (CA@4095 CA@4096 CA@4103 CA@4055 lone CA@4104 CA@4100 CA@4102 lone CA@4101 CA@4099 CA@4099 CA@4061 lone top CA@4060 lone CA@4066 CA@4064 CA@4064 CA@4057 lone top CA@4069 CA@4068 CA@4052 CA@4053 CA@4071 CA@4073 CA@4073 CA@4072 lone top CA@4048 lone CA@4081 CA@4077 CA@4077 CA@4078 lone top CA@4091 CA@4092 CA@4086 CA@4083 CA@4084 CA@4087 CA@4088 top CA@4093 CA@4094 CA@4082 CA@4038 CA@4039 CA@4036 CA@4037 top CA@4089 lone CA@4034 CA@4033 CA@4033 CA@4028 lone top lone lone lzero lone lone lzero lone top CA@4051 CA@4050 CA@4041 CA@4043 CA@4043 CA@4044 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} x1_@UNQ_@53) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
                                    in
                                      let!
                                        u3_349_0_@UNQ_@64_@EVL = u3_349_0_@UNQ_@63 :: {_u Bool top}
                                      in
                                        (case u3_349_0_@UNQ_@64_@EVL :: {_u Bool lone} of
                                           False -> n_@UNQ_@55_@CCN :: {_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) lzero}
                                           True -> let
                                                     u5_65 = () :: {_u () lzero}
                                                   in
                                                     let
                                                       u5_64 = (Leaf :: {_u ({_u () (lzero,CA@3675)} -> {_u (BinTree (lzero CA@3675 CA@3695 CA@3697 CA@3703 CA@3702 CA@3700 CA@3699) (())) lzero}) lone} u5_65) :: {_u (BinTree (lzero CA@3675 CA@3695 CA@3697 CA@3703 CA@3702 CA@3700 CA@3699) (())) lzero}
                                                     in
                                                       u5_64 :: {_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) lzero}
                                        ) :: {_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) lzero}
                               ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@3675 lzero lzero lzero lzero lzero lone) (())) lzero}) lzero}
        in
          let
            mapTreeUnitToFac = (\x1_@UNQ_@65 ->
                                  let!
                                    u3_516_0_@UNQ_@67_@EVL = x1_@UNQ_@65 :: {_u (BinTree (CA@880 CA@881 lzero lzero CA@819 CA@820 lzero lzero) (CA@898)) lzero}
                                  in
                                    (case u3_516_0_@UNQ_@67_@EVL :: {_u (BinTree (CA@880 CA@881 lzero lzero CA@819 CA@820 lzero lzero) (CA@898)) lone} of
                                       BinTree l_@UNQ_@68_@FLD_@0 u3_565_0_@UNQ_@69_@FLD_@1 r_@UNQ_@70_@FLD_@2 -> let
                                                                                                                    r'_@UNQ_@74 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@880 CA@881 lzero lzero CA@819 CA@820 lzero lzero) (CA@898)) (lzero,lone)} -> {_u (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int)) CA@865}) lone} r_@UNQ_@70_@FLD_@2) :: {_u (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int)) CA@865}
                                                                                                                  in
                                                                                                                    let
                                                                                                                      l'_@UNQ_@73 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@880 CA@881 lzero lzero CA@819 CA@820 lzero lzero) (CA@898)) (lzero,lone)} -> {_u (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int)) CA@865}) lone} l_@UNQ_@68_@FLD_@0) :: {_u (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int)) CA@865}
                                                                                                                    in
                                                                                                                      let
                                                                                                                        u5_78 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 12) :: {_u Int top}
                                                                                                                      in
                                                                                                                        (((BinTree :: {_u ({_u (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int)) (lzero,lzero)} -> {_u ({_u Int (lzero,lzero)} -> {_u ({_u (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int)) (CA@774,lzero)} -> {_u (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int)) CA@865}) lone}) lone}) lone} l'_@UNQ_@73) :: {_u ({_u Int (lzero,lzero)} -> {_u ({_u (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int)) (CA@774,lzero)} -> {_u (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int)) CA@865}) lone}) lone} u5_78) :: {_u ({_u (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int)) (CA@774,lzero)} -> {_u (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int)) CA@865}) lone} r'_@UNQ_@74) :: {_u (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int)) CA@865}
                                       Leaf u3_525_0_@UNQ_@75_@FLD_@0 -> let
                                                                           u5_80 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 12) :: {_u Int top}
                                                                         in
                                                                           let
                                                                             u5_79 = (Leaf :: {_u ({_u Int (CA@844,lzero)} -> {_u (BinTree (CA@844 lzero CA@3710 CA@3712 CA@3718 CA@3717 CA@3715 CA@3714) (Int)) CA@865}) lone} u5_80) :: {_u (BinTree (CA@844 lzero CA@3710 CA@3712 CA@3718 CA@3717 CA@3715 CA@3714) (Int)) CA@865}
                                                                           in
                                                                             u5_79 :: {_u (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int)) CA@865}
                                    ) :: {_u (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int)) CA@865}
                               ) :: {_u ({_u (BinTree (CA@880 CA@881 lzero lzero CA@819 CA@820 lzero lzero) (CA@898)) (lzero,lone)} -> {_u (BinTree (CA@3647 lzero lzero lzero lzero lzero CA@774 lzero) (Int)) CA@865}) lzero}
          in
            let
              mirror = (\x1_@UNQ_@76 ->
                          let!
                            u3_702_0_@UNQ_@80_@EVL = x1_@UNQ_@76 :: {_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) lzero}
                          in
                            (case u3_702_0_@UNQ_@80_@EVL :: {_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) lone} of
                               BinTree l_@UNQ_@81_@FLD_@0 a_@UNQ_@82_@FLD_@1 r_@UNQ_@83_@FLD_@2 -> let
                                                                                                     u5_90 = (mirror :: {_u ({_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) lzero}) lone} l_@UNQ_@81_@FLD_@0) :: {_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) lzero}
                                                                                                   in
                                                                                                     let
                                                                                                       u5_89 = (mirror :: {_u ({_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) lzero}) lone} r_@UNQ_@83_@FLD_@2) :: {_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) lzero}
                                                                                                     in
                                                                                                       let
                                                                                                         u5_86 = (((BinTree :: {_u ({_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) (lzero,lzero)} -> {_u ({_u CA@970 (lzero,CA@967)} -> {_u ({_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) (lzero,lzero)} -> {_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) lzero}) lone}) lone}) lone} u5_89) :: {_u ({_u CA@970 (lzero,CA@967)} -> {_u ({_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) (lzero,lzero)} -> {_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) lzero}) lone}) lone} a_@UNQ_@82_@FLD_@1) :: {_u ({_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) (lzero,lzero)} -> {_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) lzero}) lone} u5_90) :: {_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) lzero}
                                                                                                       in
                                                                                                         u5_86 :: {_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) lzero}
                               Leaf __@UNQ_@87 -> x1_@UNQ_@76 :: {_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) lzero}
                            ) :: {_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) lzero}
                       ) :: {_u ({_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1043 CA@1044 lzero lzero lzero CA@967 lzero lzero) (CA@970)) lzero}) lzero}
            in
              let
                u5_94 = (genBalancedBinTree :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@4389 CA@4386 CA@4385 CA@4388 CA@4387 lzero lone) (())) lzero}) lone} 20) :: {_u (BinTree (lzero CA@4389 CA@4386 CA@4385 CA@4388 CA@4387 lzero lone) (())) lzero}
              in
                let
                  u5_93 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@4964 CA@4962 lzero lzero CA@4961 CA@4957 lzero lzero) (())) (lzero,lone)} -> {_u (BinTree (CA@4674 lzero CA@4671 CA@4673 CA@4670 CA@4675 lzero lzero) (Int)) lzero}) lone} u5_94) :: {_u (BinTree (CA@4674 lzero CA@4671 CA@4673 CA@4670 CA@4675 lzero lzero) (Int)) lzero}
                in
                  let
                    testTree = (mirror :: {_u ({_u (BinTree (CA@4997 CA@4999 lzero lzero CA@5000 CA@4996 lzero lzero) (Int)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@4997 CA@4999 lzero lzero CA@5000 CA@4996 lzero lzero) (Int)) lzero}) lone} u5_93) :: {_u (BinTree (CA@4997 CA@4999 lzero lzero CA@5000 CA@4996 lzero lzero) (Int)) lzero}
                  in
                    let
                      u5_97 = (flatten :: {_u ({_u (BinTree (lzero lzero lzero lzero lzero lzero lzero lzero) (Int)) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) (Int)) lzero}) lone} testTree) :: {_u ([] (lzero lzero lzero lzero) (Int)) lzero}
                    in
                      let
                        testBinTreeNoInternalsViaList = (length :: {_u ({_u ([] (lzero CA@5089 lzero lzero) (Int)) (lzero,lone)} -> {_u Int lzero}) top} u5_97) :: {_u Int lzero}
                      in
                        let
                          main = ((print :: {_u ({_u (_'Show (CA@5172 CA@5175 lone lone lzero lone top CA@5178 CA@5176 CA@5170 CA@5171 CA@5141 lone CA@5135 CA@5138 CA@5174 CA@5136 CA@5137 CA@5139 CA@5164 CA@5163 CA@5160 CA@5159 CA@5156 CA@5155 CA@5162 CA@5161 CA@5158 CA@5157 CA@5169 CA@5134 CA@5140 CA@5167 lone CA@5166 CA@5168 CA@5151 CA@5144 CA@5149 CA@5145 CA@5150 CA@5147 CA@5152 CA@5146 CA@5153 CA@5148) (Int)) (lone,lone)} -> {_u ({_u Int (lone,lone)} -> {_u (CA@5551 CA@5132) lone}) lone}) top} Show_@DCT_@u95_17_0) :: {_u ({_u Int (lone,lone)} -> {_u (CA@5551 CA@5132) lone}) lone} testBinTreeNoInternalsViaList) :: {_u (CA@5551 CA@5132) lone}
                        in
                          let
                            u5_104 = () :: {_u () lzero}
                          in
                            let
                              main = ((ehcRunMain :: {_u ({_u (CA@5551 CA@5550) (lone,lone)} -> {_u ({_u () (lzero,lzero)} -> {_u (CA@5551 CA@5550) lone}) lone}) top} main) :: {_u ({_u () (lzero,lzero)} -> {_u (CA@5551 CA@5550) lone}) lone} u5_104) :: {_u (CA@5551 CA@5550) lone}
                            in
                              main :: {_u (CA@5551 CA@5599) lone}
let
  flatten = \x1_@UNQ_@42 ->
              let! u3_215_0_@UNQ_@44_@EVL = x1_@UNQ_@42
              in case u3_215_0_@UNQ_@44_@EVL of
                   BinTree l_@UNQ_@45_@FLD_@0 a_@UNQ_@46_@FLD_@1 r_@UNQ_@47_@FLD_@2 -> let
                                                                                         u5_10 = flatten r_@UNQ_@47_@FLD_@2
                                                                                       in let
                                                                                            u5_8 = : a_@UNQ_@46_@FLD_@1 u5_10
                                                                                          in let
                                                                                               u5_7 = flatten l_@UNQ_@45_@FLD_@0
                                                                                             in let
                                                                                                  u5_5 = ++ u5_7 u5_8
                                                                                                in u5_5
                   Leaf a_@UNQ_@51_@FLD_@0 -> let
                                                u5_11 = : a_@UNQ_@51_@FLD_@0 []
                                              in u5_11
in let
     fact = \n_@UNQ_@35 ->
              let
                u3_37_0_@UNQ_@36 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@35 1
              in let! u3_37_0_@UNQ_@37_@EVL = u3_37_0_@UNQ_@36
                 in case u3_37_0_@UNQ_@37_@EVL of
                      False  -> let
                                  u5_26 = - Num_@DCT_@u88_18_0 n_@UNQ_@35 1
                                in let
                                     u5_25 = fact u5_26
                                   in let
                                        u5_22 = * Num_@DCT_@u88_18_0 n_@UNQ_@35 u5_25
                                      in u5_22
                      True  -> 1
   in let
        BinTree = \x1_@UNQ_@39 ->
                    \x2_@UNQ_@40 ->
                      \x3_@UNQ_@41 ->
                        BinTree MainOpts.x1_@UNQ_@39 MainOpts.x2_@UNQ_@40 MainOpts.x3_@UNQ_@41
      in let
           Leaf = \x1_@UNQ_@38 ->
                    Leaf MainOpts.x1_@UNQ_@38
         in let
              n_@NEW_@16_@UNQ_@55_@CCN = \x1_@NEW_@17_@UNQ_@53 ->
                                           let
                                             u5_51 = - Num_@DCT_@u88_18_0 x1_@NEW_@17_@UNQ_@53 1
                                           in let
                                                sub_@UNQ_@61 = genBalancedBinTree u5_51
                                              in let
                                                   u5_57 = ()
                                                 in BinTree sub_@UNQ_@61 u5_57 sub_@UNQ_@61
              genBalancedBinTree = \x1_@UNQ_@53 ->
                                     let
                                       n_@UNQ_@55_@CCN = n_@NEW_@16_@UNQ_@55_@CCN x1_@UNQ_@53
                                     in let
                                          u3_349_0_@UNQ_@63 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@53 1
                                        in let! u3_349_0_@UNQ_@64_@EVL = u3_349_0_@UNQ_@63
                                           in case u3_349_0_@UNQ_@64_@EVL of
                                                False  -> n_@UNQ_@55_@CCN
                                                True  -> let
                                                           u5_65 = ()
                                                         in let
                                                              u5_64 = Leaf u5_65
                                                            in u5_64
            in let
                 mapTreeUnitToFac = \x1_@UNQ_@65 ->
                                      let! u3_516_0_@UNQ_@67_@EVL = x1_@UNQ_@65
                                      in case u3_516_0_@UNQ_@67_@EVL of
                                           BinTree l_@UNQ_@68_@FLD_@0 u3_565_0_@UNQ_@69_@FLD_@1 r_@UNQ_@70_@FLD_@2 -> let
                                                                                                                        r'_@UNQ_@74 = mapTreeUnitToFac r_@UNQ_@70_@FLD_@2
                                                                                                                      in let
                                                                                                                           l'_@UNQ_@73 = mapTreeUnitToFac l_@UNQ_@68_@FLD_@0
                                                                                                                         in let
                                                                                                                              u5_78 = fact 12
                                                                                                                            in BinTree l'_@UNQ_@73 u5_78 r'_@UNQ_@74
                                           Leaf u3_525_0_@UNQ_@75_@FLD_@0 -> let
                                                                               u5_80 = fact 12
                                                                             in let
                                                                                  u5_79 = Leaf u5_80
                                                                                in u5_79
               in let
                    mirror = \x1_@UNQ_@76 ->
                               let! u3_702_0_@UNQ_@80_@EVL = x1_@UNQ_@76
                               in case u3_702_0_@UNQ_@80_@EVL of
                                    BinTree l_@UNQ_@81_@FLD_@0 a_@UNQ_@82_@FLD_@1 r_@UNQ_@83_@FLD_@2 -> let
                                                                                                          u5_90 = mirror l_@UNQ_@81_@FLD_@0
                                                                                                        in let
                                                                                                             u5_89 = mirror r_@UNQ_@83_@FLD_@2
                                                                                                           in let
                                                                                                                u5_86 = BinTree u5_89 a_@UNQ_@82_@FLD_@1 u5_90
                                                                                                              in u5_86
                                    Leaf __@UNQ_@87 -> x1_@UNQ_@76
                  in let
                       u5_94 = genBalancedBinTree 20
                     in let
                          u5_93 = mapTreeUnitToFac u5_94
                        in let
                             testTree = mirror u5_93
                           in let
                                u5_97 = flatten testTree
                              in let
                                   testBinTreeNoInternalsViaList = length u5_97
                                 in let
                                      main = print Show_@DCT_@u95_17_0 testBinTreeNoInternalsViaList
                                    in let
                                         u5_104 = ()
                                       in let
                                            main = ehcRunMain main u5_104
                                          in main
("opt-let",main)
("opt-let",MainOpts.u5_86)
("opt-let",MainOpts.u5_79)
("opt-let",MainOpts.u5_64)
("opt-let",MainOpts.u3_349_0_@UNQ_@63)
("opt-let",MainOpts.sub_@UNQ_@61)
("opt-let",MainOpts.u5_51)
("opt-let",MainOpts.u5_22)
("opt-let",MainOpts.u5_25)
("opt-let",MainOpts.u5_26)
("opt-let",MainOpts.u3_37_0_@UNQ_@36)
("opt-let",MainOpts.u5_11)
("opt-let",MainOpts.u5_5)
("Transformation applied: ",13)
let
  flatten = \x1_@UNQ_@42 ->
              let! u3_215_0_@UNQ_@44_@EVL = x1_@UNQ_@42
              in case u3_215_0_@UNQ_@44_@EVL of
                   BinTree l_@UNQ_@45_@FLD_@0 a_@UNQ_@46_@FLD_@1 r_@UNQ_@47_@FLD_@2 -> let
                                                                                         u5_10 = flatten r_@UNQ_@47_@FLD_@2
                                                                                       in let
                                                                                            u5_8 = : a_@UNQ_@46_@FLD_@1 u5_10
                                                                                          in let
                                                                                               u5_7 = flatten l_@UNQ_@45_@FLD_@0
                                                                                             in let! u5_5 = ++ u5_7 u5_8
                                                                                                in u5_5
                   Leaf a_@UNQ_@51_@FLD_@0 -> let! u5_11 = : a_@UNQ_@51_@FLD_@0 []
                                              in u5_11
in let
     fact = \n_@UNQ_@35 ->
              let! u3_37_0_@UNQ_@36 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@35 1
              in let! u3_37_0_@UNQ_@37_@EVL = u3_37_0_@UNQ_@36
                 in case u3_37_0_@UNQ_@37_@EVL of
                      False  -> let! u5_26 = - Num_@DCT_@u88_18_0 n_@UNQ_@35 1
                                in let! u5_25 = fact u5_26
                                   in let! u5_22 = * Num_@DCT_@u88_18_0 n_@UNQ_@35 u5_25
                                      in u5_22
                      True  -> 1
   in let
        BinTree = \x1_@UNQ_@39 ->
                    \x2_@UNQ_@40 ->
                      \x3_@UNQ_@41 ->
                        BinTree MainOpts.x1_@UNQ_@39 MainOpts.x2_@UNQ_@40 MainOpts.x3_@UNQ_@41
      in let
           Leaf = \x1_@UNQ_@38 ->
                    Leaf MainOpts.x1_@UNQ_@38
         in let
              n_@NEW_@16_@UNQ_@55_@CCN = \x1_@NEW_@17_@UNQ_@53 ->
                                           let! u5_51 = - Num_@DCT_@u88_18_0 x1_@NEW_@17_@UNQ_@53 1
                                           in let! sub_@UNQ_@61 = genBalancedBinTree u5_51
                                              in let
                                                   u5_57 = ()
                                                 in BinTree sub_@UNQ_@61 u5_57 sub_@UNQ_@61
              genBalancedBinTree = \x1_@UNQ_@53 ->
                                     let
                                       n_@UNQ_@55_@CCN = n_@NEW_@16_@UNQ_@55_@CCN x1_@UNQ_@53
                                     in let! u3_349_0_@UNQ_@63 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@53 1
                                        in let! u3_349_0_@UNQ_@64_@EVL = u3_349_0_@UNQ_@63
                                           in case u3_349_0_@UNQ_@64_@EVL of
                                                False  -> n_@UNQ_@55_@CCN
                                                True  -> let
                                                           u5_65 = ()
                                                         in let! u5_64 = Leaf u5_65
                                                            in u5_64
            in let
                 mapTreeUnitToFac = \x1_@UNQ_@65 ->
                                      let! u3_516_0_@UNQ_@67_@EVL = x1_@UNQ_@65
                                      in case u3_516_0_@UNQ_@67_@EVL of
                                           BinTree l_@UNQ_@68_@FLD_@0 u3_565_0_@UNQ_@69_@FLD_@1 r_@UNQ_@70_@FLD_@2 -> let
                                                                                                                        r'_@UNQ_@74 = mapTreeUnitToFac r_@UNQ_@70_@FLD_@2
                                                                                                                      in let
                                                                                                                           l'_@UNQ_@73 = mapTreeUnitToFac l_@UNQ_@68_@FLD_@0
                                                                                                                         in let
                                                                                                                              u5_78 = fact 12
                                                                                                                            in BinTree l'_@UNQ_@73 u5_78 r'_@UNQ_@74
                                           Leaf u3_525_0_@UNQ_@75_@FLD_@0 -> let
                                                                               u5_80 = fact 12
                                                                             in let! u5_79 = Leaf u5_80
                                                                                in u5_79
               in let
                    mirror = \x1_@UNQ_@76 ->
                               let! u3_702_0_@UNQ_@80_@EVL = x1_@UNQ_@76
                               in case u3_702_0_@UNQ_@80_@EVL of
                                    BinTree l_@UNQ_@81_@FLD_@0 a_@UNQ_@82_@FLD_@1 r_@UNQ_@83_@FLD_@2 -> let
                                                                                                          u5_90 = mirror l_@UNQ_@81_@FLD_@0
                                                                                                        in let
                                                                                                             u5_89 = mirror r_@UNQ_@83_@FLD_@2
                                                                                                           in let! u5_86 = BinTree u5_89 a_@UNQ_@82_@FLD_@1 u5_90
                                                                                                              in u5_86
                                    Leaf __@UNQ_@87 -> x1_@UNQ_@76
                  in let
                       u5_94 = genBalancedBinTree 20
                     in let
                          u5_93 = mapTreeUnitToFac u5_94
                        in let
                             testTree = mirror u5_93
                           in let
                                u5_97 = flatten testTree
                              in let
                                   testBinTreeNoInternalsViaList = length u5_97
                                 in let
                                      main = print Show_@DCT_@u95_17_0 testBinTreeNoInternalsViaList
                                    in let
                                         u5_104 = ()
                                       in let! main = ehcRunMain main u5_104
                                          in main

BinTreeNoInternalsViaList2:
("TyGam: ",BinTree ->
  Type Error: MainOpts.BinTree dataTgi)
("DataGam: ",BinTree a 5 6 7 8 9 10 11 12
  MainOpts.Leaf {_u a (5,6)}
  MainOpts.BinTree {_u (BinTree (5 6 7 8 9 10 11 12) (a)) (7,8)} {_u a (9,10)} {_u (BinTree (5 6 7 8 9 10 11 12) (a)) (11,12)})
("num constraints: ",1040)
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]})
("still to do cs",0,67)
("Tys",n_@UNQ_@45 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
__@UNQ_@109 ->
  {_u (forall {} . cs: 0 => CA@1022) (CA@1095,CA@1096)}
t_@UNQ_@97 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@2791 lzero CA@2794 CA@234 CA@2793 lzero lzero lzero) (CA@2783))) (CA@231,CA@234)}
main ->
  {_u (forall {CA@5704,CA@5479} . cs: 0 => (CA@5704 CA@5479)) (lone,lzero)}
testBinTreeNoInternalsViaList ->
  {_u (forall {} . cs: 0 => Int) (lzero,lzero)}
u5_87 ->
  {_u (forall {} . cs: 0 => Int) (top,lzero)}
mirror ->
  {_u (forall {CA@1019,CA@1095,CA@1096,CA@1022} . cs: 0 => ({_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) lzero})) (lzero,lzero)}
a_@UNQ_@94_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@35) (CA@129,lzero)}
Leaf ->
  {_u (forall {CA@467,CA@466,CA@473,CA@474,CA@471,CA@472,CA@477,CA@475,CA@470,CA@464} . cs: 0 => ({_u CA@464 (CA@466,CA@467)} -> {_u (BinTree (CA@466 CA@467 CA@470 CA@471 CA@472 CA@473 CA@474 CA@475) (CA@464)) CA@477})) (top,top)}
u5_98 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022))) (lzero,lzero)}
u5_103 ->
  {_u (forall {CA@4570,CA@4571,CA@4568,CA@4569,CA@4567,CA@4565} . cs: 0 => (BinTree (lzero CA@4569 CA@4568 CA@4567 CA@4571 CA@4570 lzero CA@4565) (()))) (lzero,lzero)}
u5_102 ->
  {_u (forall {CA@4856,CA@4857,CA@4854,CA@4855,CA@4853,CA@4858} . cs: 0 => (BinTree (CA@4858 CA@4857 CA@4855 CA@4856 CA@4854 CA@4853 lzero lzero) (Int))) (lzero,lzero)}
l_@UNQ_@87_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@129 lzero CA@83 CA@60 CA@34 lzero lzero lzero) (CA@35))) (CA@83,CA@60)}
u5_106 ->
  {_u (forall {CA@2906,CA@2907} . cs: 0 => ([] (lzero CA@2906 CA@2907 lzero) (Int))) (lzero,lzero)}
u3_37_0_@UNQ_@47_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
r_@UNQ_@69_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@932 CA@933 lzero lzero CA@871 CA@872 lzero lzero) (CA@950))) (lzero,lzero)}
n_@NEW_@17_@UNQ_@54_@CCN ->
  {_u (forall {CA@3857} . cs: 0 => ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) lzero})) (lzero,lzero)}
x1_@UNQ_@86_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@129 lzero CA@83 CA@60 CA@34 lzero lzero lzero) (CA@35))) (lone,lomega)}
x1_@NEW_@18_@UNQ_@52 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
r_@UNQ_@105_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022))) (lzero,lzero)}
BinTree ->
  {_u (forall {CA@447,CA@449,CA@429,CA@428,CA@453,CA@455,CA@454,CA@433,CA@432,CA@439,CA@437,CA@436,CA@438,CA@430} . cs: 4 => ({_u (BinTree (CA@438 CA@439 CA@428 CA@429 CA@432 CA@433 CA@436 CA@437) (CA@430)) (lzero,lzero)} -> {_u ({_u CA@430 (CA@453,CA@454)} -> {_u ({_u (BinTree (CA@438 CA@439 CA@428 CA@429 CA@432 CA@433 CA@436 CA@437) (CA@430)) (CA@436,CA@437)} -> {_u (BinTree (CA@438 CA@439 CA@428 CA@429 CA@432 CA@433 CA@436 CA@437) (CA@430)) CA@447}) CA@449}) CA@455})
           CA@449 . CA@428 == lzero
           CA@449 . CA@429 == lzero
           CA@449 . CA@432 == CA@453
           CA@449 . CA@433 == CA@454
      ) (top,top)}
u5_74 ->
  {_u (forall {} . cs: 0 => ()) (lzero,CA@662)}
sub_@UNQ_@60 ->
  {_u (forall {} . cs: 3 => (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (()))
           CA@4565 > lzero == lzero
           CA@4565 (+) lzero == CA@4565
           CA@4565 > lzero == lzero
      ) (lzero,CA@4565)}
u5_73 ->
  {_u (forall {CA@3880,CA@3881,CA@3886,CA@3882,CA@3883,CA@3885,CA@662} . cs: 0 => (BinTree (lzero CA@662 CA@3886 CA@3882 CA@3883 CA@3880 CA@3881 CA@3885) (()))) (lzero,lone)}
fact ->
  {_u (forall {} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u Int top})) (lzero,lzero)}
a_@UNQ_@88_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@35) (CA@34,lzero)}
u3_432_0_@UNQ_@68_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@950) (CA@871,CA@872)}
u5_99 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022))) (lzero,lzero)}
l_@UNQ_@103_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022))) (lzero,lzero)}
u3_392_0_@UNQ_@74_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@950) (CA@932,CA@933)}
l_@UNQ_@67_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@932 CA@933 lzero lzero CA@871 CA@872 lzero lzero) (CA@950))) (lzero,lzero)}
flatten ->
  {_u (forall {CA@2791,CA@2794,CA@2793,CA@231,CA@234,CA@2783} . cs: 2 => ({_u (BinTree (CA@2791 lzero CA@2794 CA@234 CA@2793 lzero lzero lzero) (CA@2783)) (CA@231,CA@234)} -> {_u ([] (lzero lzero lzero lzero) (CA@2783)) lzero})
           lzero U CA@231 == CA@231
           lone U CA@234 == CA@234
      ) (lzero,lzero)}
genBalancedBinTree ->
  {_u (forall {CA@3857} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) lzero})) (lzero,lzero)}
u5_31 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
mapTreeUnitToFac ->
  {_u (forall {CA@917,CA@933,CA@932,CA@826,CA@871,CA@872,CA@3830,CA@3833,CA@950} . cs: 5 => ({_u (BinTree (CA@932 CA@933 lzero lzero CA@871 CA@872 lzero lzero) (CA@950)) (lzero,lone)} -> {_u (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int)) CA@917})
           lzero U CA@917 == CA@917
           CA@826 U CA@917 == CA@917
           CA@917 (+) lzero == CA@917
           CA@917 (+) lzero == CA@917
           CA@917 (+) lzero == CA@917
      ) (lzero,lzero)}
flattenDiff ->
  {_u (forall {CA@60,CA@129,CA@34,CA@83,CA@35} . cs: 12 => ({_u (BinTree (CA@129 lzero CA@83 CA@60 CA@34 lzero lzero lzero) (CA@35)) (lzero,CA@60)} -> {_u ({_u ([] (lzero lzero lzero lzero) (CA@35)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}) CA@60})
           lone > CA@60 == CA@60
           {set {0,1}} > CA@34 == CA@34
           lzero > CA@60 == lzero
           lone > CA@129 == CA@129
           CA@60 . {set {0,1}} == {set {0,1}}
           CA@60 . {set {0,1}} == {set {0,1}}
           CA@60 . lzero == lzero
           lone U CA@60 == CA@60
           lzero U CA@34 == CA@34
           lzero U CA@129 == CA@129
           lzero U CA@83 == CA@83
           lone U CA@60 == CA@60
      ) (lzero,lzero)}
u3_828_0_@UNQ_@102_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022))) (lone,lomega)}
n_@UNQ_@54_@CCN ->
  {_u (forall {} . cs: 0 => (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (()))) (lzero,{set {0,1}})}
u5_9 ->
  {_u (forall {} . cs: 1 => ([] (lzero lzero lzero lzero) (CA@35))
           lzero U CA@34 == CA@34
      ) (lzero,{set {0,1}})}
x1_@UNQ_@64 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@932 CA@933 lzero lzero CA@871 CA@872 lzero lzero) (CA@950))) (lzero,lone)}
x1_@UNQ_@75 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@129 lzero CA@83 CA@60 CA@34 lzero lzero lzero) (CA@35))) (lzero,CA@60)}
x2_@UNQ_@85 ->
  {_u (forall {} . cs: 0 => ([] (lzero lzero lzero lzero) (CA@35))) (lzero,{set {0,1}})}
x1_@UNQ_@52 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
x1_@UNQ_@49 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@438 CA@439 CA@428 CA@429 CA@432 CA@433 CA@436 CA@437) (CA@430))) (lzero,lzero)}
x2_@UNQ_@50 ->
  {_u (forall {} . cs: 0 => CA@430) (CA@453,CA@454)}
x1_@UNQ_@48 ->
  {_u (forall {} . cs: 0 => CA@464) (CA@466,CA@467)}
x3_@UNQ_@51 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@438 CA@439 CA@428 CA@429 CA@432 CA@433 CA@436 CA@437) (CA@430))) (CA@436,CA@437)}
x1_@UNQ_@98 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022))) (lzero,{set {1,infty}})}
u3_216_0_@UNQ_@63_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
u5_13 ->
  {_u (forall {} . cs: 0 => ([] (lzero lzero lzero lzero) (CA@35))) (lzero,lone)}
u5_15 ->
  {_u (forall {CA@140,CA@135} . cs: 1 => ([] (lzero lzero CA@140 CA@135) (CA@35))
           lzero U CA@129 == CA@129
      ) (lzero,lone)}
a_@UNQ_@104_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@1022) (lzero,CA@1019)}
u3_216_0_@UNQ_@62 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
main ->
  {_u (forall {CA@5703} . cs: 0 => (CA@5704 CA@5703)) (lone,lone)}
u3_383_0_@UNQ_@66_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@932 CA@933 lzero lzero CA@871 CA@872 lzero lzero) (CA@950))) (lone,lomega)}
l'_@UNQ_@72 ->
  {_u (forall {} . cs: 1 => (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int))
           CA@917 (+) lzero == CA@917
      ) (CA@917,lzero)}
u5_60 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
r'_@UNQ_@73 ->
  {_u (forall {} . cs: 1 => (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int))
           CA@917 (+) lzero == CA@917
      ) (CA@917,lzero)}
u5_35 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
u5_34 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_89 ->
  {_u (forall {} . cs: 0 => Int) (top,lzero)}
u5_88 ->
  {_u (forall {CA@3901,CA@3900,CA@896,CA@3897,CA@3895,CA@3898,CA@3896} . cs: 1 => (BinTree (CA@896 lzero CA@3901 CA@3897 CA@3898 CA@3895 CA@3896 CA@3900) (Int))
           CA@917 (+) lzero == CA@917
      ) (CA@917,lone)}
u5_95 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022))) (lzero,lone)}
u5_66 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
u5_7 ->
  {_u (forall {} . cs: 2 => ([] (lzero lzero lzero lzero) (CA@35))
           lzero U CA@83 == CA@83
           lone U CA@60 == CA@60
      ) (lzero,lone)}
u5_11 ->
  {_u (forall {} . cs: 1 => ([] (lzero lzero lzero lzero) (CA@35))
           lone U CA@60 == CA@60
      ) (lzero,lzero)}
testTree ->
  {_u (forall {CA@5178,CA@5180,CA@5183,CA@5182} . cs: 0 => (BinTree (CA@5183 CA@5178 lzero lzero CA@5180 CA@5182 lzero lzero) (Int))) (lzero,lzero)}
r_@UNQ_@89_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@129 lzero CA@83 CA@60 CA@34 lzero lzero lzero) (CA@35))) (lzero,lzero)}
u3_37_0_@UNQ_@46 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
u5_113 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)})
"start optimizing"
let
  flattenDiff = (\x1_@UNQ_@75 ->
                   (\x2_@UNQ_@85 ->
                      let!
                        x1_@UNQ_@86_@EVL = x1_@UNQ_@75 :: {_u (BinTree (CA@129 lzero CA@83 CA@60 CA@34 lzero lzero lzero) (CA@35)) lzero}
                      in
                        (case x1_@UNQ_@86_@EVL :: {_u (BinTree (CA@129 lzero CA@83 CA@60 CA@34 lzero lzero lzero) (CA@35)) lone} of
                           BinTree l_@UNQ_@87_@FLD_@0 a_@UNQ_@88_@FLD_@1 r_@UNQ_@89_@FLD_@2 -> let
                                                                                                 u5_11 = ((flattenDiff :: {_u ({_u (BinTree (CA@129 lzero CA@83 CA@60 CA@34 lzero lzero lzero) (CA@35)) (lzero,CA@60)} -> {_u ({_u ([] (lzero lzero lzero lzero) (CA@35)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}) CA@60}) lone} r_@UNQ_@89_@FLD_@2) :: {_u ({_u ([] (lzero lzero lzero lzero) (CA@35)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}) CA@60} x2_@UNQ_@85) :: {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}
                                                                                               in
                                                                                                 let
                                                                                                   u5_9 = ((: :: {_u ({_u CA@35 (lzero,lzero)} -> {_u ({_u ([] (lzero lzero lzero lzero) (CA@35)) (lzero,lzero)} -> {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}) lone}) top} a_@UNQ_@88_@FLD_@1) :: {_u ({_u ([] (lzero lzero lzero lzero) (CA@35)) (lzero,lzero)} -> {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}) lone} u5_11) :: {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}
                                                                                                 in
                                                                                                   let
                                                                                                     u5_7 = ((flattenDiff :: {_u ({_u (BinTree (CA@129 lzero CA@83 CA@60 CA@34 lzero lzero lzero) (CA@35)) (lzero,CA@60)} -> {_u ({_u ([] (lzero lzero lzero lzero) (CA@35)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}) CA@60}) lone} l_@UNQ_@87_@FLD_@0) :: {_u ({_u ([] (lzero lzero lzero lzero) (CA@35)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}) CA@60} u5_9) :: {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}
                                                                                                   in
                                                                                                     u5_7 :: {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}
                           Leaf a_@UNQ_@94_@FLD_@0 -> let
                                                        u5_15 = ((: :: {_u ({_u CA@35 (lzero,lzero)} -> {_u ({_u ([] (lzero lzero CA@140 CA@135) (CA@35)) (CA@140,CA@135)} -> {_u ([] (lzero lzero CA@140 CA@135) (CA@35)) lzero}) lone}) top} a_@UNQ_@94_@FLD_@0) :: {_u ({_u ([] (lzero lzero CA@140 CA@135) (CA@35)) (CA@140,CA@135)} -> {_u ([] (lzero lzero CA@140 CA@135) (CA@35)) lzero}) lone} []) :: {_u ([] (lzero lzero CA@140 CA@135) (CA@35)) lzero}
                                                      in
                                                        let
                                                          u5_13 = ((++ :: {_u ({_u ([] (lzero lzero lzero lzero) (CA@35)) (lzero,lone)} -> {_u ({_u ([] (lzero lzero lzero lzero) (CA@35)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}) lone}) top} u5_15) :: {_u ({_u ([] (lzero lzero lzero lzero) (CA@35)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}) lone} x2_@UNQ_@85) :: {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}
                                                        in
                                                          u5_13 :: {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}
                        ) :: {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}
                   ) :: {_u ({_u ([] (lzero lzero lzero lzero) (CA@35)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}) CA@60}
                ) :: {_u ({_u (BinTree (CA@129 lzero CA@83 CA@60 CA@34 lzero lzero lzero) (CA@35)) (lzero,CA@60)} -> {_u ({_u ([] (lzero lzero lzero lzero) (CA@35)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@35)) lzero}) CA@60}) lzero}
in
  let
    flatten = (\t_@UNQ_@97 ->
                 ((flattenDiff :: {_u ({_u (BinTree (CA@2791 lzero CA@2794 CA@234 CA@2793 lzero lzero lzero) (CA@2783)) (lzero,CA@234)} -> {_u ({_u ([] (lzero lzero lzero lzero) (CA@2783)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@2783)) lzero}) CA@234}) lone} t_@UNQ_@97) :: {_u ({_u ([] (lzero lzero lzero lzero) (CA@2783)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@2783)) lzero}) CA@234} []) :: {_u ([] (lzero lzero lzero lzero) (CA@2783)) lzero}
              ) :: {_u ({_u (BinTree (CA@2791 lzero CA@2794 CA@234 CA@2793 lzero lzero lzero) (CA@2783)) (CA@231,CA@234)} -> {_u ([] (lzero lzero lzero lzero) (CA@2783)) lzero}) lzero}
  in
    let
      fact = (\n_@UNQ_@45 ->
                let
                  u3_37_0_@UNQ_@46 = (((<= :: {_u ({_u (_'Ord (CA@2950 CA@2947 CA@2946 CA@3012 lone CA@2957 CA@2956 CA@2959 lone CA@2961 CA@2955 CA@2955 CA@2954 lone top CA@2969 lone CA@2964 CA@2966 CA@2966 CA@2963 lone top CA@2987 CA@2986 CA@3016 CA@3013 CA@2991 CA@2989 CA@2989 CA@2988 lone top lone lone lzero lone lone lzero lone top CA@2949 CA@2948 CA@2995 CA@2994 CA@2997 CA@2996 CA@2993 top CA@2952 CA@2953 CA@2999 CA@2998 CA@3002 CA@3000 CA@3003 top CA@3011 lone CA@3006 CA@3007 CA@3007 CA@3005 lone top CA@3009 CA@3010 CA@2945 CA@2943 CA@2943 CA@2942 lone top CA@3015 CA@3017 CA@2974 CA@2978 CA@2978 CA@2976 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} n_@UNQ_@45) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
                in
                  let!
                    u3_37_0_@UNQ_@47_@EVL = u3_37_0_@UNQ_@46 :: {_u Bool top}
                  in
                    (case u3_37_0_@UNQ_@47_@EVL :: {_u Bool lone} of
                       False -> let
                                  u5_35 = (((- :: {_u ({_u (_'Num (CA@3230 CA@3229 CA@3231 top CA@3233 CA@3240 CA@3241 CA@3244 lone CA@3238 CA@3242 CA@3242 CA@3243 lone top CA@3277 lone CA@3275 CA@3280 CA@3280 CA@3276 lone top CA@3273 CA@3272 lone lone lzero lone lone lzero lone top CA@3213 CA@3214 CA@3262 CA@3258 CA@3258 CA@3260 lone top CA@3215 lone CA@3265 CA@3222 CA@3222 CA@3223 lone top CA@3218 lone CA@3227 lone top top CA@3219 CA@3257 lone CA@3257 CA@3211 CA@3212 CA@3253 CA@3255 top CA@3217 lone CA@3247 lone top CA@3235 CA@3232 CA@3250 CA@3251 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@45) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                in
                                  let
                                    u5_34 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} u5_35) :: {_u Int top}
                                  in
                                    let
                                      u5_31 = (((* :: {_u ({_u (_'Num (CA@3522 CA@3523 CA@3542 top CA@3528 CA@3543 CA@3544 CA@3545 lone CA@3547 CA@3541 CA@3541 CA@3538 lone top CA@3539 lone CA@3531 CA@3536 CA@3536 CA@3532 lone top CA@3500 CA@3502 CA@3477 lone CA@3501 CA@3506 CA@3506 CA@3503 lone top lone lone lzero lone lone lzero lone top CA@3475 lone CA@3482 CA@3484 CA@3484 CA@3479 lone top CA@3524 lone CA@3485 lone top top CA@3520 CA@3513 lone CA@3513 CA@3519 CA@3517 CA@3509 CA@3496 top CA@3518 lone CA@3494 lone top CA@3525 CA@3526 CA@3493 CA@3508 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@45) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_34) :: {_u Int top}
                                    in
                                      u5_31 :: {_u Int top}
                       True -> 1 :: {_u Int top}
                    ) :: {_u Int top}
             ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lzero}
    in
      let
        BinTree = (\x1_@UNQ_@49 ->
                     (\x2_@UNQ_@50 ->
                        (\x3_@UNQ_@51 ->
                           (MainOpts.BinTree x1_@UNQ_@49 x2_@UNQ_@50 x3_@UNQ_@51) :: {_u (BinTree (CA@438 CA@439 CA@428 CA@429 CA@432 CA@433 CA@436 CA@437) (CA@430)) CA@447}
                        ) :: {_u ({_u (BinTree (CA@438 CA@439 CA@428 CA@429 CA@432 CA@433 CA@436 CA@437) (CA@430)) (CA@436,CA@437)} -> {_u (BinTree (CA@438 CA@439 CA@428 CA@429 CA@432 CA@433 CA@436 CA@437) (CA@430)) CA@447}) CA@449}
                     ) :: {_u ({_u CA@430 (CA@453,CA@454)} -> {_u ({_u (BinTree (CA@438 CA@439 CA@428 CA@429 CA@432 CA@433 CA@436 CA@437) (CA@430)) (CA@436,CA@437)} -> {_u (BinTree (CA@438 CA@439 CA@428 CA@429 CA@432 CA@433 CA@436 CA@437) (CA@430)) CA@447}) CA@449}) CA@455}
                  ) :: {_u ({_u (BinTree (CA@438 CA@439 CA@428 CA@429 CA@432 CA@433 CA@436 CA@437) (CA@430)) (lzero,lzero)} -> {_u ({_u CA@430 (CA@453,CA@454)} -> {_u ({_u (BinTree (CA@438 CA@439 CA@428 CA@429 CA@432 CA@433 CA@436 CA@437) (CA@430)) (CA@436,CA@437)} -> {_u (BinTree (CA@438 CA@439 CA@428 CA@429 CA@432 CA@433 CA@436 CA@437) (CA@430)) CA@447}) CA@449}) CA@455}) top}
      in
        let
          Leaf = (\x1_@UNQ_@48 ->
                    (MainOpts.Leaf x1_@UNQ_@48) :: {_u (BinTree (CA@466 CA@467 CA@470 CA@471 CA@472 CA@473 CA@474 CA@475) (CA@464)) CA@477}
                 ) :: {_u ({_u CA@464 (CA@466,CA@467)} -> {_u (BinTree (CA@466 CA@467 CA@470 CA@471 CA@472 CA@473 CA@474 CA@475) (CA@464)) CA@477}) top}
        in
          let
            n_@NEW_@17_@UNQ_@54_@CCN = (\x1_@NEW_@18_@UNQ_@52 ->
                                          let
                                            u5_60 = (((- :: {_u ({_u (_'Num (CA@3953 CA@3952 CA@3954 top CA@3956 CA@3963 CA@3964 CA@3967 lone CA@3961 CA@3965 CA@3965 CA@3966 lone top CA@4000 lone CA@3998 CA@4003 CA@4003 CA@3999 lone top CA@3996 CA@3995 lone lone lzero lone lone lzero lone top CA@3936 CA@3937 CA@3985 CA@3981 CA@3981 CA@3983 lone top CA@3938 lone CA@3988 CA@3945 CA@3945 CA@3946 lone top CA@3941 lone CA@3950 lone top top CA@3942 CA@3980 lone CA@3980 CA@3934 CA@3935 CA@3976 CA@3978 top CA@3940 lone CA@3970 lone top CA@3958 CA@3955 CA@3973 CA@3974 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} x1_@NEW_@18_@UNQ_@52) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                          in
                                            let
                                              sub_@UNQ_@60 = (genBalancedBinTree :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) lzero}) lone} u5_60) :: {_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) lzero}
                                            in
                                              let
                                                u5_66 = () :: {_u () lzero}
                                              in
                                                (((BinTree :: {_u ({_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) (lzero,lzero)} -> {_u ({_u () (lzero,lzero)} -> {_u ({_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) (lzero,CA@4565)} -> {_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) lzero}) lone}) lone}) lone} sub_@UNQ_@60) :: {_u ({_u () (lzero,lzero)} -> {_u ({_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) (lzero,CA@4565)} -> {_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) lzero}) lone}) lone} u5_66) :: {_u ({_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) (lzero,CA@4565)} -> {_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) lzero}) lone} sub_@UNQ_@60) :: {_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) lzero}
                                       ) :: {_u ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) lzero}) lzero}
            genBalancedBinTree = (\x1_@UNQ_@52 ->
                                    let
                                      n_@UNQ_@54_@CCN = (n_@NEW_@17_@UNQ_@54_@CCN :: {_u ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) lzero}) lone} x1_@UNQ_@52) :: {_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) lzero}
                                    in
                                      let
                                        u3_216_0_@UNQ_@62 = (((< :: {_u ({_u (_'Ord (CA@4278 CA@4279 CA@4286 CA@4238 lone CA@4287 CA@4283 CA@4285 lone CA@4284 CA@4282 CA@4282 CA@4244 lone top CA@4243 lone CA@4249 CA@4247 CA@4247 CA@4240 lone top CA@4252 CA@4251 CA@4235 CA@4236 CA@4254 CA@4256 CA@4256 CA@4255 lone top CA@4231 lone CA@4264 CA@4260 CA@4260 CA@4261 lone top CA@4274 CA@4275 CA@4269 CA@4266 CA@4267 CA@4270 CA@4271 top CA@4276 CA@4277 CA@4265 CA@4221 CA@4222 CA@4219 CA@4220 top CA@4272 lone CA@4217 CA@4216 CA@4216 CA@4211 lone top lone lone lzero lone lone lzero lone top CA@4234 CA@4233 CA@4224 CA@4226 CA@4226 CA@4227 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} x1_@UNQ_@52) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
                                      in
                                        let!
                                          u3_216_0_@UNQ_@63_@EVL = u3_216_0_@UNQ_@62 :: {_u Bool top}
                                        in
                                          (case u3_216_0_@UNQ_@63_@EVL :: {_u Bool lone} of
                                             False -> n_@UNQ_@54_@CCN :: {_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) lzero}
                                             True -> let
                                                       u5_74 = () :: {_u () lzero}
                                                     in
                                                       let
                                                         u5_73 = (Leaf :: {_u ({_u () (lzero,CA@662)} -> {_u (BinTree (lzero CA@662 CA@3886 CA@3882 CA@3883 CA@3880 CA@3881 CA@3885) (())) lzero}) lone} u5_74) :: {_u (BinTree (lzero CA@662 CA@3886 CA@3882 CA@3883 CA@3880 CA@3881 CA@3885) (())) lzero}
                                                       in
                                                         u5_73 :: {_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) lzero}
                                          ) :: {_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) lzero}
                                 ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@3857 lzero lzero lzero lzero lzero CA@4565) (())) lzero}) lzero}
          in
            let
              mapTreeUnitToFac = (\x1_@UNQ_@64 ->
                                    let!
                                      u3_383_0_@UNQ_@66_@EVL = x1_@UNQ_@64 :: {_u (BinTree (CA@932 CA@933 lzero lzero CA@871 CA@872 lzero lzero) (CA@950)) lzero}
                                    in
                                      (case u3_383_0_@UNQ_@66_@EVL :: {_u (BinTree (CA@932 CA@933 lzero lzero CA@871 CA@872 lzero lzero) (CA@950)) lone} of
                                         BinTree l_@UNQ_@67_@FLD_@0 u3_432_0_@UNQ_@68_@FLD_@1 r_@UNQ_@69_@FLD_@2 -> let
                                                                                                                      r'_@UNQ_@73 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@932 CA@933 lzero lzero CA@871 CA@872 lzero lzero) (CA@950)) (lzero,lone)} -> {_u (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int)) CA@917}) lone} r_@UNQ_@69_@FLD_@2) :: {_u (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int)) CA@917}
                                                                                                                    in
                                                                                                                      let
                                                                                                                        l'_@UNQ_@72 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@932 CA@933 lzero lzero CA@871 CA@872 lzero lzero) (CA@950)) (lzero,lone)} -> {_u (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int)) CA@917}) lone} l_@UNQ_@67_@FLD_@0) :: {_u (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int)) CA@917}
                                                                                                                      in
                                                                                                                        let
                                                                                                                          u5_87 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 12) :: {_u Int top}
                                                                                                                        in
                                                                                                                          (((BinTree :: {_u ({_u (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int)) (lzero,lzero)} -> {_u ({_u Int (lzero,lzero)} -> {_u ({_u (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int)) (CA@826,lzero)} -> {_u (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int)) CA@917}) lone}) lone}) lone} l'_@UNQ_@72) :: {_u ({_u Int (lzero,lzero)} -> {_u ({_u (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int)) (CA@826,lzero)} -> {_u (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int)) CA@917}) lone}) lone} u5_87) :: {_u ({_u (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int)) (CA@826,lzero)} -> {_u (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int)) CA@917}) lone} r'_@UNQ_@73) :: {_u (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int)) CA@917}
                                         Leaf u3_392_0_@UNQ_@74_@FLD_@0 -> let
                                                                             u5_89 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 12) :: {_u Int top}
                                                                           in
                                                                             let
                                                                               u5_88 = (Leaf :: {_u ({_u Int (CA@896,lzero)} -> {_u (BinTree (CA@896 lzero CA@3901 CA@3897 CA@3898 CA@3895 CA@3896 CA@3900) (Int)) CA@917}) lone} u5_89) :: {_u (BinTree (CA@896 lzero CA@3901 CA@3897 CA@3898 CA@3895 CA@3896 CA@3900) (Int)) CA@917}
                                                                             in
                                                                               u5_88 :: {_u (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int)) CA@917}
                                      ) :: {_u (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int)) CA@917}
                                 ) :: {_u ({_u (BinTree (CA@932 CA@933 lzero lzero CA@871 CA@872 lzero lzero) (CA@950)) (lzero,lone)} -> {_u (BinTree (CA@3833 CA@3830 lzero lzero lzero lzero CA@826 lzero) (Int)) CA@917}) lzero}
            in
              let
                mirror = (\x1_@UNQ_@98 ->
                            let!
                              u3_828_0_@UNQ_@102_@EVL = x1_@UNQ_@98 :: {_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) lzero}
                            in
                              (case u3_828_0_@UNQ_@102_@EVL :: {_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) lone} of
                                 BinTree l_@UNQ_@103_@FLD_@0 a_@UNQ_@104_@FLD_@1 r_@UNQ_@105_@FLD_@2 -> let
                                                                                                          u5_99 = (mirror :: {_u ({_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) lzero}) lone} l_@UNQ_@103_@FLD_@0) :: {_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) lzero}
                                                                                                        in
                                                                                                          let
                                                                                                            u5_98 = (mirror :: {_u ({_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) lzero}) lone} r_@UNQ_@105_@FLD_@2) :: {_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) lzero}
                                                                                                          in
                                                                                                            let
                                                                                                              u5_95 = (((BinTree :: {_u ({_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) (lzero,lzero)} -> {_u ({_u CA@1022 (lzero,CA@1019)} -> {_u ({_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) (lzero,lzero)} -> {_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) lzero}) lone}) lone}) lone} u5_98) :: {_u ({_u CA@1022 (lzero,CA@1019)} -> {_u ({_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) (lzero,lzero)} -> {_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) lzero}) lone}) lone} a_@UNQ_@104_@FLD_@1) :: {_u ({_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) (lzero,lzero)} -> {_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) lzero}) lone} u5_99) :: {_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) lzero}
                                                                                                            in
                                                                                                              u5_95 :: {_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) lzero}
                                 Leaf __@UNQ_@109 -> x1_@UNQ_@98 :: {_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) lzero}
                              ) :: {_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) lzero}
                         ) :: {_u ({_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1095 CA@1096 lzero lzero lzero CA@1019 lzero lzero) (CA@1022)) lzero}) lzero}
              in
                let
                  u5_103 = (genBalancedBinTree :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@4569 CA@4568 CA@4567 CA@4571 CA@4570 lzero CA@4565) (())) lzero}) lone} 20) :: {_u (BinTree (lzero CA@4569 CA@4568 CA@4567 CA@4571 CA@4570 lzero CA@4565) (())) lzero}
                in
                  let
                    u5_102 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@5141 CA@5144 lzero lzero CA@5142 CA@5140 lzero lzero) (())) (lzero,lone)} -> {_u (BinTree (CA@4858 CA@4857 CA@4855 CA@4856 CA@4854 CA@4853 lzero lzero) (Int)) lzero}) lone} u5_103) :: {_u (BinTree (CA@4858 CA@4857 CA@4855 CA@4856 CA@4854 CA@4853 lzero lzero) (Int)) lzero}
                  in
                    let
                      testTree = (mirror :: {_u ({_u (BinTree (CA@5183 CA@5178 lzero lzero CA@5180 CA@5182 lzero lzero) (Int)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@5183 CA@5178 lzero lzero CA@5180 CA@5182 lzero lzero) (Int)) lzero}) lone} u5_102) :: {_u (BinTree (CA@5183 CA@5178 lzero lzero CA@5180 CA@5182 lzero lzero) (Int)) lzero}
                    in
                      let
                        u5_106 = (flatten :: {_u ({_u (BinTree (CA@5214 CA@5211 CA@5212 lzero CA@5213 CA@5215 lzero lzero) (Int)) (lzero,lzero)} -> {_u ([] (lzero CA@2906 CA@2907 lzero) (Int)) lzero}) lone} testTree) :: {_u ([] (lzero CA@2906 CA@2907 lzero) (Int)) lzero}
                      in
                        let
                          testBinTreeNoInternalsViaList = (length :: {_u ({_u ([] (lzero CA@5437 CA@5438 lzero) (Int)) (lzero,lone)} -> {_u Int lzero}) top} u5_106) :: {_u Int lzero}
                        in
                          let
                            main = ((print :: {_u ({_u (_'Show (CA@5519 CA@5522 lone lone lzero lone top CA@5525 CA@5523 CA@5517 CA@5518 CA@5488 lone CA@5482 CA@5485 CA@5521 CA@5483 CA@5484 CA@5486 CA@5511 CA@5510 CA@5507 CA@5506 CA@5503 CA@5502 CA@5509 CA@5508 CA@5505 CA@5504 CA@5516 CA@5481 CA@5487 CA@5514 lone CA@5513 CA@5515 CA@5498 CA@5491 CA@5496 CA@5492 CA@5497 CA@5494 CA@5499 CA@5493 CA@5500 CA@5495) (Int)) (lone,lone)} -> {_u ({_u Int (lone,lone)} -> {_u (CA@5704 CA@5479) lone}) lone}) top} Show_@DCT_@u95_17_0) :: {_u ({_u Int (lone,lone)} -> {_u (CA@5704 CA@5479) lone}) lone} testBinTreeNoInternalsViaList) :: {_u (CA@5704 CA@5479) lone}
                          in
                            let
                              u5_113 = () :: {_u () lzero}
                            in
                              let
                                main = ((ehcRunMain :: {_u ({_u (CA@5704 CA@5703) (lone,lone)} -> {_u ({_u () (lzero,lzero)} -> {_u (CA@5704 CA@5703) lone}) lone}) top} main) :: {_u ({_u () (lzero,lzero)} -> {_u (CA@5704 CA@5703) lone}) lone} u5_113) :: {_u (CA@5704 CA@5703) lone}
                              in
                                main :: {_u (CA@5704 CA@5752) lone}
let
  flattenDiff = \x1_@UNQ_@75 ->
                  \x2_@UNQ_@85 ->
                    let! x1_@UNQ_@86_@EVL = x1_@UNQ_@75
                    in case x1_@UNQ_@86_@EVL of
                         BinTree l_@UNQ_@87_@FLD_@0 a_@UNQ_@88_@FLD_@1 r_@UNQ_@89_@FLD_@2 -> let
                                                                                               u5_11 = flattenDiff r_@UNQ_@89_@FLD_@2 x2_@UNQ_@85
                                                                                             in let
                                                                                                  u5_9 = : a_@UNQ_@88_@FLD_@1 u5_11
                                                                                                in let
                                                                                                     u5_7 = flattenDiff l_@UNQ_@87_@FLD_@0 u5_9
                                                                                                   in u5_7
                         Leaf a_@UNQ_@94_@FLD_@0 -> let
                                                      u5_15 = : a_@UNQ_@94_@FLD_@0 []
                                                    in let
                                                         u5_13 = ++ u5_15 x2_@UNQ_@85
                                                       in u5_13
in let
     flatten = \t_@UNQ_@97 ->
                 flattenDiff t_@UNQ_@97 []
   in let
        fact = \n_@UNQ_@45 ->
                 let
                   u3_37_0_@UNQ_@46 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@45 1
                 in let! u3_37_0_@UNQ_@47_@EVL = u3_37_0_@UNQ_@46
                    in case u3_37_0_@UNQ_@47_@EVL of
                         False  -> let
                                     u5_35 = - Num_@DCT_@u88_18_0 n_@UNQ_@45 1
                                   in let
                                        u5_34 = fact u5_35
                                      in let
                                           u5_31 = * Num_@DCT_@u88_18_0 n_@UNQ_@45 u5_34
                                         in u5_31
                         True  -> 1
      in let
           BinTree = \x1_@UNQ_@49 ->
                       \x2_@UNQ_@50 ->
                         \x3_@UNQ_@51 ->
                           BinTree MainOpts.x1_@UNQ_@49 MainOpts.x2_@UNQ_@50 MainOpts.x3_@UNQ_@51
         in let
              Leaf = \x1_@UNQ_@48 ->
                       Leaf MainOpts.x1_@UNQ_@48
            in let
                 n_@NEW_@17_@UNQ_@54_@CCN = \x1_@NEW_@18_@UNQ_@52 ->
                                              let
                                                u5_60 = - Num_@DCT_@u88_18_0 x1_@NEW_@18_@UNQ_@52 1
                                              in let
                                                   sub_@UNQ_@60 = genBalancedBinTree u5_60
                                                 in let
                                                      u5_66 = ()
                                                    in BinTree sub_@UNQ_@60 u5_66 sub_@UNQ_@60
                 genBalancedBinTree = \x1_@UNQ_@52 ->
                                        let
                                          n_@UNQ_@54_@CCN = n_@NEW_@17_@UNQ_@54_@CCN x1_@UNQ_@52
                                        in let
                                             u3_216_0_@UNQ_@62 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@52 1
                                           in let! u3_216_0_@UNQ_@63_@EVL = u3_216_0_@UNQ_@62
                                              in case u3_216_0_@UNQ_@63_@EVL of
                                                   False  -> n_@UNQ_@54_@CCN
                                                   True  -> let
                                                              u5_74 = ()
                                                            in let
                                                                 u5_73 = Leaf u5_74
                                                               in u5_73
               in let
                    mapTreeUnitToFac = \x1_@UNQ_@64 ->
                                         let! u3_383_0_@UNQ_@66_@EVL = x1_@UNQ_@64
                                         in case u3_383_0_@UNQ_@66_@EVL of
                                              BinTree l_@UNQ_@67_@FLD_@0 u3_432_0_@UNQ_@68_@FLD_@1 r_@UNQ_@69_@FLD_@2 -> let
                                                                                                                           r'_@UNQ_@73 = mapTreeUnitToFac r_@UNQ_@69_@FLD_@2
                                                                                                                         in let
                                                                                                                              l'_@UNQ_@72 = mapTreeUnitToFac l_@UNQ_@67_@FLD_@0
                                                                                                                            in let
                                                                                                                                 u5_87 = fact 12
                                                                                                                               in BinTree l'_@UNQ_@72 u5_87 r'_@UNQ_@73
                                              Leaf u3_392_0_@UNQ_@74_@FLD_@0 -> let
                                                                                  u5_89 = fact 12
                                                                                in let
                                                                                     u5_88 = Leaf u5_89
                                                                                   in u5_88
                  in let
                       mirror = \x1_@UNQ_@98 ->
                                  let! u3_828_0_@UNQ_@102_@EVL = x1_@UNQ_@98
                                  in case u3_828_0_@UNQ_@102_@EVL of
                                       BinTree l_@UNQ_@103_@FLD_@0 a_@UNQ_@104_@FLD_@1 r_@UNQ_@105_@FLD_@2 -> let
                                                                                                                u5_99 = mirror l_@UNQ_@103_@FLD_@0
                                                                                                              in let
                                                                                                                   u5_98 = mirror r_@UNQ_@105_@FLD_@2
                                                                                                                 in let
                                                                                                                      u5_95 = BinTree u5_98 a_@UNQ_@104_@FLD_@1 u5_99
                                                                                                                    in u5_95
                                       Leaf __@UNQ_@109 -> x1_@UNQ_@98
                     in let
                          u5_103 = genBalancedBinTree 20
                        in let
                             u5_102 = mapTreeUnitToFac u5_103
                           in let
                                testTree = mirror u5_102
                              in let
                                   u5_106 = flatten testTree
                                 in let
                                      testBinTreeNoInternalsViaList = length u5_106
                                    in let
                                         main = print Show_@DCT_@u95_17_0 testBinTreeNoInternalsViaList
                                       in let
                                            u5_113 = ()
                                          in let
                                               main = ehcRunMain main u5_113
                                             in main
("opt-let",main)
("opt-let",MainOpts.u5_95)
("opt-let",MainOpts.u5_88)
("opt-let",MainOpts.u5_73)
("opt-let",MainOpts.u3_216_0_@UNQ_@62)
("opt-let",MainOpts.u5_60)
("opt-let",MainOpts.u5_31)
("opt-let",MainOpts.u5_34)
("opt-let",MainOpts.u5_35)
("opt-let",MainOpts.u3_37_0_@UNQ_@46)
("opt-let",MainOpts.u5_13)
("opt-let",MainOpts.u5_15)
("opt-let",MainOpts.u5_7)
("Transformation applied: ",13)
let
  flattenDiff = \x1_@UNQ_@75 ->
                  \x2_@UNQ_@85 ->
                    let! x1_@UNQ_@86_@EVL = x1_@UNQ_@75
                    in case x1_@UNQ_@86_@EVL of
                         BinTree l_@UNQ_@87_@FLD_@0 a_@UNQ_@88_@FLD_@1 r_@UNQ_@89_@FLD_@2 -> let
                                                                                               u5_11 = flattenDiff r_@UNQ_@89_@FLD_@2 x2_@UNQ_@85
                                                                                             in let
                                                                                                  u5_9 = : a_@UNQ_@88_@FLD_@1 u5_11
                                                                                                in let! u5_7 = flattenDiff l_@UNQ_@87_@FLD_@0 u5_9
                                                                                                   in u5_7
                         Leaf a_@UNQ_@94_@FLD_@0 -> let! u5_15 = : a_@UNQ_@94_@FLD_@0 []
                                                    in let! u5_13 = ++ u5_15 x2_@UNQ_@85
                                                       in u5_13
in let
     flatten = \t_@UNQ_@97 ->
                 flattenDiff t_@UNQ_@97 []
   in let
        fact = \n_@UNQ_@45 ->
                 let! u3_37_0_@UNQ_@46 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@45 1
                 in let! u3_37_0_@UNQ_@47_@EVL = u3_37_0_@UNQ_@46
                    in case u3_37_0_@UNQ_@47_@EVL of
                         False  -> let! u5_35 = - Num_@DCT_@u88_18_0 n_@UNQ_@45 1
                                   in let! u5_34 = fact u5_35
                                      in let! u5_31 = * Num_@DCT_@u88_18_0 n_@UNQ_@45 u5_34
                                         in u5_31
                         True  -> 1
      in let
           BinTree = \x1_@UNQ_@49 ->
                       \x2_@UNQ_@50 ->
                         \x3_@UNQ_@51 ->
                           BinTree MainOpts.x1_@UNQ_@49 MainOpts.x2_@UNQ_@50 MainOpts.x3_@UNQ_@51
         in let
              Leaf = \x1_@UNQ_@48 ->
                       Leaf MainOpts.x1_@UNQ_@48
            in let
                 n_@NEW_@17_@UNQ_@54_@CCN = \x1_@NEW_@18_@UNQ_@52 ->
                                              let! u5_60 = - Num_@DCT_@u88_18_0 x1_@NEW_@18_@UNQ_@52 1
                                              in let
                                                   sub_@UNQ_@60 = genBalancedBinTree u5_60
                                                 in let
                                                      u5_66 = ()
                                                    in BinTree sub_@UNQ_@60 u5_66 sub_@UNQ_@60
                 genBalancedBinTree = \x1_@UNQ_@52 ->
                                        let
                                          n_@UNQ_@54_@CCN = n_@NEW_@17_@UNQ_@54_@CCN x1_@UNQ_@52
                                        in let! u3_216_0_@UNQ_@62 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@52 1
                                           in let! u3_216_0_@UNQ_@63_@EVL = u3_216_0_@UNQ_@62
                                              in case u3_216_0_@UNQ_@63_@EVL of
                                                   False  -> n_@UNQ_@54_@CCN
                                                   True  -> let
                                                              u5_74 = ()
                                                            in let! u5_73 = Leaf u5_74
                                                               in u5_73
               in let
                    mapTreeUnitToFac = \x1_@UNQ_@64 ->
                                         let! u3_383_0_@UNQ_@66_@EVL = x1_@UNQ_@64
                                         in case u3_383_0_@UNQ_@66_@EVL of
                                              BinTree l_@UNQ_@67_@FLD_@0 u3_432_0_@UNQ_@68_@FLD_@1 r_@UNQ_@69_@FLD_@2 -> let
                                                                                                                           r'_@UNQ_@73 = mapTreeUnitToFac r_@UNQ_@69_@FLD_@2
                                                                                                                         in let
                                                                                                                              l'_@UNQ_@72 = mapTreeUnitToFac l_@UNQ_@67_@FLD_@0
                                                                                                                            in let
                                                                                                                                 u5_87 = fact 12
                                                                                                                               in BinTree l'_@UNQ_@72 u5_87 r'_@UNQ_@73
                                              Leaf u3_392_0_@UNQ_@74_@FLD_@0 -> let
                                                                                  u5_89 = fact 12
                                                                                in let! u5_88 = Leaf u5_89
                                                                                   in u5_88
                  in let
                       mirror = \x1_@UNQ_@98 ->
                                  let! u3_828_0_@UNQ_@102_@EVL = x1_@UNQ_@98
                                  in case u3_828_0_@UNQ_@102_@EVL of
                                       BinTree l_@UNQ_@103_@FLD_@0 a_@UNQ_@104_@FLD_@1 r_@UNQ_@105_@FLD_@2 -> let
                                                                                                                u5_99 = mirror l_@UNQ_@103_@FLD_@0
                                                                                                              in let
                                                                                                                   u5_98 = mirror r_@UNQ_@105_@FLD_@2
                                                                                                                 in let! u5_95 = BinTree u5_98 a_@UNQ_@104_@FLD_@1 u5_99
                                                                                                                    in u5_95
                                       Leaf __@UNQ_@109 -> x1_@UNQ_@98
                     in let
                          u5_103 = genBalancedBinTree 20
                        in let
                             u5_102 = mapTreeUnitToFac u5_103
                           in let
                                testTree = mirror u5_102
                              in let
                                   u5_106 = flatten testTree
                                 in let
                                      testBinTreeNoInternalsViaList = length u5_106
                                    in let
                                         main = print Show_@DCT_@u95_17_0 testBinTreeNoInternalsViaList
                                       in let
                                            u5_113 = ()
                                          in let! main = ehcRunMain main u5_113
                                             in main

BinTreeInlinedMap:
("TyGam: ",BinTree ->
  Type Error: MainOpts.BinTree dataTgi)
("DataGam: ",BinTree a 5 6 7 8 9 10 11 12
  MainOpts.Leaf {_u a (5,6)}
  MainOpts.BinTree {_u (BinTree (5 6 7 8 9 10 11 12) (a)) (7,8)} {_u a (9,10)} {_u (BinTree (5 6 7 8 9 10 11 12) (a)) (11,12)})
("num constraints: ",1373)
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}, a2_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@45}, a_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@103}})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@1712}, a2_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]}, a_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}})
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@1724}, a2_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@197}, a_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}})
"error warning: top Found testforTop"
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@1750}, a2_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]}, a_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}})
("still to do cs",0,83)
("Tys",n_@UNQ_@53 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
u5_112 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331))) (lzero,lone)}
__@UNQ_@125 ->
  {_u (forall {} . cs: 0 => CA@1331) (CA@1404,CA@1405)}
u5_58 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_83 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
main ->
  {_u (forall {CA@8237,CA@8074} . cs: 0 => (CA@8237 CA@8074)) (lone,lone)}
l_@UNQ_@63_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@567 CA@568 lzero lone CA@563 CA@564 CA@426 lone) (CA@579))) (lzero,lone)}
r_@UNQ_@65_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@567 CA@568 lzero lone CA@563 CA@564 CA@426 lone) (CA@579))) (CA@426,lone)}
mirror ->
  {_u (forall {CA@1404,CA@1405,CA@1328,CA@1331} . cs: 0 => ({_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) lzero})) (lone,lone)}
u5_91 ->
  {_u (forall {} . cs: 0 => ()) (lzero,CA@971)}
Leaf ->
  {_u (forall {CA@780,CA@781,CA@786,CA@782,CA@783,CA@784,CA@779,CA@776,CA@775,CA@773} . cs: 0 => ({_u CA@773 (CA@775,CA@776)} -> {_u (BinTree (CA@775 CA@776 CA@779 CA@780 CA@781 CA@782 CA@783 CA@784) (CA@773)) CA@786})) (top,top)}
n_@UNQ_@82_@CCN ->
  {_u (forall {} . cs: 0 => (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (()))) (lzero,{set {0,1}})}
u5_106 ->
  {_u (forall {} . cs: 0 => Int) (top,lzero)}
u5_105 ->
  {_u (forall {CA@5829,CA@5833,CA@5832,CA@5835,CA@5834,CA@5830,CA@1205} . cs: 1 => (BinTree (CA@1205 lzero CA@5835 CA@5829 CA@5830 CA@5832 CA@5833 CA@5834) (Int))
           CA@1226 (+) lzero == CA@1226
      ) (CA@1226,lone)}
u5_64 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
BinTree ->
  {_u (forall {CA@403,CA@402,CA@401,CA@397,CA@395,CA@376,CA@377,CA@384,CA@385,CA@386,CA@387,CA@380,CA@381,CA@378} . cs: 4 => ({_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) (lzero,lzero)} -> {_u ({_u CA@378 (CA@401,CA@402)} -> {_u ({_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) (CA@384,CA@385)} -> {_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) CA@395}) CA@397}) CA@403})
           CA@397 . CA@376 == lzero
           CA@397 . CA@377 == lzero
           CA@397 . CA@380 == CA@401
           CA@397 . CA@381 == CA@402
      ) (top,top)}
countLeafs ->
  {_u (forall {CA@426,CA@568,CA@567,CA@564,CA@563,CA@579} . cs: 1 => ({_u (BinTree (CA@567 CA@568 lzero lone CA@563 CA@564 CA@426 lone) (CA@579)) (lzero,lone)} -> {_u Int top})
           lzero U CA@426 == CA@426
      ) (lone,lzero)}
sub_@UNQ_@88 ->
  {_u (forall {} . cs: 3 => (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (()))
           CA@857 > lzero == lzero
           CA@857 (+) lzero == CA@857
           CA@857 > lzero == lzero
      ) (lzero,CA@857)}
l_@UNQ_@106_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (top lone lzero lone lzero lone CA@735 lone) (Int))) (lzero,lone)}
l_@UNQ_@72_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27))) (CA@101,CA@106)}
fact ->
  {_u (forall {} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u Int top})) (lzero,lzero)}
u3_824_0_@UNQ_@105_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (top lone lzero lone lzero lone CA@735 lone) (Int))) (lone,lomega)}
u3_242_0_@UNQ_@64_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@579) (CA@563,CA@564)}
u5_116 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331))) (lzero,lzero)}
u5_120 ->
  {_u (forall {CA@6510,CA@6506,CA@6505,CA@6508,CA@6509,CA@857} . cs: 0 => (BinTree (lzero CA@6506 CA@6510 CA@6509 CA@6508 CA@6505 lzero CA@857) (()))) (lzero,lone)}
u5_125 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
x_@UNQ_@112_@FLD_@0 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u3_218_0_@UNQ_@68_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@579) (CA@567,CA@568)}
u5_104 ->
  {_u (forall {} . cs: 0 => Int) (top,lzero)}
r_@UNQ_@121_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331))) (lzero,lzero)}
x1_@NEW_@29_@UNQ_@80 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
u3_695_0_@UNQ_@96_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@1259) (CA@1180,CA@1181)}
u3_646_0_@UNQ_@94_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1241 CA@1242 lzero lzero CA@1180 CA@1181 lzero lzero) (CA@1259))) (lone,lomega)}
u3_37_0_@UNQ_@55_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
testTreeInlinedMap ->
  {_u (forall {CA@7116,CA@7114,CA@7117,CA@7112} . cs: 0 => (BinTree (CA@7114 CA@7112 lzero lzero CA@7117 CA@7116 lzero lzero) (Int))) (lzero,lomega)}
flatten ->
  {_u (forall {CA@143,CA@115,CA@101,CA@106,CA@27} . cs: 31 => ({_u (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27)) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero})
           CA@106 U lzero == {set {0,1}}
           CA@106 U lzero == {set {0,1}}
           lone > CA@106 == CA@106
           CA@106 > CA@101 == CA@101
           CA@106 > lone == CA@106
           CA@106 > lone == CA@106
           CA@106 > lone == CA@106
           {set {0,1}} > CA@115 == CA@115
           CA@106 (+) lzero == CA@106
           CA@106 (+) lzero == CA@106
           lzero U CA@115 == CA@115
           lzero U CA@101 == CA@101
           CA@106 > lzero == lzero
           CA@106 (+) lzero == CA@106
           CA@106 > lzero == lzero
           lzero > CA@106 == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . {set {0,1}} == {set {0,1}}
           CA@106 . {set {0,1}} == {set {0,1}}
           lone U CA@106 == CA@106
           lone U CA@106 == CA@106
           lzero > CA@106 == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . {set {0,1}} == {set {0,1}}
           CA@106 . {set {0,1}} == {set {0,1}}
           lone U CA@106 == CA@106
           lzero U CA@143 == CA@143
      ) ({set {1,infty}},lone)}
r_@UNQ_@97_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1241 CA@1242 lzero lzero CA@1180 CA@1181 lzero lzero) (CA@1259))) (lzero,lzero)}
u5_25 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
l_@UNQ_@119_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331))) (lzero,lzero)}
u5_26 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
genBalancedBinTree ->
  {_u (forall {CA@857,CA@4578} . cs: 11 => ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) lzero})
           lzero (+) CA@857 == CA@857
           CA@857 > lone == lone
           CA@857 > lone == lone
           CA@857 > top == top
           CA@857 > {set {1,infty}} == {set {1,infty}}
           CA@857 > lzero == lzero
           CA@857 (+) lzero == CA@857
           CA@857 > lzero == lzero
           CA@857 > lzero == lzero
           CA@857 (+) lzero == CA@857
           CA@857 > lzero == lzero
      ) (lone,lone)}
mapTreeUnitToFac ->
  {_u (forall {CA@1135,CA@1181,CA@1180,CA@1226,CA@1241,CA@1242,CA@4550,CA@1259} . cs: 5 => ({_u (BinTree (CA@1241 CA@1242 lzero lzero CA@1180 CA@1181 lzero lzero) (CA@1259)) (lzero,lone)} -> {_u (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int)) CA@1226})
           lzero U CA@1226 == CA@1226
           CA@1135 U CA@1226 == CA@1226
           CA@1226 (+) lzero == CA@1226
           CA@1226 (+) lzero == CA@1226
           CA@1226 (+) lzero == CA@1226
      ) (lone,lone)}
u3_479_0_@UNQ_@90 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
u3_944_0_@UNQ_@118_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331))) (lone,lomega)}
x1_@UNQ_@69 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27))) (lzero,lone)}
x1_@UNQ_@92 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1241 CA@1242 lzero lzero CA@1180 CA@1181 lzero lzero) (CA@1259))) (lzero,lone)}
x1_@UNQ_@80 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
x1_@UNQ_@60 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@567 CA@568 lzero lone CA@563 CA@564 CA@426 lone) (CA@579))) (lzero,lone)}
x1_@UNQ_@57 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378))) (lzero,lzero)}
x2_@UNQ_@58 ->
  {_u (forall {} . cs: 0 => CA@378) (CA@401,CA@402)}
x1_@UNQ_@56 ->
  {_u (forall {} . cs: 0 => CA@773) (CA@775,CA@776)}
x3_@UNQ_@59 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378))) (CA@384,CA@385)}
u5_8 ->
  {_u (forall {} . cs: 1 => ([] (lzero lzero lzero lzero) (CA@27))
           lzero U CA@115 == CA@115
      ) (lzero,{set {0,1}})}
u5_131 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
x1_@UNQ_@103 ->
  {_u (forall {} . cs: 0 => (BinTree (top lone lzero lone lzero lone CA@735 lone) (Int))) (lzero,lone)}
x1_@UNQ_@114 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331))) (lzero,{set {1,infty}})}
x_@UNQ_@107_@FLD_@1 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
r_@UNQ_@74_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27))) (lzero,lzero)}
u5_130 ->
  {_u (forall {} . cs: 0 => ([] (lzero lzero lzero lzero) (Int))) (lzero,lone)}
u5_129 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
a_@UNQ_@73_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@27) (CA@115,lzero)}
u5_51 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_48 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_128 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
l_@UNQ_@95_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1241 CA@1242 lzero lzero CA@1180 CA@1181 lzero lzero) (CA@1259))) (lzero,lzero)}
r_@UNQ_@108_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (top lone lzero lone lzero lone CA@735 lone) (Int))) (CA@735,lone)}
main ->
  {_u (forall {CA@8236} . cs: 0 => (CA@8237 CA@8236)) (lone,lone)}
u5_22 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
l'_@UNQ_@100 ->
  {_u (forall {} . cs: 1 => (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int))
           CA@1226 (+) lzero == CA@1226
      ) (CA@1226,lzero)}
u3_655_0_@UNQ_@102_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@1259) (CA@1241,CA@1242)}
r'_@UNQ_@101 ->
  {_u (forall {} . cs: 1 => (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int))
           CA@1226 (+) lzero == CA@1226
      ) (CA@1226,lzero)}
n_@NEW_@28_@UNQ_@82_@CCN ->
  {_u (forall {CA@857,CA@4578} . cs: 11 => ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) lzero})
           lzero (+) CA@857 == CA@857
           CA@857 > lone == lone
           CA@857 > lone == lone
           CA@857 > top == top
           CA@857 > {set {1,infty}} == {set {1,infty}}
           CA@857 > lzero == lzero
           CA@857 (+) lzero == CA@857
           CA@857 > lzero == lzero
           CA@857 > lzero == lzero
           CA@857 (+) lzero == CA@857
           CA@857 > lzero == lzero
      ) (lzero,lzero)}
u5_61 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
a_@UNQ_@78_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@27) (CA@143,lzero)}
u5_90 ->
  {_u (forall {CA@5818,CA@5817,CA@5819,CA@5814,CA@5815,CA@5820,CA@971} . cs: 0 => (BinTree (lzero CA@971 CA@5820 CA@5814 CA@5815 CA@5817 CA@5818 CA@5819) (()))) (lzero,lone)}
u3_345_0_@UNQ_@71_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27))) (lone,lomega)}
u3_479_0_@UNQ_@91_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
testBinTreeInlinedMap ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_65 ->
  {_u (forall {} . cs: 1 => Int
           lzero U CA@735 == CA@735
      ) (top,lone)}
u5_7 ->
  {_u (forall {} . cs: 4 => ([] (lzero lzero lzero lzero) (CA@27))
           lzero U CA@101 == CA@101
           CA@106 > lzero == lzero
           CA@106 (+) lzero == CA@106
           CA@106 > lzero == lzero
      ) (lzero,CA@106)}
u3_209_0_@UNQ_@62_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@567 CA@568 lzero lone CA@563 CA@564 CA@426 lone) (CA@579))) (lone,lomega)}
u5_11 ->
  {_u (forall {CA@154,CA@149} . cs: 1 => ([] (lzero lzero CA@154 CA@149) (CA@27))
           lzero U CA@143 == CA@143
      ) (lzero,lone)}
u5_5 ->
  {_u (forall {} . cs: 8 => ([] (lzero lzero lzero lzero) (CA@27))
           lone U CA@106 == CA@106
           lzero > CA@106 == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . {set {0,1}} == {set {0,1}}
           CA@106 . {set {0,1}} == {set {0,1}}
           lone U CA@106 == CA@106
      ) (lzero,lone)}
u5_10 ->
  {_u (forall {} . cs: 0 => ([] (lzero lzero lzero lzero) (CA@27))) (lzero,lzero)}
u5_45 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
sumTree ->
  {_u (forall {CA@735} . cs: 1 => ({_u (BinTree (top lone lzero lone lzero lone CA@735 lone) (Int)) (lzero,lone)} -> {_u Int top})
           lzero U CA@735 == CA@735
      ) (lone,lzero)}
u3_37_0_@UNQ_@54 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
u5_115 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331))) (lzero,lzero)}
u5_77 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
a_@UNQ_@120_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@1331) (lzero,CA@1328)}
u5_119 ->
  {_u (forall {CA@6791,CA@6794,CA@6792,CA@6790,CA@6793} . cs: 0 => (BinTree (CA@6791 lzero CA@6793 CA@6794 CA@6790 CA@6792 lzero lzero) (Int))) (lzero,{set {1,infty}})}
u5_138 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
u5_52 ->
  {_u (forall {} . cs: 1 => Int
           lzero U CA@426 == CA@426
      ) (top,lone)})
"start optimizing"
let
  flatten = (\x1_@UNQ_@69 ->
               let!
                 u3_345_0_@UNQ_@71_@EVL = x1_@UNQ_@69 :: {_u (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27)) lzero}
               in
                 (case u3_345_0_@UNQ_@71_@EVL :: {_u (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27)) lone} of
                    BinTree l_@UNQ_@72_@FLD_@0 a_@UNQ_@73_@FLD_@1 r_@UNQ_@74_@FLD_@2 -> let
                                                                                          u5_10 = (flatten :: {_u ({_u (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27)) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) lone} r_@UNQ_@74_@FLD_@2) :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                                                                                        in
                                                                                          let
                                                                                            u5_8 = ((: :: {_u ({_u CA@27 (lzero,lzero)} -> {_u ({_u ([] (lzero lzero lzero lzero) (CA@27)) (lzero,lzero)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) lone}) top} a_@UNQ_@73_@FLD_@1) :: {_u ({_u ([] (lzero lzero lzero lzero) (CA@27)) (lzero,lzero)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) lone} u5_10) :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                                                                                          in
                                                                                            let
                                                                                              u5_7 = (flatten :: {_u ({_u (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27)) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) lone} l_@UNQ_@72_@FLD_@0) :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                                                                                            in
                                                                                              let
                                                                                                u5_5 = ((++ :: {_u ({_u ([] (lzero lzero lzero lzero) (CA@27)) (lzero,CA@106)} -> {_u ({_u ([] (lzero lzero lzero lzero) (CA@27)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) CA@106}) top} u5_7) :: {_u ({_u ([] (lzero lzero lzero lzero) (CA@27)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) CA@106} u5_8) :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                                                                                              in
                                                                                                u5_5 :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                    Leaf a_@UNQ_@78_@FLD_@0 -> let
                                                 u5_11 = ((: :: {_u ({_u CA@27 (lzero,lzero)} -> {_u ({_u ([] (lzero lzero CA@154 CA@149) (CA@27)) (CA@154,CA@149)} -> {_u ([] (lzero lzero CA@154 CA@149) (CA@27)) lzero}) lone}) top} a_@UNQ_@78_@FLD_@0) :: {_u ({_u ([] (lzero lzero CA@154 CA@149) (CA@27)) (CA@154,CA@149)} -> {_u ([] (lzero lzero CA@154 CA@149) (CA@27)) lzero}) lone} []) :: {_u ([] (lzero lzero CA@154 CA@149) (CA@27)) lzero}
                                               in
                                                 u5_11 :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                 ) :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
            ) :: {_u ({_u (BinTree (CA@143 lzero CA@101 CA@106 CA@115 lzero lzero lzero) (CA@27)) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) {set {1,infty}}}
in
  let
    fact = (\n_@UNQ_@53 ->
              let
                u3_37_0_@UNQ_@54 = (((<= :: {_u ({_u (_'Ord (CA@3670 CA@3667 CA@3666 CA@3732 lone CA@3677 CA@3676 CA@3679 lone CA@3681 CA@3675 CA@3675 CA@3674 lone top CA@3689 lone CA@3684 CA@3686 CA@3686 CA@3683 lone top CA@3707 CA@3706 CA@3736 CA@3733 CA@3711 CA@3709 CA@3709 CA@3708 lone top lone lone lzero lone lone lzero lone top CA@3669 CA@3668 CA@3715 CA@3714 CA@3717 CA@3716 CA@3713 top CA@3672 CA@3673 CA@3719 CA@3718 CA@3722 CA@3720 CA@3723 top CA@3731 lone CA@3726 CA@3727 CA@3727 CA@3725 lone top CA@3729 CA@3730 CA@3665 CA@3663 CA@3663 CA@3662 lone top CA@3735 CA@3737 CA@3694 CA@3698 CA@3698 CA@3696 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} n_@UNQ_@53) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
              in
                let!
                  u3_37_0_@UNQ_@55_@EVL = u3_37_0_@UNQ_@54 :: {_u Bool top}
                in
                  (case u3_37_0_@UNQ_@55_@EVL :: {_u Bool lone} of
                     False -> let
                                u5_26 = (((- :: {_u ({_u (_'Num (CA@3950 CA@3949 CA@3951 top CA@3953 CA@3960 CA@3961 CA@3964 lone CA@3958 CA@3962 CA@3962 CA@3963 lone top CA@3997 lone CA@3995 CA@4000 CA@4000 CA@3996 lone top CA@3993 CA@3992 lone lone lzero lone lone lzero lone top CA@3933 CA@3934 CA@3982 CA@3978 CA@3978 CA@3980 lone top CA@3935 lone CA@3985 CA@3942 CA@3942 CA@3943 lone top CA@3938 lone CA@3947 lone top top CA@3939 CA@3977 lone CA@3977 CA@3931 CA@3932 CA@3973 CA@3975 top CA@3937 lone CA@3967 lone top CA@3955 CA@3952 CA@3970 CA@3971 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@53) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                              in
                                let
                                  u5_25 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} u5_26) :: {_u Int top}
                                in
                                  let
                                    u5_22 = (((* :: {_u ({_u (_'Num (CA@4242 CA@4243 CA@4262 top CA@4248 CA@4263 CA@4264 CA@4265 lone CA@4267 CA@4261 CA@4261 CA@4258 lone top CA@4259 lone CA@4251 CA@4256 CA@4256 CA@4252 lone top CA@4220 CA@4222 CA@4197 lone CA@4221 CA@4226 CA@4226 CA@4223 lone top lone lone lzero lone lone lzero lone top CA@4195 lone CA@4202 CA@4204 CA@4204 CA@4199 lone top CA@4244 lone CA@4205 lone top top CA@4240 CA@4233 lone CA@4233 CA@4239 CA@4237 CA@4229 CA@4216 top CA@4238 lone CA@4214 lone top CA@4245 CA@4246 CA@4213 CA@4228 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@53) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_25) :: {_u Int top}
                                  in
                                    u5_22 :: {_u Int top}
                     True -> 1 :: {_u Int top}
                  ) :: {_u Int top}
           ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lzero}
  in
    let
      BinTree = (\x1_@UNQ_@57 ->
                   (\x2_@UNQ_@58 ->
                      (\x3_@UNQ_@59 ->
                         (MainOpts.BinTree x1_@UNQ_@57 x2_@UNQ_@58 x3_@UNQ_@59) :: {_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) CA@395}
                      ) :: {_u ({_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) (CA@384,CA@385)} -> {_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) CA@395}) CA@397}
                   ) :: {_u ({_u CA@378 (CA@401,CA@402)} -> {_u ({_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) (CA@384,CA@385)} -> {_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) CA@395}) CA@397}) CA@403}
                ) :: {_u ({_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) (lzero,lzero)} -> {_u ({_u CA@378 (CA@401,CA@402)} -> {_u ({_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) (CA@384,CA@385)} -> {_u (BinTree (CA@386 CA@387 CA@376 CA@377 CA@380 CA@381 CA@384 CA@385) (CA@378)) CA@395}) CA@397}) CA@403}) top}
    in
      let
        countLeafs = (\x1_@UNQ_@60 ->
                        let!
                          u3_209_0_@UNQ_@62_@EVL = x1_@UNQ_@60 :: {_u (BinTree (CA@567 CA@568 lzero lone CA@563 CA@564 CA@426 lone) (CA@579)) lzero}
                        in
                          (case u3_209_0_@UNQ_@62_@EVL :: {_u (BinTree (CA@567 CA@568 lzero lone CA@563 CA@564 CA@426 lone) (CA@579)) lone} of
                             BinTree l_@UNQ_@63_@FLD_@0 u3_242_0_@UNQ_@64_@FLD_@1 r_@UNQ_@65_@FLD_@2 -> let
                                                                                                          u5_52 = (countLeafs :: {_u ({_u (BinTree (CA@567 CA@568 lzero lone CA@563 CA@564 CA@426 lone) (CA@579)) (lzero,lone)} -> {_u Int top}) lone} r_@UNQ_@65_@FLD_@2) :: {_u Int top}
                                                                                                        in
                                                                                                          let
                                                                                                            u5_51 = (countLeafs :: {_u ({_u (BinTree (CA@567 CA@568 lzero lone CA@563 CA@564 CA@426 lone) (CA@579)) (lzero,lone)} -> {_u Int top}) lone} l_@UNQ_@63_@FLD_@0) :: {_u Int top}
                                                                                                          in
                                                                                                            let
                                                                                                              u5_48 = (((+ :: {_u ({_u (_'Num (CA@4637 CA@4638 CA@4643 top CA@4640 CA@4693 CA@4692 CA@4691 lone CA@4689 CA@4695 CA@4695 CA@4694 lone top CA@4684 lone CA@4679 CA@4681 CA@4681 CA@4678 lone top CA@4675 CA@4674 CA@4644 lone CA@4677 CA@4671 CA@4671 CA@4670 lone top CA@4645 CA@4647 CA@4668 CA@4666 CA@4666 CA@4664 lone top lone lone lzero lone lone lzero lone top CA@4655 lone CA@4703 lone top top CA@4656 CA@4662 lone CA@4662 CA@4653 CA@4652 CA@4659 CA@4658 top CA@4651 lone CA@4704 lone top CA@4642 CA@4641 CA@4708 CA@4707 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_51) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                                                                                            in
                                                                                                              let
                                                                                                                u5_45 = (((+ :: {_u ({_u (_'Num (CA@4888 CA@4889 CA@4894 top CA@4891 CA@4944 CA@4943 CA@4942 lone CA@4940 CA@4946 CA@4946 CA@4945 lone top CA@4935 lone CA@4930 CA@4932 CA@4932 CA@4929 lone top CA@4926 CA@4925 CA@4895 lone CA@4928 CA@4922 CA@4922 CA@4921 lone top CA@4896 CA@4898 CA@4919 CA@4917 CA@4917 CA@4915 lone top lone lone lzero lone lone lzero lone top CA@4906 lone CA@4954 lone top top CA@4907 CA@4913 lone CA@4913 CA@4904 CA@4903 CA@4910 CA@4909 top CA@4902 lone CA@4955 lone top CA@4893 CA@4892 CA@4959 CA@4958 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_48) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_52) :: {_u Int top}
                                                                                                              in
                                                                                                                u5_45 :: {_u Int top}
                             Leaf u3_218_0_@UNQ_@68_@FLD_@0 -> 1 :: {_u Int top}
                          ) :: {_u Int top}
                     ) :: {_u ({_u (BinTree (CA@567 CA@568 lzero lone CA@563 CA@564 CA@426 lone) (CA@579)) (lzero,lone)} -> {_u Int top}) lone}
      in
        let
          sumTree = (\x1_@UNQ_@103 ->
                       let!
                         u3_824_0_@UNQ_@105_@EVL = x1_@UNQ_@103 :: {_u (BinTree (top lone lzero lone lzero lone CA@735 lone) (Int)) lzero}
                       in
                         (case u3_824_0_@UNQ_@105_@EVL :: {_u (BinTree (top lone lzero lone lzero lone CA@735 lone) (Int)) lone} of
                            BinTree l_@UNQ_@106_@FLD_@0 x_@UNQ_@107_@FLD_@1 r_@UNQ_@108_@FLD_@2 -> let
                                                                                                     u5_65 = (sumTree :: {_u ({_u (BinTree (top lone lzero lone lzero lone CA@735 lone) (Int)) (lzero,lone)} -> {_u Int top}) lone} r_@UNQ_@108_@FLD_@2) :: {_u Int top}
                                                                                                   in
                                                                                                     let
                                                                                                       u5_64 = (sumTree :: {_u ({_u (BinTree (top lone lzero lone lzero lone CA@735 lone) (Int)) (lzero,lone)} -> {_u Int top}) lone} l_@UNQ_@106_@FLD_@0) :: {_u Int top}
                                                                                                     in
                                                                                                       let
                                                                                                         u5_61 = (((+ :: {_u ({_u (_'Num (CA@5246 CA@5247 CA@5252 top CA@5249 CA@5302 CA@5301 CA@5300 lone CA@5298 CA@5304 CA@5304 CA@5303 lone top CA@5293 lone CA@5288 CA@5290 CA@5290 CA@5287 lone top CA@5284 CA@5283 CA@5253 lone CA@5286 CA@5280 CA@5280 CA@5279 lone top CA@5254 CA@5256 CA@5277 CA@5275 CA@5275 CA@5273 lone top lone lone lzero lone lone lzero lone top CA@5264 lone CA@5312 lone top top CA@5265 CA@5271 lone CA@5271 CA@5262 CA@5261 CA@5268 CA@5267 top CA@5260 lone CA@5313 lone top CA@5251 CA@5250 CA@5317 CA@5316 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_64) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} x_@UNQ_@107_@FLD_@1) :: {_u Int top}
                                                                                                       in
                                                                                                         let
                                                                                                           u5_58 = (((+ :: {_u ({_u (_'Num (CA@5498 CA@5499 CA@5504 top CA@5501 CA@5554 CA@5553 CA@5552 lone CA@5550 CA@5556 CA@5556 CA@5555 lone top CA@5545 lone CA@5540 CA@5542 CA@5542 CA@5539 lone top CA@5536 CA@5535 CA@5505 lone CA@5538 CA@5532 CA@5532 CA@5531 lone top CA@5506 CA@5508 CA@5529 CA@5527 CA@5527 CA@5525 lone top lone lone lzero lone lone lzero lone top CA@5516 lone CA@5564 lone top top CA@5517 CA@5523 lone CA@5523 CA@5514 CA@5513 CA@5520 CA@5519 top CA@5512 lone CA@5565 lone top CA@5503 CA@5502 CA@5569 CA@5568 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_61) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_65) :: {_u Int top}
                                                                                                         in
                                                                                                           u5_58 :: {_u Int top}
                            Leaf x_@UNQ_@112_@FLD_@0 -> x_@UNQ_@112_@FLD_@0 :: {_u Int top}
                         ) :: {_u Int top}
                    ) :: {_u ({_u (BinTree (top lone lzero lone lzero lone CA@735 lone) (Int)) (lzero,lone)} -> {_u Int top}) lone}
        in
          let
            Leaf = (\x1_@UNQ_@56 ->
                      (MainOpts.Leaf x1_@UNQ_@56) :: {_u (BinTree (CA@775 CA@776 CA@779 CA@780 CA@781 CA@782 CA@783 CA@784) (CA@773)) CA@786}
                   ) :: {_u ({_u CA@773 (CA@775,CA@776)} -> {_u (BinTree (CA@775 CA@776 CA@779 CA@780 CA@781 CA@782 CA@783 CA@784) (CA@773)) CA@786}) top}
          in
            let
              n_@NEW_@28_@UNQ_@82_@CCN = (\x1_@NEW_@29_@UNQ_@80 ->
                                            let
                                              u5_77 = (((- :: {_u ({_u (_'Num (CA@5889 CA@5888 CA@5890 top CA@5892 CA@5899 CA@5900 CA@5903 lone CA@5897 CA@5901 CA@5901 CA@5902 lone top CA@5936 lone CA@5934 CA@5939 CA@5939 CA@5935 lone top CA@5932 CA@5931 lone lone lzero lone lone lzero lone top CA@5872 CA@5873 CA@5921 CA@5917 CA@5917 CA@5919 lone top CA@5874 lone CA@5924 CA@5881 CA@5881 CA@5882 lone top CA@5877 lone CA@5886 lone top top CA@5878 CA@5916 lone CA@5916 CA@5870 CA@5871 CA@5912 CA@5914 top CA@5876 lone CA@5906 lone top CA@5894 CA@5891 CA@5909 CA@5910 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} x1_@NEW_@29_@UNQ_@80) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                            in
                                              let
                                                sub_@UNQ_@88 = (genBalancedBinTree :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) lzero}) lone} u5_77) :: {_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) lzero}
                                              in
                                                let
                                                  u5_83 = () :: {_u () lzero}
                                                in
                                                  (((BinTree :: {_u ({_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) (lzero,lzero)} -> {_u ({_u () (lzero,lzero)} -> {_u ({_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) (lzero,CA@857)} -> {_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) lzero}) lone}) lone}) lone} sub_@UNQ_@88) :: {_u ({_u () (lzero,lzero)} -> {_u ({_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) (lzero,CA@857)} -> {_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) lzero}) lone}) lone} u5_83) :: {_u ({_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) (lzero,CA@857)} -> {_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) lzero}) lone} sub_@UNQ_@88) :: {_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) lzero}
                                         ) :: {_u ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) lzero}) lzero}
              genBalancedBinTree = (\x1_@UNQ_@80 ->
                                      let
                                        n_@UNQ_@82_@CCN = (n_@NEW_@28_@UNQ_@82_@CCN :: {_u ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) lzero}) lone} x1_@UNQ_@80) :: {_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) lzero}
                                      in
                                        let
                                          u3_479_0_@UNQ_@90 = (((< :: {_u ({_u (_'Ord (CA@6214 CA@6215 CA@6222 CA@6174 lone CA@6223 CA@6219 CA@6221 lone CA@6220 CA@6218 CA@6218 CA@6180 lone top CA@6179 lone CA@6185 CA@6183 CA@6183 CA@6176 lone top CA@6188 CA@6187 CA@6171 CA@6172 CA@6190 CA@6192 CA@6192 CA@6191 lone top CA@6167 lone CA@6200 CA@6196 CA@6196 CA@6197 lone top CA@6210 CA@6211 CA@6205 CA@6202 CA@6203 CA@6206 CA@6207 top CA@6212 CA@6213 CA@6201 CA@6157 CA@6158 CA@6155 CA@6156 top CA@6208 lone CA@6153 CA@6152 CA@6152 CA@6147 lone top lone lone lzero lone lone lzero lone top CA@6170 CA@6169 CA@6160 CA@6162 CA@6162 CA@6163 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} x1_@UNQ_@80) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
                                        in
                                          let!
                                            u3_479_0_@UNQ_@91_@EVL = u3_479_0_@UNQ_@90 :: {_u Bool top}
                                          in
                                            (case u3_479_0_@UNQ_@91_@EVL :: {_u Bool lone} of
                                               False -> n_@UNQ_@82_@CCN :: {_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) lzero}
                                               True -> let
                                                         u5_91 = () :: {_u () lzero}
                                                       in
                                                         let
                                                           u5_90 = (Leaf :: {_u ({_u () (lzero,CA@971)} -> {_u (BinTree (lzero CA@971 CA@5820 CA@5814 CA@5815 CA@5817 CA@5818 CA@5819) (())) lzero}) lone} u5_91) :: {_u (BinTree (lzero CA@971 CA@5820 CA@5814 CA@5815 CA@5817 CA@5818 CA@5819) (())) lzero}
                                                         in
                                                           u5_90 :: {_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) lzero}
                                            ) :: {_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) lzero}
                                   ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@4578 lzero lzero lzero lzero lzero CA@857) (())) lzero}) lone}
            in
              let
                mapTreeUnitToFac = (\x1_@UNQ_@92 ->
                                      let!
                                        u3_646_0_@UNQ_@94_@EVL = x1_@UNQ_@92 :: {_u (BinTree (CA@1241 CA@1242 lzero lzero CA@1180 CA@1181 lzero lzero) (CA@1259)) lzero}
                                      in
                                        (case u3_646_0_@UNQ_@94_@EVL :: {_u (BinTree (CA@1241 CA@1242 lzero lzero CA@1180 CA@1181 lzero lzero) (CA@1259)) lone} of
                                           BinTree l_@UNQ_@95_@FLD_@0 u3_695_0_@UNQ_@96_@FLD_@1 r_@UNQ_@97_@FLD_@2 -> let
                                                                                                                        r'_@UNQ_@101 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@1241 CA@1242 lzero lzero CA@1180 CA@1181 lzero lzero) (CA@1259)) (lzero,lone)} -> {_u (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int)) CA@1226}) lone} r_@UNQ_@97_@FLD_@2) :: {_u (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int)) CA@1226}
                                                                                                                      in
                                                                                                                        let
                                                                                                                          l'_@UNQ_@100 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@1241 CA@1242 lzero lzero CA@1180 CA@1181 lzero lzero) (CA@1259)) (lzero,lone)} -> {_u (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int)) CA@1226}) lone} l_@UNQ_@95_@FLD_@0) :: {_u (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int)) CA@1226}
                                                                                                                        in
                                                                                                                          let
                                                                                                                            u5_104 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 12) :: {_u Int top}
                                                                                                                          in
                                                                                                                            (((BinTree :: {_u ({_u (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int)) (lzero,lzero)} -> {_u ({_u Int (lzero,lzero)} -> {_u ({_u (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int)) (CA@1135,lzero)} -> {_u (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int)) CA@1226}) lone}) lone}) lone} l'_@UNQ_@100) :: {_u ({_u Int (lzero,lzero)} -> {_u ({_u (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int)) (CA@1135,lzero)} -> {_u (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int)) CA@1226}) lone}) lone} u5_104) :: {_u ({_u (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int)) (CA@1135,lzero)} -> {_u (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int)) CA@1226}) lone} r'_@UNQ_@101) :: {_u (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int)) CA@1226}
                                           Leaf u3_655_0_@UNQ_@102_@FLD_@0 -> let
                                                                                u5_106 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 12) :: {_u Int top}
                                                                              in
                                                                                let
                                                                                  u5_105 = (Leaf :: {_u ({_u Int (CA@1205,lzero)} -> {_u (BinTree (CA@1205 lzero CA@5835 CA@5829 CA@5830 CA@5832 CA@5833 CA@5834) (Int)) CA@1226}) lone} u5_106) :: {_u (BinTree (CA@1205 lzero CA@5835 CA@5829 CA@5830 CA@5832 CA@5833 CA@5834) (Int)) CA@1226}
                                                                                in
                                                                                  u5_105 :: {_u (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int)) CA@1226}
                                        ) :: {_u (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int)) CA@1226}
                                   ) :: {_u ({_u (BinTree (CA@1241 CA@1242 lzero lzero CA@1180 CA@1181 lzero lzero) (CA@1259)) (lzero,lone)} -> {_u (BinTree (CA@4550 lzero lzero lzero lzero lzero CA@1135 lzero) (Int)) CA@1226}) lone}
              in
                let
                  mirror = (\x1_@UNQ_@114 ->
                              let!
                                u3_944_0_@UNQ_@118_@EVL = x1_@UNQ_@114 :: {_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) lzero}
                              in
                                (case u3_944_0_@UNQ_@118_@EVL :: {_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) lone} of
                                   BinTree l_@UNQ_@119_@FLD_@0 a_@UNQ_@120_@FLD_@1 r_@UNQ_@121_@FLD_@2 -> let
                                                                                                            u5_116 = (mirror :: {_u ({_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) lzero}) lone} l_@UNQ_@119_@FLD_@0) :: {_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) lzero}
                                                                                                          in
                                                                                                            let
                                                                                                              u5_115 = (mirror :: {_u ({_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) lzero}) lone} r_@UNQ_@121_@FLD_@2) :: {_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) lzero}
                                                                                                            in
                                                                                                              let
                                                                                                                u5_112 = (((BinTree :: {_u ({_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) (lzero,lzero)} -> {_u ({_u CA@1331 (lzero,CA@1328)} -> {_u ({_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) (lzero,lzero)} -> {_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) lzero}) lone}) lone}) lone} u5_115) :: {_u ({_u CA@1331 (lzero,CA@1328)} -> {_u ({_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) (lzero,lzero)} -> {_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) lzero}) lone}) lone} a_@UNQ_@120_@FLD_@1) :: {_u ({_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) (lzero,lzero)} -> {_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) lzero}) lone} u5_116) :: {_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) lzero}
                                                                                                              in
                                                                                                                u5_112 :: {_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) lzero}
                                   Leaf __@UNQ_@125 -> x1_@UNQ_@114 :: {_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) lzero}
                                ) :: {_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) lzero}
                           ) :: {_u ({_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1404 CA@1405 lzero lzero lzero CA@1328 lzero lzero) (CA@1331)) lzero}) lone}
                in
                  let
                    u5_120 = (genBalancedBinTree :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@6506 CA@6510 CA@6509 CA@6508 CA@6505 lzero CA@857) (())) lzero}) lone} 20) :: {_u (BinTree (lzero CA@6506 CA@6510 CA@6509 CA@6508 CA@6505 lzero CA@857) (())) lzero}
                  in
                    let
                      u5_119 = (mapTreeUnitToFac :: {_u ({_u (BinTree (CA@7079 CA@7078 lzero lzero CA@7082 CA@7081 lzero lzero) (())) (lzero,lone)} -> {_u (BinTree (CA@6791 lzero CA@6793 CA@6794 CA@6790 CA@6792 lzero lzero) (Int)) lzero}) lone} u5_120) :: {_u (BinTree (CA@6791 lzero CA@6793 CA@6794 CA@6790 CA@6792 lzero lzero) (Int)) lzero}
                    in
                      let
                        testTreeInlinedMap = (mirror :: {_u ({_u (BinTree (CA@7114 CA@7112 lzero lzero CA@7117 CA@7116 lzero lzero) (Int)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@7114 CA@7112 lzero lzero CA@7117 CA@7116 lzero lzero) (Int)) lzero}) lone} u5_119) :: {_u (BinTree (CA@7114 CA@7112 lzero lzero CA@7117 CA@7116 lzero lzero) (Int)) lzero}
                      in
                        let
                          u5_131 = (sumTree :: {_u ({_u (BinTree (top lone lzero lone lzero lone lzero lone) (Int)) (lzero,lone)} -> {_u Int top}) lone} testTreeInlinedMap) :: {_u Int top}
                        in
                          let
                            u5_130 = (flatten :: {_u ({_u (BinTree (lzero lzero lzero lzero lzero lzero lzero lzero) (Int)) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) (Int)) lzero}) {set {1,infty}}} testTreeInlinedMap) :: {_u ([] (lzero lzero lzero lzero) (Int)) lzero}
                          in
                            let
                              u5_129 = (length :: {_u ({_u ([] (lzero CA@7290 lzero lzero) (Int)) (lzero,lone)} -> {_u Int lzero}) top} u5_130) :: {_u Int lzero}
                            in
                              let
                                u5_128 = (countLeafs :: {_u ({_u (BinTree (CA@7147 CA@7151 lzero lone CA@7149 CA@7145 lzero lone) (Int)) (lzero,lone)} -> {_u Int top}) lone} testTreeInlinedMap) :: {_u Int top}
                              in
                                let
                                  u5_125 = (((+ :: {_u ({_u (_'Num (CA@7387 CA@7388 CA@7393 top CA@7390 CA@7443 CA@7442 CA@7441 lone CA@7439 CA@7445 CA@7445 CA@7444 lone top CA@7434 lone CA@7429 CA@7431 CA@7431 CA@7428 lone top CA@7425 CA@7424 CA@7394 lone CA@7427 CA@7421 CA@7421 CA@7420 lone top CA@7395 CA@7397 CA@7418 CA@7416 CA@7416 CA@7414 lone top lone lone lzero lone lone lzero lone top CA@7405 lone CA@7453 lone top top CA@7406 CA@7412 lone CA@7412 CA@7403 CA@7402 CA@7409 CA@7408 top CA@7401 lone CA@7454 lone top CA@7392 CA@7391 CA@7458 CA@7457 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_128) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_129) :: {_u Int top}
                                in
                                  let
                                    testBinTreeInlinedMap = (((+ :: {_u ({_u (_'Num (CA@7818 CA@7819 CA@7824 top CA@7821 CA@7874 CA@7873 CA@7872 lone CA@7870 CA@7876 CA@7876 CA@7875 lone top CA@7865 lone CA@7860 CA@7862 CA@7862 CA@7859 lone top CA@7856 CA@7855 CA@7825 lone CA@7858 CA@7852 CA@7852 CA@7851 lone top CA@7826 CA@7828 CA@7849 CA@7847 CA@7847 CA@7845 lone top lone lone lzero lone lone lzero lone top CA@7836 lone CA@7884 lone top top CA@7837 CA@7843 lone CA@7843 CA@7834 CA@7833 CA@7840 CA@7839 top CA@7832 lone CA@7885 lone top CA@7823 CA@7822 CA@7889 CA@7888 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_125) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_131) :: {_u Int top}
                                  in
                                    let
                                      main = ((print :: {_u ({_u (_'Show (CA@8114 CA@8117 lone lone lzero lone top CA@8120 CA@8118 CA@8112 CA@8113 CA@8083 lone CA@8077 CA@8080 CA@8116 CA@8078 CA@8079 CA@8081 CA@8106 CA@8105 CA@8102 CA@8101 CA@8098 CA@8097 CA@8104 CA@8103 CA@8100 CA@8099 CA@8111 CA@8076 CA@8082 CA@8109 lone CA@8108 CA@8110 CA@8093 CA@8086 CA@8091 CA@8087 CA@8092 CA@8089 CA@8094 CA@8088 CA@8095 CA@8090) (Int)) (lone,lone)} -> {_u ({_u Int (lone,lone)} -> {_u (CA@8237 CA@8074) lone}) lone}) top} Show_@DCT_@u95_17_0) :: {_u ({_u Int (lone,lone)} -> {_u (CA@8237 CA@8074) lone}) lone} testBinTreeInlinedMap) :: {_u (CA@8237 CA@8074) lone}
                                    in
                                      let
                                        u5_138 = () :: {_u () lzero}
                                      in
                                        let
                                          main = ((ehcRunMain :: {_u ({_u (CA@8237 CA@8236) (lone,lone)} -> {_u ({_u () (lzero,lzero)} -> {_u (CA@8237 CA@8236) lone}) lone}) top} main) :: {_u ({_u () (lzero,lzero)} -> {_u (CA@8237 CA@8236) lone}) lone} u5_138) :: {_u (CA@8237 CA@8236) lone}
                                        in
                                          main :: {_u (CA@8237 CA@8381) lone}
let
  flatten = \x1_@UNQ_@69 ->
              let! u3_345_0_@UNQ_@71_@EVL = x1_@UNQ_@69
              in case u3_345_0_@UNQ_@71_@EVL of
                   BinTree l_@UNQ_@72_@FLD_@0 a_@UNQ_@73_@FLD_@1 r_@UNQ_@74_@FLD_@2 -> let
                                                                                         u5_10 = flatten r_@UNQ_@74_@FLD_@2
                                                                                       in let
                                                                                            u5_8 = : a_@UNQ_@73_@FLD_@1 u5_10
                                                                                          in let
                                                                                               u5_7 = flatten l_@UNQ_@72_@FLD_@0
                                                                                             in let
                                                                                                  u5_5 = ++ u5_7 u5_8
                                                                                                in u5_5
                   Leaf a_@UNQ_@78_@FLD_@0 -> let
                                                u5_11 = : a_@UNQ_@78_@FLD_@0 []
                                              in u5_11
in let
     fact = \n_@UNQ_@53 ->
              let
                u3_37_0_@UNQ_@54 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@53 1
              in let! u3_37_0_@UNQ_@55_@EVL = u3_37_0_@UNQ_@54
                 in case u3_37_0_@UNQ_@55_@EVL of
                      False  -> let
                                  u5_26 = - Num_@DCT_@u88_18_0 n_@UNQ_@53 1
                                in let
                                     u5_25 = fact u5_26
                                   in let
                                        u5_22 = * Num_@DCT_@u88_18_0 n_@UNQ_@53 u5_25
                                      in u5_22
                      True  -> 1
   in let
        BinTree = \x1_@UNQ_@57 ->
                    \x2_@UNQ_@58 ->
                      \x3_@UNQ_@59 ->
                        BinTree MainOpts.x1_@UNQ_@57 MainOpts.x2_@UNQ_@58 MainOpts.x3_@UNQ_@59
      in let
           countLeafs = \x1_@UNQ_@60 ->
                          let! u3_209_0_@UNQ_@62_@EVL = x1_@UNQ_@60
                          in case u3_209_0_@UNQ_@62_@EVL of
                               BinTree l_@UNQ_@63_@FLD_@0 u3_242_0_@UNQ_@64_@FLD_@1 r_@UNQ_@65_@FLD_@2 -> let
                                                                                                            u5_52 = countLeafs r_@UNQ_@65_@FLD_@2
                                                                                                          in let
                                                                                                               u5_51 = countLeafs l_@UNQ_@63_@FLD_@0
                                                                                                             in let
                                                                                                                  u5_48 = + Num_@DCT_@u88_18_0 u5_51 1
                                                                                                                in let
                                                                                                                     u5_45 = + Num_@DCT_@u88_18_0 u5_48 u5_52
                                                                                                                   in u5_45
                               Leaf u3_218_0_@UNQ_@68_@FLD_@0 -> 1
         in let
              sumTree = \x1_@UNQ_@103 ->
                          let! u3_824_0_@UNQ_@105_@EVL = x1_@UNQ_@103
                          in case u3_824_0_@UNQ_@105_@EVL of
                               BinTree l_@UNQ_@106_@FLD_@0 x_@UNQ_@107_@FLD_@1 r_@UNQ_@108_@FLD_@2 -> let
                                                                                                        u5_65 = sumTree r_@UNQ_@108_@FLD_@2
                                                                                                      in let
                                                                                                           u5_64 = sumTree l_@UNQ_@106_@FLD_@0
                                                                                                         in let
                                                                                                              u5_61 = + Num_@DCT_@u88_18_0 u5_64 x_@UNQ_@107_@FLD_@1
                                                                                                            in let
                                                                                                                 u5_58 = + Num_@DCT_@u88_18_0 u5_61 u5_65
                                                                                                               in u5_58
                               Leaf x_@UNQ_@112_@FLD_@0 -> x_@UNQ_@112_@FLD_@0
            in let
                 Leaf = \x1_@UNQ_@56 ->
                          Leaf MainOpts.x1_@UNQ_@56
               in let
                    n_@NEW_@28_@UNQ_@82_@CCN = \x1_@NEW_@29_@UNQ_@80 ->
                                                 let
                                                   u5_77 = - Num_@DCT_@u88_18_0 x1_@NEW_@29_@UNQ_@80 1
                                                 in let
                                                      sub_@UNQ_@88 = genBalancedBinTree u5_77
                                                    in let
                                                         u5_83 = ()
                                                       in BinTree sub_@UNQ_@88 u5_83 sub_@UNQ_@88
                    genBalancedBinTree = \x1_@UNQ_@80 ->
                                           let
                                             n_@UNQ_@82_@CCN = n_@NEW_@28_@UNQ_@82_@CCN x1_@UNQ_@80
                                           in let
                                                u3_479_0_@UNQ_@90 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@80 1
                                              in let! u3_479_0_@UNQ_@91_@EVL = u3_479_0_@UNQ_@90
                                                 in case u3_479_0_@UNQ_@91_@EVL of
                                                      False  -> n_@UNQ_@82_@CCN
                                                      True  -> let
                                                                 u5_91 = ()
                                                               in let
                                                                    u5_90 = Leaf u5_91
                                                                  in u5_90
                  in let
                       mapTreeUnitToFac = \x1_@UNQ_@92 ->
                                            let! u3_646_0_@UNQ_@94_@EVL = x1_@UNQ_@92
                                            in case u3_646_0_@UNQ_@94_@EVL of
                                                 BinTree l_@UNQ_@95_@FLD_@0 u3_695_0_@UNQ_@96_@FLD_@1 r_@UNQ_@97_@FLD_@2 -> let
                                                                                                                              r'_@UNQ_@101 = mapTreeUnitToFac r_@UNQ_@97_@FLD_@2
                                                                                                                            in let
                                                                                                                                 l'_@UNQ_@100 = mapTreeUnitToFac l_@UNQ_@95_@FLD_@0
                                                                                                                               in let
                                                                                                                                    u5_104 = fact 12
                                                                                                                                  in BinTree l'_@UNQ_@100 u5_104 r'_@UNQ_@101
                                                 Leaf u3_655_0_@UNQ_@102_@FLD_@0 -> let
                                                                                      u5_106 = fact 12
                                                                                    in let
                                                                                         u5_105 = Leaf u5_106
                                                                                       in u5_105
                     in let
                          mirror = \x1_@UNQ_@114 ->
                                     let! u3_944_0_@UNQ_@118_@EVL = x1_@UNQ_@114
                                     in case u3_944_0_@UNQ_@118_@EVL of
                                          BinTree l_@UNQ_@119_@FLD_@0 a_@UNQ_@120_@FLD_@1 r_@UNQ_@121_@FLD_@2 -> let
                                                                                                                   u5_116 = mirror l_@UNQ_@119_@FLD_@0
                                                                                                                 in let
                                                                                                                      u5_115 = mirror r_@UNQ_@121_@FLD_@2
                                                                                                                    in let
                                                                                                                         u5_112 = BinTree u5_115 a_@UNQ_@120_@FLD_@1 u5_116
                                                                                                                       in u5_112
                                          Leaf __@UNQ_@125 -> x1_@UNQ_@114
                        in let
                             u5_120 = genBalancedBinTree 20
                           in let
                                u5_119 = mapTreeUnitToFac u5_120
                              in let
                                   testTreeInlinedMap = mirror u5_119
                                 in let
                                      u5_131 = sumTree testTreeInlinedMap
                                    in let
                                         u5_130 = flatten testTreeInlinedMap
                                       in let
                                            u5_129 = length u5_130
                                          in let
                                               u5_128 = countLeafs testTreeInlinedMap
                                             in let
                                                  u5_125 = + Num_@DCT_@u88_18_0 u5_128 u5_129
                                                in let
                                                     testBinTreeInlinedMap = + Num_@DCT_@u88_18_0 u5_125 u5_131
                                                   in let
                                                        main = print Show_@DCT_@u95_17_0 testBinTreeInlinedMap
                                                      in let
                                                           u5_138 = ()
                                                         in let
                                                              main = ehcRunMain main u5_138
                                                            in main
("opt-let",main)
("opt-let",MainOpts.main)
("opt-let",MainOpts.testBinTreeInlinedMap)
("opt-let",MainOpts.u5_125)
("opt-let",MainOpts.u5_128)
("opt-let",MainOpts.u5_129)
("opt-let",MainOpts.u5_130)
("opt-let",MainOpts.u5_131)
("opt-let",MainOpts.testTreeInlinedMap)
("opt-let",MainOpts.u5_119)
("opt-let",MainOpts.u5_120)
("opt-let",MainOpts.u5_112)
("opt-let",MainOpts.u5_105)
("opt-let",MainOpts.u5_90)
("opt-let",MainOpts.u3_479_0_@UNQ_@90)
("opt-let",MainOpts.u5_77)
("opt-AltCon",[7_14])
("opt-let",MainOpts.u5_58)
("opt-let",MainOpts.u5_61)
("opt-let",MainOpts.u5_64)
("opt-let",MainOpts.u5_65)
("opt-AltCon",[7_10,7_11,7_12])
("opt-let",MainOpts.u5_45)
("opt-let",MainOpts.u5_48)
("opt-let",MainOpts.u5_51)
("opt-let",MainOpts.u5_52)
("opt-AltCon",[7_6,7_7])
("opt-let",MainOpts.u5_22)
("opt-let",MainOpts.u5_25)
("opt-let",MainOpts.u5_26)
("opt-let",MainOpts.u3_37_0_@UNQ_@54)
("opt-let",MainOpts.u5_11)
("opt-let",MainOpts.u5_5)
("Transformation applied: ",36)
let
  flatten = \x1_@UNQ_@69 ->
              let! u3_345_0_@UNQ_@71_@EVL = x1_@UNQ_@69
              in case u3_345_0_@UNQ_@71_@EVL of
                   BinTree l_@UNQ_@72_@FLD_@0 a_@UNQ_@73_@FLD_@1 r_@UNQ_@74_@FLD_@2 -> let
                                                                                         u5_10 = flatten r_@UNQ_@74_@FLD_@2
                                                                                       in let
                                                                                            u5_8 = : a_@UNQ_@73_@FLD_@1 u5_10
                                                                                          in let
                                                                                               u5_7 = flatten l_@UNQ_@72_@FLD_@0
                                                                                             in let! u5_5 = ++ u5_7 u5_8
                                                                                                in u5_5
                   Leaf a_@UNQ_@78_@FLD_@0 -> let! u5_11 = : a_@UNQ_@78_@FLD_@0 []
                                              in u5_11
in let
     fact = \n_@UNQ_@53 ->
              let! u3_37_0_@UNQ_@54 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@53 1
              in let! u3_37_0_@UNQ_@55_@EVL = u3_37_0_@UNQ_@54
                 in case u3_37_0_@UNQ_@55_@EVL of
                      False  -> let! u5_26 = - Num_@DCT_@u88_18_0 n_@UNQ_@53 1
                                in let! u5_25 = fact u5_26
                                   in let! u5_22 = * Num_@DCT_@u88_18_0 n_@UNQ_@53 u5_25
                                      in u5_22
                      True  -> 1
   in let
        BinTree = \x1_@UNQ_@57 ->
                    \x2_@UNQ_@58 ->
                      \x3_@UNQ_@59 ->
                        BinTree MainOpts.x1_@UNQ_@57 MainOpts.x2_@UNQ_@58 MainOpts.x3_@UNQ_@59
      in let
           countLeafs = \x1_@UNQ_@60 ->
                          let! u3_209_0_@UNQ_@62_@EVL = x1_@UNQ_@60
                          in case u3_209_0_@UNQ_@62_@EVL of
                               BinTree l_@UNQ_@63_@FLD_@0 u3_242_0_@UNQ_@64_@FLD_@1 r_@UNQ_@65_@FLD_@2 -> let! u7_6 = l_@UNQ_@63_@FLD_@0
                                                                                                          in let! u7_7 = r_@UNQ_@65_@FLD_@2
                                                                                                             in let! u5_52 = countLeafs r_@UNQ_@65_@FLD_@2
                                                                                                                in let! u5_51 = countLeafs l_@UNQ_@63_@FLD_@0
                                                                                                                   in let! u5_48 = + Num_@DCT_@u88_18_0 u5_51 1
                                                                                                                      in let! u5_45 = + Num_@DCT_@u88_18_0 u5_48 u5_52
                                                                                                                         in u5_45
                               Leaf u3_218_0_@UNQ_@68_@FLD_@0 -> 1
         in let
              sumTree = \x1_@UNQ_@103 ->
                          let! u3_824_0_@UNQ_@105_@EVL = x1_@UNQ_@103
                          in case u3_824_0_@UNQ_@105_@EVL of
                               BinTree l_@UNQ_@106_@FLD_@0 x_@UNQ_@107_@FLD_@1 r_@UNQ_@108_@FLD_@2 -> let! u7_10 = l_@UNQ_@106_@FLD_@0
                                                                                                      in let! u7_11 = x_@UNQ_@107_@FLD_@1
                                                                                                         in let! u7_12 = r_@UNQ_@108_@FLD_@2
                                                                                                            in let! u5_65 = sumTree r_@UNQ_@108_@FLD_@2
                                                                                                               in let! u5_64 = sumTree l_@UNQ_@106_@FLD_@0
                                                                                                                  in let! u5_61 = + Num_@DCT_@u88_18_0 u5_64 x_@UNQ_@107_@FLD_@1
                                                                                                                     in let! u5_58 = + Num_@DCT_@u88_18_0 u5_61 u5_65
                                                                                                                        in u5_58
                               Leaf x_@UNQ_@112_@FLD_@0 -> let! u7_14 = x_@UNQ_@112_@FLD_@0
                                                           in x_@UNQ_@112_@FLD_@0
            in let
                 Leaf = \x1_@UNQ_@56 ->
                          Leaf MainOpts.x1_@UNQ_@56
               in let
                    n_@NEW_@28_@UNQ_@82_@CCN = \x1_@NEW_@29_@UNQ_@80 ->
                                                 let! u5_77 = - Num_@DCT_@u88_18_0 x1_@NEW_@29_@UNQ_@80 1
                                                 in let
                                                      sub_@UNQ_@88 = genBalancedBinTree u5_77
                                                    in let
                                                         u5_83 = ()
                                                       in BinTree sub_@UNQ_@88 u5_83 sub_@UNQ_@88
                    genBalancedBinTree = \x1_@UNQ_@80 ->
                                           let
                                             n_@UNQ_@82_@CCN = n_@NEW_@28_@UNQ_@82_@CCN x1_@UNQ_@80
                                           in let! u3_479_0_@UNQ_@90 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@80 1
                                              in let! u3_479_0_@UNQ_@91_@EVL = u3_479_0_@UNQ_@90
                                                 in case u3_479_0_@UNQ_@91_@EVL of
                                                      False  -> n_@UNQ_@82_@CCN
                                                      True  -> let
                                                                 u5_91 = ()
                                                               in let! u5_90 = Leaf u5_91
                                                                  in u5_90
                  in let
                       mapTreeUnitToFac = \x1_@UNQ_@92 ->
                                            let! u3_646_0_@UNQ_@94_@EVL = x1_@UNQ_@92
                                            in case u3_646_0_@UNQ_@94_@EVL of
                                                 BinTree l_@UNQ_@95_@FLD_@0 u3_695_0_@UNQ_@96_@FLD_@1 r_@UNQ_@97_@FLD_@2 -> let
                                                                                                                              r'_@UNQ_@101 = mapTreeUnitToFac r_@UNQ_@97_@FLD_@2
                                                                                                                            in let
                                                                                                                                 l'_@UNQ_@100 = mapTreeUnitToFac l_@UNQ_@95_@FLD_@0
                                                                                                                               in let
                                                                                                                                    u5_104 = fact 12
                                                                                                                                  in BinTree l'_@UNQ_@100 u5_104 r'_@UNQ_@101
                                                 Leaf u3_655_0_@UNQ_@102_@FLD_@0 -> let
                                                                                      u5_106 = fact 12
                                                                                    in let! u5_105 = Leaf u5_106
                                                                                       in u5_105
                     in let
                          mirror = \x1_@UNQ_@114 ->
                                     let! u3_944_0_@UNQ_@118_@EVL = x1_@UNQ_@114
                                     in case u3_944_0_@UNQ_@118_@EVL of
                                          BinTree l_@UNQ_@119_@FLD_@0 a_@UNQ_@120_@FLD_@1 r_@UNQ_@121_@FLD_@2 -> let
                                                                                                                   u5_116 = mirror l_@UNQ_@119_@FLD_@0
                                                                                                                 in let
                                                                                                                      u5_115 = mirror r_@UNQ_@121_@FLD_@2
                                                                                                                    in let! u5_112 = BinTree u5_115 a_@UNQ_@120_@FLD_@1 u5_116
                                                                                                                       in u5_112
                                          Leaf __@UNQ_@125 -> x1_@UNQ_@114
                        in let! u5_120 = genBalancedBinTree 20
                           in let! u5_119 = mapTreeUnitToFac u5_120
                              in let! testTreeInlinedMap = mirror u5_119
                                 in let! u5_131 = sumTree testTreeInlinedMap
                                    in let! u5_130 = flatten testTreeInlinedMap
                                       in let! u5_129 = length u5_130
                                          in let! u5_128 = countLeafs testTreeInlinedMap
                                             in let! u5_125 = + Num_@DCT_@u88_18_0 u5_128 u5_129
                                                in let! testBinTreeInlinedMap = + Num_@DCT_@u88_18_0 u5_125 u5_131
                                                   in let! main = print Show_@DCT_@u95_17_0 testBinTreeInlinedMap
                                                      in let
                                                           u5_138 = ()
                                                         in let! main = ehcRunMain main u5_138
                                                            in main

BinTreeInlinedMapNoValues:
("TyGam: ",BinTree ->
  Type Error: MainOpts.BinTree dataTgi)
("DataGam: ",BinTree 5 6 7 8
  MainOpts.Leaf 
  MainOpts.BinTree {_u (BinTree (5 6 7 8)) (5,6)} {_u (BinTree (5 6 7 8)) (7,8)})
("num constraints: ",894)
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@1080}, a2_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]}, a_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}})
"error warning: top Found testforTop"
("still to do cs",0,54)
("Tys",n_@UNQ_@41 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
u5_56 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
u5_83 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
main ->
  {_u (forall {CA@5297,CA@5460} . cs: 0 => (CA@5460 CA@5297)) (lone,lone)}
mirror ->
  {_u (forall {} . cs: 0 => ({_u (BinTree (lzero lzero lzero lzero)) (lzero,{set {1,infty}})} -> {_u (BinTree (lzero lzero lzero lzero)) lzero})) (lone,lone)}
u5_85 ->
  {_u (forall {CA@3828,CA@3829,CA@3822,CA@3830} . cs: 0 => ([] (lzero lzero lzero lzero) ((BinTree (CA@3822 CA@3828 CA@3829 CA@3830))))) (lzero,lone)}
Leaf ->
  {_u (forall {CA@366,CA@367,CA@368,CA@369} . cs: 0 => (BinTree (CA@366 CA@367 CA@368 CA@369))) (top,top)}
u5_84 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
u5_47 ->
  {_u (forall {} . cs: 1 => ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802))))
           CA@513 (+) lzero == CA@513
      ) (CA@513,{set {0,1}})}
BinTree ->
  {_u (forall {CA@356,CA@359,CA@350,CA@351,CA@357,CA@346,CA@347,CA@360} . cs: 2 => ({_u (BinTree (CA@346 CA@347 CA@350 CA@351)) (CA@359,CA@360)} -> {_u ({_u (BinTree (CA@346 CA@347 CA@350 CA@351)) (CA@350,CA@351)} -> {_u (BinTree (CA@346 CA@347 CA@350 CA@351)) CA@356}) CA@357})
           CA@357 . CA@346 == CA@359
           CA@357 . CA@347 == CA@360
      ) (top,top)}
u5_75 ->
  {_u (forall {} . cs: 0 => (BinTree (lzero lzero lzero lzero))) (lzero,lzero)}
u5_72 ->
  {_u (forall {} . cs: 0 => (BinTree (lzero lzero lzero lzero))) (lzero,lone)}
u5_74 ->
  {_u (forall {} . cs: 0 => (BinTree (lzero lzero lzero lzero))) (lzero,lzero)}
countLeafs ->
  {_u (forall {CA@209,CA@317,CA@303} . cs: 3 => ({_u (BinTree (CA@303 lone CA@317 lone)) (CA@209,lone)} -> {_u Int top})
           lone > CA@303 == CA@303
           CA@209 U CA@317 == CA@317
           CA@209 U CA@303 == CA@303
      ) (lone,lzero)}
sub_@UNQ_@68 ->
  {_u (forall {} . cs: 3 => (BinTree (lzero lzero lzero CA@4500))
           CA@4500 > lzero == lzero
           CA@4500 (+) lzero == CA@4500
           CA@4500 > lzero == lzero
      ) (lzero,CA@4500)}
fact ->
  {_u (forall {} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u Int top})) (lzero,lzero)}
u3_406_0_@UNQ_@70 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
n_@UNQ_@62_@CCN ->
  {_u (forall {} . cs: 0 => (BinTree (lzero lzero lzero CA@4500))) (lzero,{set {0,1}})}
n_@NEW_@21_@UNQ_@62_@CCN ->
  {_u (forall {} . cs: 0 => ({_u Int (lzero,lone)} -> {_u (BinTree (lzero lzero lzero CA@4500)) lzero})) (lzero,lzero)}
r_@UNQ_@57_@FLD_@1 ->
  {_u (forall {} . cs: 0 => (BinTree (lzero {set {0,1}} lzero {set {0,1}}))) (lzero,{set {0,1}})}
u3_37_0_@UNQ_@43_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
testTreeInlinedMap ->
  {_u (forall {} . cs: 0 => (BinTree (lzero lzero lzero lzero))) (lzero,lomega)}
u5_21 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
flatten ->
  {_u (forall {CA@3799,CA@3800,CA@3801,CA@3802,CA@513} . cs: 14 => ({_u (BinTree (lzero {set {0,1}} lzero {set {0,1}})) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802)))) CA@513})
           lone > CA@513 == CA@513
           lone > CA@513 == CA@513
           CA@513 (+) lzero == CA@513
           CA@513 (+) lzero == CA@513
           lzero U CA@513 == CA@513
           CA@513 U top == top
           lzero U CA@513 == CA@513
           lzero U CA@513 == CA@513
           CA@513 U CA@513 == CA@513
           CA@513 (+) lzero == CA@513
           lzero U CA@513 == CA@513
           CA@513 U top == top
           lzero U CA@513 == CA@513
           CA@513 (+) lzero == CA@513
      ) ({set {1,infty}},lone)}
u3_301_0_@UNQ_@55_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (lzero {set {0,1}} lzero {set {0,1}}))) (lone,lomega)}
u5_27 ->
  {_u (forall {} . cs: 1 => Int
           CA@209 U CA@303 == CA@303
      ) (top,lone)}
u5_24 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u3_406_0_@UNQ_@71_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
genBalancedBinTree ->
  {_u (forall {} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero lzero lzero CA@4500)) lzero})) (lone,lone)}
u5_28 ->
  {_u (forall {} . cs: 1 => Int
           CA@209 U CA@317 == CA@317
      ) (top,lone)}
u3_541_0_@UNQ_@76_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (lzero lzero lzero lzero))) (lone,lomega)}
u5_9 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
x1_@UNQ_@72 ->
  {_u (forall {} . cs: 0 => (BinTree (lzero lzero lzero lzero))) (lzero,{set {1,infty}})}
x1_@UNQ_@44 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@346 CA@347 CA@350 CA@351))) (CA@359,CA@360)}
x1_@UNQ_@46 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@303 lone CA@317 lone))) (CA@209,lone)}
x2_@UNQ_@45 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@346 CA@347 CA@350 CA@351))) (CA@350,CA@351)}
x1_@UNQ_@60 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
x1_@UNQ_@53 ->
  {_u (forall {} . cs: 0 => (BinTree (lzero {set {0,1}} lzero {set {0,1}}))) (lzero,lone)}
u5_13 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
u5_12 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_48 ->
  {_u (forall {CA@3603,CA@3604,CA@3605,CA@3606,CA@489,CA@494} . cs: 1 => ([] (lzero lzero CA@494 CA@489) ((BinTree (CA@3603 CA@3604 CA@3605 CA@3606))))
           CA@513 (+) lzero == CA@513
      ) (CA@513,lone)}
main ->
  {_u (forall {CA@5459} . cs: 0 => (CA@5460 CA@5459)) (lone,lone)}
l_@UNQ_@56_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (lzero {set {0,1}} lzero {set {0,1}}))) (lzero,{set {0,1}})}
l_@UNQ_@77_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (lzero lzero lzero lzero))) (lzero,lzero)}
u3_182_0_@UNQ_@48_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@303 lone CA@317 lone))) (lone,lomega)}
r_@UNQ_@78_@FLD_@1 ->
  {_u (forall {} . cs: 0 => (BinTree (lzero lzero lzero lzero))) (lzero,lzero)}
l_@UNQ_@49_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@303 lone CA@317 lone))) (CA@303,lone)}
x1_@NEW_@22_@UNQ_@60 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
r_@UNQ_@50_@FLD_@1 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@303 lone CA@317 lone))) (CA@317,lone)}
testBinTreeInlinedMap ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_92 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
u5_44 ->
  {_u (forall {} . cs: 6 => ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802))))
           lzero U CA@513 == CA@513
           CA@513 U CA@513 == CA@513
           CA@513 (+) lzero == CA@513
           lzero U CA@513 == CA@513
           CA@513 U top == top
           lzero U CA@513 == CA@513
      ) (CA@513,lone)}
u5_46 ->
  {_u (forall {} . cs: 1 => ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802))))
           CA@513 (+) lzero == CA@513
      ) (CA@513,{set {0,1}})}
u5_78 ->
  {_u (forall {CA@4498,CA@4497,CA@4500} . cs: 0 => (BinTree (CA@4497 CA@4498 lzero CA@4500))) (lzero,{set {1,infty}})}
u3_37_0_@UNQ_@42 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)})
"start optimizing"
let
  fact = (\n_@UNQ_@41 ->
            let
              u3_37_0_@UNQ_@42 = (((<= :: {_u ({_u (_'Ord (CA@2170 CA@2167 CA@2166 CA@2232 lone CA@2177 CA@2176 CA@2179 lone CA@2181 CA@2175 CA@2175 CA@2174 lone top CA@2189 lone CA@2184 CA@2186 CA@2186 CA@2183 lone top CA@2207 CA@2206 CA@2236 CA@2233 CA@2211 CA@2209 CA@2209 CA@2208 lone top lone lone lzero lone lone lzero lone top CA@2169 CA@2168 CA@2215 CA@2214 CA@2217 CA@2216 CA@2213 top CA@2172 CA@2173 CA@2219 CA@2218 CA@2222 CA@2220 CA@2223 top CA@2231 lone CA@2226 CA@2227 CA@2227 CA@2225 lone top CA@2229 CA@2230 CA@2165 CA@2163 CA@2163 CA@2162 lone top CA@2235 CA@2237 CA@2194 CA@2198 CA@2198 CA@2196 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} n_@UNQ_@41) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
            in
              let!
                u3_37_0_@UNQ_@43_@EVL = u3_37_0_@UNQ_@42 :: {_u Bool top}
              in
                (case u3_37_0_@UNQ_@43_@EVL :: {_u Bool lone} of
                   False -> let
                              u5_13 = (((- :: {_u ({_u (_'Num (CA@2450 CA@2449 CA@2451 top CA@2453 CA@2460 CA@2461 CA@2464 lone CA@2458 CA@2462 CA@2462 CA@2463 lone top CA@2497 lone CA@2495 CA@2500 CA@2500 CA@2496 lone top CA@2493 CA@2492 lone lone lzero lone lone lzero lone top CA@2433 CA@2434 CA@2482 CA@2478 CA@2478 CA@2480 lone top CA@2435 lone CA@2485 CA@2442 CA@2442 CA@2443 lone top CA@2438 lone CA@2447 lone top top CA@2439 CA@2477 lone CA@2477 CA@2431 CA@2432 CA@2473 CA@2475 top CA@2437 lone CA@2467 lone top CA@2455 CA@2452 CA@2470 CA@2471 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@41) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                            in
                              let
                                u5_12 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} u5_13) :: {_u Int top}
                              in
                                let
                                  u5_9 = (((* :: {_u ({_u (_'Num (CA@2742 CA@2743 CA@2762 top CA@2748 CA@2763 CA@2764 CA@2765 lone CA@2767 CA@2761 CA@2761 CA@2758 lone top CA@2759 lone CA@2751 CA@2756 CA@2756 CA@2752 lone top CA@2720 CA@2722 CA@2697 lone CA@2721 CA@2726 CA@2726 CA@2723 lone top lone lone lzero lone lone lzero lone top CA@2695 lone CA@2702 CA@2704 CA@2704 CA@2699 lone top CA@2744 lone CA@2705 lone top top CA@2740 CA@2733 lone CA@2733 CA@2739 CA@2737 CA@2729 CA@2716 top CA@2738 lone CA@2714 lone top CA@2745 CA@2746 CA@2713 CA@2728 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@41) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_12) :: {_u Int top}
                                in
                                  u5_9 :: {_u Int top}
                   True -> 1 :: {_u Int top}
                ) :: {_u Int top}
         ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lzero}
in
  let
    countLeafs = (\x1_@UNQ_@46 ->
                    let!
                      u3_182_0_@UNQ_@48_@EVL = x1_@UNQ_@46 :: {_u (BinTree (CA@303 lone CA@317 lone)) CA@209}
                    in
                      (case u3_182_0_@UNQ_@48_@EVL :: {_u (BinTree (CA@303 lone CA@317 lone)) lone} of
                         BinTree l_@UNQ_@49_@FLD_@0 r_@UNQ_@50_@FLD_@1 -> let
                                                                            u5_28 = (countLeafs :: {_u ({_u (BinTree (CA@303 lone CA@317 lone)) (CA@209,lone)} -> {_u Int top}) lone} r_@UNQ_@50_@FLD_@1) :: {_u Int top}
                                                                          in
                                                                            let
                                                                              u5_27 = (countLeafs :: {_u ({_u (BinTree (CA@303 lone CA@317 lone)) (CA@209,lone)} -> {_u Int top}) lone} l_@UNQ_@49_@FLD_@0) :: {_u Int top}
                                                                            in
                                                                              let
                                                                                u5_24 = (((+ :: {_u ({_u (_'Num (CA@3006 CA@3007 CA@3012 top CA@3009 CA@3062 CA@3061 CA@3060 lone CA@3058 CA@3064 CA@3064 CA@3063 lone top CA@3053 lone CA@3048 CA@3050 CA@3050 CA@3047 lone top CA@3044 CA@3043 CA@3013 lone CA@3046 CA@3040 CA@3040 CA@3039 lone top CA@3014 CA@3016 CA@3037 CA@3035 CA@3035 CA@3033 lone top lone lone lzero lone lone lzero lone top CA@3024 lone CA@3072 lone top top CA@3025 CA@3031 lone CA@3031 CA@3022 CA@3021 CA@3028 CA@3027 top CA@3020 lone CA@3073 lone top CA@3011 CA@3010 CA@3077 CA@3076 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_27) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                                                              in
                                                                                let
                                                                                  u5_21 = (((+ :: {_u ({_u (_'Num (CA@3257 CA@3258 CA@3263 top CA@3260 CA@3313 CA@3312 CA@3311 lone CA@3309 CA@3315 CA@3315 CA@3314 lone top CA@3304 lone CA@3299 CA@3301 CA@3301 CA@3298 lone top CA@3295 CA@3294 CA@3264 lone CA@3297 CA@3291 CA@3291 CA@3290 lone top CA@3265 CA@3267 CA@3288 CA@3286 CA@3286 CA@3284 lone top lone lone lzero lone lone lzero lone top CA@3275 lone CA@3323 lone top top CA@3276 CA@3282 lone CA@3282 CA@3273 CA@3272 CA@3279 CA@3278 top CA@3271 lone CA@3324 lone top CA@3262 CA@3261 CA@3328 CA@3327 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_24) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_28) :: {_u Int top}
                                                                                in
                                                                                  u5_21 :: {_u Int top}
                         Leaf -> 1 :: {_u Int top}
                      ) :: {_u Int top}
                 ) :: {_u ({_u (BinTree (CA@303 lone CA@317 lone)) (CA@209,lone)} -> {_u Int top}) lone}
  in
    let
      BinTree = (\x1_@UNQ_@44 ->
                   (\x2_@UNQ_@45 ->
                      (MainOpts.BinTree x1_@UNQ_@44 x2_@UNQ_@45) :: {_u (BinTree (CA@346 CA@347 CA@350 CA@351)) CA@356}
                   ) :: {_u ({_u (BinTree (CA@346 CA@347 CA@350 CA@351)) (CA@350,CA@351)} -> {_u (BinTree (CA@346 CA@347 CA@350 CA@351)) CA@356}) CA@357}
                ) :: {_u ({_u (BinTree (CA@346 CA@347 CA@350 CA@351)) (CA@359,CA@360)} -> {_u ({_u (BinTree (CA@346 CA@347 CA@350 CA@351)) (CA@350,CA@351)} -> {_u (BinTree (CA@346 CA@347 CA@350 CA@351)) CA@356}) CA@357}) top}
    in
      let
        Leaf = MainOpts.Leaf :: {_u (BinTree (CA@366 CA@367 CA@368 CA@369)) top}
      in
        let
          flatten = (\x1_@UNQ_@53 ->
                       let!
                         u3_301_0_@UNQ_@55_@EVL = x1_@UNQ_@53 :: {_u (BinTree (lzero {set {0,1}} lzero {set {0,1}})) lzero}
                       in
                         (case u3_301_0_@UNQ_@55_@EVL :: {_u (BinTree (lzero {set {0,1}} lzero {set {0,1}})) lone} of
                            BinTree l_@UNQ_@56_@FLD_@0 r_@UNQ_@57_@FLD_@1 -> let
                                                                               u5_47 = (flatten :: {_u ({_u (BinTree (lzero {set {0,1}} lzero {set {0,1}})) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802)))) CA@513}) lone} r_@UNQ_@57_@FLD_@1) :: {_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802)))) CA@513}
                                                                             in
                                                                               let
                                                                                 u5_46 = (flatten :: {_u ({_u (BinTree (lzero {set {0,1}} lzero {set {0,1}})) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802)))) CA@513}) lone} l_@UNQ_@56_@FLD_@0) :: {_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802)))) CA@513}
                                                                               in
                                                                                 let
                                                                                   u5_44 = ((++ :: {_u ({_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802)))) (lzero,{set {0,1}})} -> {_u ({_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802)))) (CA@513,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802)))) CA@513}) {set {0,1}}}) top} u5_46) :: {_u ({_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802)))) (CA@513,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802)))) CA@513}) {set {0,1}}} u5_47) :: {_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802)))) CA@513}
                                                                                 in
                                                                                   u5_44 :: {_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802)))) CA@513}
                            Leaf -> let
                                      u5_48 = ((: :: {_u ({_u (BinTree (CA@3603 CA@3604 CA@3605 CA@3606)) (lzero,lzero)} -> {_u ({_u ([] (lzero lzero CA@494 CA@489) ((BinTree (CA@3603 CA@3604 CA@3605 CA@3606)))) (CA@494,CA@489)} -> {_u ([] (lzero lzero CA@494 CA@489) ((BinTree (CA@3603 CA@3604 CA@3605 CA@3606)))) CA@513}) lone}) top} Leaf) :: {_u ({_u ([] (lzero lzero CA@494 CA@489) ((BinTree (CA@3603 CA@3604 CA@3605 CA@3606)))) (CA@494,CA@489)} -> {_u ([] (lzero lzero CA@494 CA@489) ((BinTree (CA@3603 CA@3604 CA@3605 CA@3606)))) CA@513}) lone} []) :: {_u ([] (lzero lzero CA@494 CA@489) ((BinTree (CA@3603 CA@3604 CA@3605 CA@3606)))) CA@513}
                                    in
                                      u5_48 :: {_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802)))) CA@513}
                         ) :: {_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802)))) CA@513}
                    ) :: {_u ({_u (BinTree (lzero {set {0,1}} lzero {set {0,1}})) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3799 CA@3800 CA@3801 CA@3802)))) CA@513}) {set {1,infty}}}
        in
          let
            n_@NEW_@21_@UNQ_@62_@CCN = (\x1_@NEW_@22_@UNQ_@60 ->
                                          let
                                            u5_56 = (((- :: {_u ({_u (_'Num (CA@3940 CA@3939 CA@3941 top CA@3943 CA@3950 CA@3951 CA@3954 lone CA@3948 CA@3952 CA@3952 CA@3953 lone top CA@3987 lone CA@3985 CA@3990 CA@3990 CA@3986 lone top CA@3983 CA@3982 lone lone lzero lone lone lzero lone top CA@3923 CA@3924 CA@3972 CA@3968 CA@3968 CA@3970 lone top CA@3925 lone CA@3975 CA@3932 CA@3932 CA@3933 lone top CA@3928 lone CA@3937 lone top top CA@3929 CA@3967 lone CA@3967 CA@3921 CA@3922 CA@3963 CA@3965 top CA@3927 lone CA@3957 lone top CA@3945 CA@3942 CA@3960 CA@3961 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} x1_@NEW_@22_@UNQ_@60) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                          in
                                            let
                                              sub_@UNQ_@68 = (genBalancedBinTree :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero lzero lzero CA@4500)) lzero}) lone} u5_56) :: {_u (BinTree (lzero lzero lzero CA@4500)) lzero}
                                            in
                                              ((BinTree :: {_u ({_u (BinTree (lzero lzero lzero CA@4500)) (lzero,lzero)} -> {_u ({_u (BinTree (lzero lzero lzero CA@4500)) (lzero,CA@4500)} -> {_u (BinTree (lzero lzero lzero CA@4500)) lzero}) lone}) lone} sub_@UNQ_@68) :: {_u ({_u (BinTree (lzero lzero lzero CA@4500)) (lzero,CA@4500)} -> {_u (BinTree (lzero lzero lzero CA@4500)) lzero}) lone} sub_@UNQ_@68) :: {_u (BinTree (lzero lzero lzero CA@4500)) lzero}
                                       ) :: {_u ({_u Int (lzero,lone)} -> {_u (BinTree (lzero lzero lzero CA@4500)) lzero}) lzero}
            genBalancedBinTree = (\x1_@UNQ_@60 ->
                                    let
                                      n_@UNQ_@62_@CCN = (n_@NEW_@21_@UNQ_@62_@CCN :: {_u ({_u Int (lzero,lone)} -> {_u (BinTree (lzero lzero lzero CA@4500)) lzero}) lone} x1_@UNQ_@60) :: {_u (BinTree (lzero lzero lzero CA@4500)) lzero}
                                    in
                                      let
                                        u3_406_0_@UNQ_@70 = (((< :: {_u ({_u (_'Ord (CA@4262 CA@4263 CA@4270 CA@4222 lone CA@4271 CA@4267 CA@4269 lone CA@4268 CA@4266 CA@4266 CA@4228 lone top CA@4227 lone CA@4233 CA@4231 CA@4231 CA@4224 lone top CA@4236 CA@4235 CA@4219 CA@4220 CA@4238 CA@4240 CA@4240 CA@4239 lone top CA@4215 lone CA@4248 CA@4244 CA@4244 CA@4245 lone top CA@4258 CA@4259 CA@4253 CA@4250 CA@4251 CA@4254 CA@4255 top CA@4260 CA@4261 CA@4249 CA@4205 CA@4206 CA@4203 CA@4204 top CA@4256 lone CA@4201 CA@4200 CA@4200 CA@4195 lone top lone lone lzero lone lone lzero lone top CA@4218 CA@4217 CA@4208 CA@4210 CA@4210 CA@4211 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} x1_@UNQ_@60) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
                                      in
                                        let!
                                          u3_406_0_@UNQ_@71_@EVL = u3_406_0_@UNQ_@70 :: {_u Bool top}
                                        in
                                          (case u3_406_0_@UNQ_@71_@EVL :: {_u Bool lone} of
                                             False -> n_@UNQ_@62_@CCN :: {_u (BinTree (lzero lzero lzero CA@4500)) lzero}
                                             True -> Leaf :: {_u (BinTree (lzero lzero lzero CA@4500)) lzero}
                                          ) :: {_u (BinTree (lzero lzero lzero CA@4500)) lzero}
                                 ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero lzero lzero CA@4500)) lzero}) lone}
          in
            let
              mirror = (\x1_@UNQ_@72 ->
                          let!
                            u3_541_0_@UNQ_@76_@EVL = x1_@UNQ_@72 :: {_u (BinTree (lzero lzero lzero lzero)) lzero}
                          in
                            (case u3_541_0_@UNQ_@76_@EVL :: {_u (BinTree (lzero lzero lzero lzero)) lone} of
                               BinTree l_@UNQ_@77_@FLD_@0 r_@UNQ_@78_@FLD_@1 -> let
                                                                                  u5_75 = (mirror :: {_u ({_u (BinTree (lzero lzero lzero lzero)) (lzero,{set {1,infty}})} -> {_u (BinTree (lzero lzero lzero lzero)) lzero}) lone} l_@UNQ_@77_@FLD_@0) :: {_u (BinTree (lzero lzero lzero lzero)) lzero}
                                                                                in
                                                                                  let
                                                                                    u5_74 = (mirror :: {_u ({_u (BinTree (lzero lzero lzero lzero)) (lzero,{set {1,infty}})} -> {_u (BinTree (lzero lzero lzero lzero)) lzero}) lone} r_@UNQ_@78_@FLD_@1) :: {_u (BinTree (lzero lzero lzero lzero)) lzero}
                                                                                  in
                                                                                    let
                                                                                      u5_72 = ((BinTree :: {_u ({_u (BinTree (lzero lzero lzero lzero)) (lzero,lzero)} -> {_u ({_u (BinTree (lzero lzero lzero lzero)) (lzero,lzero)} -> {_u (BinTree (lzero lzero lzero lzero)) lzero}) lone}) lone} u5_74) :: {_u ({_u (BinTree (lzero lzero lzero lzero)) (lzero,lzero)} -> {_u (BinTree (lzero lzero lzero lzero)) lzero}) lone} u5_75) :: {_u (BinTree (lzero lzero lzero lzero)) lzero}
                                                                                    in
                                                                                      u5_72 :: {_u (BinTree (lzero lzero lzero lzero)) lzero}
                               Leaf -> x1_@UNQ_@72 :: {_u (BinTree (lzero lzero lzero lzero)) lzero}
                            ) :: {_u (BinTree (lzero lzero lzero lzero)) lzero}
                       ) :: {_u ({_u (BinTree (lzero lzero lzero lzero)) (lzero,{set {1,infty}})} -> {_u (BinTree (lzero lzero lzero lzero)) lzero}) lone}
            in
              let
                u5_78 = (genBalancedBinTree :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (CA@4497 CA@4498 lzero CA@4500)) lzero}) lone} 20) :: {_u (BinTree (CA@4497 CA@4498 lzero CA@4500)) lzero}
              in
                let
                  testTreeInlinedMap = (mirror :: {_u ({_u (BinTree (lzero lzero lzero lzero)) (lzero,{set {1,infty}})} -> {_u (BinTree (lzero lzero lzero lzero)) lzero}) lone} u5_78) :: {_u (BinTree (lzero lzero lzero lzero)) lzero}
                in
                  let
                    u5_85 = (flatten :: {_u ({_u (BinTree (lzero {set {0,1}} lzero {set {0,1}})) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3822 CA@3828 CA@3829 CA@3830)))) lzero}) {set {1,infty}}} testTreeInlinedMap) :: {_u ([] (lzero lzero lzero lzero) ((BinTree (CA@3822 CA@3828 CA@3829 CA@3830)))) lzero}
                  in
                    let
                      u5_84 = (length :: {_u ({_u ([] (lzero CA@4837 lzero lzero) ((BinTree (CA@4840 CA@4838 CA@4839 CA@4841)))) (lzero,lone)} -> {_u Int lzero}) top} u5_85) :: {_u Int lzero}
                    in
                      let
                        u5_83 = (countLeafs :: {_u ({_u (BinTree (CA@303 lone lzero lone)) (lzero,lone)} -> {_u Int top}) lone} testTreeInlinedMap) :: {_u Int top}
                      in
                        let
                          testBinTreeInlinedMap = (((+ :: {_u ({_u (_'Num (CA@4933 CA@4934 CA@4939 top CA@4936 CA@4989 CA@4988 CA@4987 lone CA@4985 CA@4991 CA@4991 CA@4990 lone top CA@4980 lone CA@4975 CA@4977 CA@4977 CA@4974 lone top CA@4971 CA@4970 CA@4940 lone CA@4973 CA@4967 CA@4967 CA@4966 lone top CA@4941 CA@4943 CA@4964 CA@4962 CA@4962 CA@4960 lone top lone lone lzero lone lone lzero lone top CA@4951 lone CA@4999 lone top top CA@4952 CA@4958 lone CA@4958 CA@4949 CA@4948 CA@4955 CA@4954 top CA@4947 lone CA@5000 lone top CA@4938 CA@4937 CA@5004 CA@5003 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_83) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_84) :: {_u Int top}
                        in
                          let
                            main = ((print :: {_u ({_u (_'Show (CA@5337 CA@5340 lone lone lzero lone top CA@5343 CA@5341 CA@5335 CA@5336 CA@5306 lone CA@5300 CA@5303 CA@5339 CA@5301 CA@5302 CA@5304 CA@5329 CA@5328 CA@5325 CA@5324 CA@5321 CA@5320 CA@5327 CA@5326 CA@5323 CA@5322 CA@5334 CA@5299 CA@5305 CA@5332 lone CA@5331 CA@5333 CA@5316 CA@5309 CA@5314 CA@5310 CA@5315 CA@5312 CA@5317 CA@5311 CA@5318 CA@5313) (Int)) (lone,lone)} -> {_u ({_u Int (lone,lone)} -> {_u (CA@5460 CA@5297) lone}) lone}) top} Show_@DCT_@u95_17_0) :: {_u ({_u Int (lone,lone)} -> {_u (CA@5460 CA@5297) lone}) lone} testBinTreeInlinedMap) :: {_u (CA@5460 CA@5297) lone}
                          in
                            let
                              u5_92 = () :: {_u () lzero}
                            in
                              let
                                main = ((ehcRunMain :: {_u ({_u (CA@5460 CA@5459) (lone,lone)} -> {_u ({_u () (lzero,lzero)} -> {_u (CA@5460 CA@5459) lone}) lone}) top} main) :: {_u ({_u () (lzero,lzero)} -> {_u (CA@5460 CA@5459) lone}) lone} u5_92) :: {_u (CA@5460 CA@5459) lone}
                              in
                                main :: {_u (CA@5460 CA@5599) lone}
let
  fact = \n_@UNQ_@41 ->
           let
             u3_37_0_@UNQ_@42 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@41 1
           in let! u3_37_0_@UNQ_@43_@EVL = u3_37_0_@UNQ_@42
              in case u3_37_0_@UNQ_@43_@EVL of
                   False  -> let
                               u5_13 = - Num_@DCT_@u88_18_0 n_@UNQ_@41 1
                             in let
                                  u5_12 = fact u5_13
                                in let
                                     u5_9 = * Num_@DCT_@u88_18_0 n_@UNQ_@41 u5_12
                                   in u5_9
                   True  -> 1
in let
     countLeafs = \x1_@UNQ_@46 ->
                    let! u3_182_0_@UNQ_@48_@EVL = x1_@UNQ_@46
                    in case u3_182_0_@UNQ_@48_@EVL of
                         BinTree l_@UNQ_@49_@FLD_@0 r_@UNQ_@50_@FLD_@1 -> let
                                                                            u5_28 = countLeafs r_@UNQ_@50_@FLD_@1
                                                                          in let
                                                                               u5_27 = countLeafs l_@UNQ_@49_@FLD_@0
                                                                             in let
                                                                                  u5_24 = + Num_@DCT_@u88_18_0 u5_27 1
                                                                                in let
                                                                                     u5_21 = + Num_@DCT_@u88_18_0 u5_24 u5_28
                                                                                   in u5_21
                         Leaf  -> 1
   in let
        BinTree = \x1_@UNQ_@44 ->
                    \x2_@UNQ_@45 ->
                      BinTree MainOpts.x1_@UNQ_@44 MainOpts.x2_@UNQ_@45
      in let
           Leaf = Leaf 
         in let
              flatten = \x1_@UNQ_@53 ->
                          let! u3_301_0_@UNQ_@55_@EVL = x1_@UNQ_@53
                          in case u3_301_0_@UNQ_@55_@EVL of
                               BinTree l_@UNQ_@56_@FLD_@0 r_@UNQ_@57_@FLD_@1 -> let
                                                                                  u5_47 = flatten r_@UNQ_@57_@FLD_@1
                                                                                in let
                                                                                     u5_46 = flatten l_@UNQ_@56_@FLD_@0
                                                                                   in let
                                                                                        u5_44 = ++ u5_46 u5_47
                                                                                      in u5_44
                               Leaf  -> let
                                          u5_48 = : Leaf []
                                        in u5_48
            in let
                 n_@NEW_@21_@UNQ_@62_@CCN = \x1_@NEW_@22_@UNQ_@60 ->
                                              let
                                                u5_56 = - Num_@DCT_@u88_18_0 x1_@NEW_@22_@UNQ_@60 1
                                              in let
                                                   sub_@UNQ_@68 = genBalancedBinTree u5_56
                                                 in BinTree sub_@UNQ_@68 sub_@UNQ_@68
                 genBalancedBinTree = \x1_@UNQ_@60 ->
                                        let
                                          n_@UNQ_@62_@CCN = n_@NEW_@21_@UNQ_@62_@CCN x1_@UNQ_@60
                                        in let
                                             u3_406_0_@UNQ_@70 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@60 1
                                           in let! u3_406_0_@UNQ_@71_@EVL = u3_406_0_@UNQ_@70
                                              in case u3_406_0_@UNQ_@71_@EVL of
                                                   False  -> n_@UNQ_@62_@CCN
                                                   True  -> Leaf
               in let
                    mirror = \x1_@UNQ_@72 ->
                               let! u3_541_0_@UNQ_@76_@EVL = x1_@UNQ_@72
                               in case u3_541_0_@UNQ_@76_@EVL of
                                    BinTree l_@UNQ_@77_@FLD_@0 r_@UNQ_@78_@FLD_@1 -> let
                                                                                       u5_75 = mirror l_@UNQ_@77_@FLD_@0
                                                                                     in let
                                                                                          u5_74 = mirror r_@UNQ_@78_@FLD_@1
                                                                                        in let
                                                                                             u5_72 = BinTree u5_74 u5_75
                                                                                           in u5_72
                                    Leaf  -> x1_@UNQ_@72
                  in let
                       u5_78 = genBalancedBinTree 20
                     in let
                          testTreeInlinedMap = mirror u5_78
                        in let
                             u5_85 = flatten testTreeInlinedMap
                           in let
                                u5_84 = length u5_85
                              in let
                                   u5_83 = countLeafs testTreeInlinedMap
                                 in let
                                      testBinTreeInlinedMap = + Num_@DCT_@u88_18_0 u5_83 u5_84
                                    in let
                                         main = print Show_@DCT_@u95_17_0 testBinTreeInlinedMap
                                       in let
                                            u5_92 = ()
                                          in let
                                               main = ehcRunMain main u5_92
                                             in main
("opt-let",main)
("opt-let",MainOpts.main)
("opt-let",MainOpts.testBinTreeInlinedMap)
("opt-let",MainOpts.u5_83)
("opt-let",MainOpts.u5_84)
("opt-let",MainOpts.u5_85)
("opt-let",MainOpts.testTreeInlinedMap)
("opt-let",MainOpts.u5_78)
("opt-let",MainOpts.u5_72)
("opt-let",MainOpts.u3_406_0_@UNQ_@70)
("opt-let",MainOpts.u5_56)
("opt-let",MainOpts.u5_48)
("opt-let",MainOpts.u5_44)
("opt-let",MainOpts.u5_21)
("opt-let",MainOpts.u5_24)
("opt-let",MainOpts.u5_27)
("opt-let",MainOpts.u5_28)
("opt-AltCon",[7_3,7_4])
("opt-let",MainOpts.u5_9)
("opt-let",MainOpts.u5_12)
("opt-let",MainOpts.u5_13)
("opt-let",MainOpts.u3_37_0_@UNQ_@42)
("Transformation applied: ",23)
let
  fact = \n_@UNQ_@41 ->
           let! u3_37_0_@UNQ_@42 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@41 1
           in let! u3_37_0_@UNQ_@43_@EVL = u3_37_0_@UNQ_@42
              in case u3_37_0_@UNQ_@43_@EVL of
                   False  -> let! u5_13 = - Num_@DCT_@u88_18_0 n_@UNQ_@41 1
                             in let! u5_12 = fact u5_13
                                in let! u5_9 = * Num_@DCT_@u88_18_0 n_@UNQ_@41 u5_12
                                   in u5_9
                   True  -> 1
in let
     countLeafs = \x1_@UNQ_@46 ->
                    let! u3_182_0_@UNQ_@48_@EVL = x1_@UNQ_@46
                    in case u3_182_0_@UNQ_@48_@EVL of
                         BinTree l_@UNQ_@49_@FLD_@0 r_@UNQ_@50_@FLD_@1 -> let! u7_3 = l_@UNQ_@49_@FLD_@0
                                                                          in let! u7_4 = r_@UNQ_@50_@FLD_@1
                                                                             in let! u5_28 = countLeafs r_@UNQ_@50_@FLD_@1
                                                                                in let! u5_27 = countLeafs l_@UNQ_@49_@FLD_@0
                                                                                   in let! u5_24 = + Num_@DCT_@u88_18_0 u5_27 1
                                                                                      in let! u5_21 = + Num_@DCT_@u88_18_0 u5_24 u5_28
                                                                                         in u5_21
                         Leaf  -> 1
   in let
        BinTree = \x1_@UNQ_@44 ->
                    \x2_@UNQ_@45 ->
                      BinTree MainOpts.x1_@UNQ_@44 MainOpts.x2_@UNQ_@45
      in let
           Leaf = Leaf 
         in let
              flatten = \x1_@UNQ_@53 ->
                          let! u3_301_0_@UNQ_@55_@EVL = x1_@UNQ_@53
                          in case u3_301_0_@UNQ_@55_@EVL of
                               BinTree l_@UNQ_@56_@FLD_@0 r_@UNQ_@57_@FLD_@1 -> let
                                                                                  u5_47 = flatten r_@UNQ_@57_@FLD_@1
                                                                                in let
                                                                                     u5_46 = flatten l_@UNQ_@56_@FLD_@0
                                                                                   in let! u5_44 = ++ u5_46 u5_47
                                                                                      in u5_44
                               Leaf  -> let! u5_48 = : Leaf []
                                        in u5_48
            in let
                 n_@NEW_@21_@UNQ_@62_@CCN = \x1_@NEW_@22_@UNQ_@60 ->
                                              let! u5_56 = - Num_@DCT_@u88_18_0 x1_@NEW_@22_@UNQ_@60 1
                                              in let
                                                   sub_@UNQ_@68 = genBalancedBinTree u5_56
                                                 in BinTree sub_@UNQ_@68 sub_@UNQ_@68
                 genBalancedBinTree = \x1_@UNQ_@60 ->
                                        let
                                          n_@UNQ_@62_@CCN = n_@NEW_@21_@UNQ_@62_@CCN x1_@UNQ_@60
                                        in let! u3_406_0_@UNQ_@70 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@60 1
                                           in let! u3_406_0_@UNQ_@71_@EVL = u3_406_0_@UNQ_@70
                                              in case u3_406_0_@UNQ_@71_@EVL of
                                                   False  -> n_@UNQ_@62_@CCN
                                                   True  -> Leaf
               in let
                    mirror = \x1_@UNQ_@72 ->
                               let! u3_541_0_@UNQ_@76_@EVL = x1_@UNQ_@72
                               in case u3_541_0_@UNQ_@76_@EVL of
                                    BinTree l_@UNQ_@77_@FLD_@0 r_@UNQ_@78_@FLD_@1 -> let
                                                                                       u5_75 = mirror l_@UNQ_@77_@FLD_@0
                                                                                     in let
                                                                                          u5_74 = mirror r_@UNQ_@78_@FLD_@1
                                                                                        in let! u5_72 = BinTree u5_74 u5_75
                                                                                           in u5_72
                                    Leaf  -> x1_@UNQ_@72
                  in let! u5_78 = genBalancedBinTree 20
                     in let! testTreeInlinedMap = mirror u5_78
                        in let! u5_85 = flatten testTreeInlinedMap
                           in let! u5_84 = length u5_85
                              in let! u5_83 = countLeafs testTreeInlinedMap
                                 in let! testBinTreeInlinedMap = + Num_@DCT_@u88_18_0 u5_83 u5_84
                                    in let! main = print Show_@DCT_@u95_17_0 testBinTreeInlinedMap
                                       in let
                                            u5_92 = ()
                                          in let! main = ehcRunMain main u5_92
                                             in main

BinTreeHigherOrderMap:
("TyGam: ",BinTree ->
  Type Error: MainOpts.BinTree dataTgi)
("DataGam: ",BinTree a 5 6 7 8 9 10 11 12
  MainOpts.Leaf {_u a (5,6)}
  MainOpts.BinTree {_u (BinTree (5 6 7 8 9 10 11 12) (a)) (7,8)} {_u a (9,10)} {_u (BinTree (5 6 7 8 9 10 11 12) (a)) (11,12)})
("num constraints: ",1462)
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@332}, a2_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]}, a_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}, a2_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@45}, a_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@101}})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@723}, a2_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]}, a_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@1804}, a2_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]}, a_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}})
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@1832}, a2_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@197}, a_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}})
"error warning: top Found testforTop"
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@1848}, a2_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]}, a_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}})
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@5334}, a2_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@969}, a_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}})
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@6229}, a2_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@969}, a_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}})
("still to do cs",0,120)
("Tys",n_@UNQ_@60 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
u5_117 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390))) (lzero,lzero)}
u5_136 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
__@UNQ_@143 ->
  {_u (forall {} . cs: 0 => CA@1390) (CA@1463,CA@1464)}
u5_58 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_143 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
u5_83 ->
  {_u (forall {} . cs: 0 => CA@989) (CA@1027,lzero)}
main ->
  {_u (forall {CA@8310,CA@8473} . cs: 0 => (CA@8473 CA@8310)) (lone,lone)}
u3_242_0_@UNQ_@71_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@760) (CA@744,CA@745)}
u5_87 ->
  {_u (forall {} . cs: 0 => CA@989) (CA@1027,CA@5334)}
mirror ->
  {_u (forall {CA@1463,CA@1464,CA@1387,CA@1390} . cs: 0 => ({_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) lzero})) (lone,lone)}
u5_81 ->
  {_u (forall {} . cs: 1 => (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989))
           lone U CA@848 == CA@848
      ) (CA@1013,lzero)}
u5_86 ->
  {_u (forall {CA@5334,CA@992,CA@6019,CA@6025,CA@6024,CA@6020,CA@6023,CA@6022} . cs: 2 => (BinTree (CA@992 CA@5334 CA@6025 CA@6019 CA@6020 CA@6022 CA@6023 CA@6024) (CA@989))
           CA@992 U CA@1027 == CA@1027
           CA@1013 (+) lzero == CA@1013
      ) (CA@1013,lone)}
r_@UNQ_@139_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390))) (lzero,lzero)}
l_@UNQ_@124_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (top lone lzero lone lzero lone CA@212 lone) (Int))) (lzero,lone)}
Leaf ->
  {_u (forall {CA@780,CA@781,CA@786,CA@782,CA@783,CA@784,CA@779,CA@776,CA@775,CA@773} . cs: 0 => ({_u CA@773 (CA@775,CA@776)} -> {_u (BinTree (CA@775 CA@776 CA@779 CA@780 CA@781 CA@782 CA@783 CA@784) (CA@773)) CA@786})) (top,top)}
u5_84 ->
  {_u (forall {} . cs: 2 => (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989))
           lone U CA@848 == CA@848
           CA@1013 (+) lzero == CA@1013
      ) (CA@1013,lzero)}
u5_100 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
u5_107 ->
  {_u (forall {CA@6037,CA@6039,CA@6038,CA@6035,CA@6034,CA@6040,CA@1250} . cs: 1 => (BinTree (lzero CA@1250 CA@6040 CA@6034 CA@6035 CA@6037 CA@6038 CA@6039) (()))
           CA@1277 (+) lzero == CA@1277
      ) (CA@1277,lone)}
u3_687_0_@UNQ_@119 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
u5_64 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
n_@NEW_@36_@UNQ_@111_@CCN ->
  {_u (forall {CA@5388} . cs: 0 => ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) CA@1277})) (lzero,lzero)}
BinTree ->
  {_u (forall {CA@558,CA@557,CA@580,CA@581,CA@584,CA@561,CA@568,CA@567,CA@566,CA@565,CA@562,CA@576,CA@578,CA@559} . cs: 4 => ({_u (BinTree (CA@567 CA@568 CA@557 CA@558 CA@561 CA@562 CA@565 CA@566) (CA@559)) (lzero,lzero)} -> {_u ({_u CA@559 (CA@580,CA@581)} -> {_u ({_u (BinTree (CA@567 CA@568 CA@557 CA@558 CA@561 CA@562 CA@565 CA@566) (CA@559)) (CA@565,CA@566)} -> {_u (BinTree (CA@567 CA@568 CA@557 CA@558 CA@561 CA@562 CA@565 CA@566) (CA@559)) CA@576}) CA@578}) CA@584})
           CA@578 . CA@561 == CA@580
           CA@578 . CA@562 == CA@581
           CA@578 . CA@557 == lzero
           CA@578 . CA@558 == lzero
      ) (top,top)}
l_@UNQ_@70_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@748 CA@749 lzero lone CA@744 CA@745 CA@734 lone) (CA@760))) (lzero,lone)}
countLeafs ->
  {_u (forall {CA@734,CA@744,CA@745,CA@748,CA@749,CA@760} . cs: 1 => ({_u (BinTree (CA@748 CA@749 lzero lone CA@744 CA@745 CA@734 lone) (CA@760)) (lzero,lone)} -> {_u Int top})
           lzero U CA@734 == CA@734
      ) (lone,lzero)}
sub_@UNQ_@117 ->
  {_u (forall {} . cs: 3 => (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (()))
           CA@7005 > lzero == lzero
           CA@7005 (+) lzero == CA@7005
           CA@7005 > lzero == lzero
      ) (CA@1277,CA@7005)}
r_@UNQ_@72_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@748 CA@749 lzero lone CA@744 CA@745 CA@734 lone) (CA@760))) (CA@734,lone)}
u3_967_0_@UNQ_@136_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390))) (lone,lomega)}
fact ->
  {_u (forall {} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u Int top})) (lzero,lzero)}
mapTree ->
  {_u (forall {CA@5334,CA@5335,CA@1027,CA@1013,CA@888,CA@848,CA@971,CA@989,CA@831} . cs: 20 => ({_u ({_u CA@831 (lzero,CA@971)} -> {_u CA@989 CA@1027}) (lzero,{set {0,1}})} -> {_u ({_u (BinTree (lzero CA@971 lzero lzero lzero lzero lzero lzero) (CA@831)) (lzero,lone)} -> {_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) CA@1013}) CA@848})
           CA@5334 > lone == lone
           CA@5334 > lzero == lzero
           CA@5334 > CA@971 == CA@971
           CA@848 . {set {0,1}} == {set {0,1}}
           CA@848 . {set {0,1}} == {set {0,1}}
           CA@848 . {set {0,1}} == {set {0,1}}
           CA@848 . {set {0,1}} == {set {0,1}}
           CA@848 . lzero == lzero
           CA@848 . lzero == lzero
           CA@848 . lzero == lzero
           CA@848 . {set {0,1}} == {set {0,1}}
           lone U CA@848 == CA@848
           CA@1013 (+) lzero == CA@1013
           lone U CA@848 == CA@848
           lzero U CA@1013 == CA@1013
           lzero U CA@1027 == CA@1027
           CA@888 U CA@1013 == CA@1013
           CA@1013 (+) lzero == CA@1013
           CA@5335 U CA@1027 == CA@1027
           CA@1013 (+) lzero == CA@1013
      ) (lone,lone)}
u5_121 ->
  {_u (forall {CA@6229,CA@6230,CA@6232,CA@6248,CA@6249} . cs: 1 => (BinTree (lzero CA@6229 CA@6248 CA@6249 CA@6232 CA@6230 lzero lzero) (Int))
           lzero U CA@1277 == CA@1277
      ) (lzero,{set {1,infty}})}
l_@UNQ_@88_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (lzero CA@971 lzero lzero lzero lzero lzero lzero) (CA@831))) (lzero,lzero)}
u5_123 ->
  {_u (forall {CA@7325,CA@7324,CA@7322,CA@7320} . cs: 0 => ({_u CA@7320 (CA@7324,CA@7322)} -> {_u Int CA@7325})) (lzero,{set {0,1}})}
u5_125 ->
  {_u (forall {CA@7013,CA@7012,CA@7011,CA@7010,CA@7005,CA@7008} . cs: 1 => (BinTree (lzero CA@7010 CA@7011 CA@7012 CA@7013 CA@7008 lzero CA@7005) (()))
           CA@1277 (+) lzero == CA@1277
      ) (CA@1277,lone)}
u3_209_0_@UNQ_@69_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@748 CA@749 lzero lone CA@744 CA@745 CA@734 lone) (CA@760))) (lone,lomega)}
u5_124 ->
  {_u (forall {} . cs: 0 => Int) (top,lzero)}
x1_@NEW_@37_@UNQ_@109 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
r_@UNQ_@103_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@143 lzero lzero CA@106 CA@115 lzero lzero lzero) (CA@27))) (lzero,lzero)}
u3_37_0_@UNQ_@62_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
x2_@UNQ_@87_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (lzero CA@971 lzero lzero lzero lzero lzero lzero) (CA@831))) (lone,lomega)}
u3_847_0_@UNQ_@123_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (top lone lzero lone lzero lone CA@212 lone) (Int))) (lone,lomega)}
r_@UNQ_@126_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (top lone lzero lone lzero lone CA@212 lone) (Int))) (CA@212,lone)}
x_@UNQ_@125_@FLD_@1 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
u5_21 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
flatten ->
  {_u (forall {CA@143,CA@115,CA@106,CA@27} . cs: 30 => ({_u (BinTree (CA@143 lzero lzero CA@106 CA@115 lzero lzero lzero) (CA@27)) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero})
           CA@106 U lzero == {set {0,1}}
           CA@106 U lzero == {set {0,1}}
           lone > CA@106 == CA@106
           CA@106 > lone == CA@106
           CA@106 > lone == CA@106
           CA@106 > lzero == lzero
           CA@106 > lone == CA@106
           {set {0,1}} > CA@115 == CA@115
           CA@106 (+) lzero == CA@106
           CA@106 (+) lzero == CA@106
           lzero U CA@115 == CA@115
           CA@106 > lzero == lzero
           CA@106 (+) lzero == CA@106
           CA@106 > lzero == lzero
           lzero > CA@106 == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . {set {0,1}} == {set {0,1}}
           CA@106 . {set {0,1}} == {set {0,1}}
           lone U CA@106 == CA@106
           lone U CA@106 == CA@106
           lzero > CA@106 == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . {set {0,1}} == {set {0,1}}
           CA@106 . {set {0,1}} == {set {0,1}}
           lone U CA@106 == CA@106
           lzero U CA@143 == CA@143
      ) ({set {1,infty}},lone)}
l_@UNQ_@137_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390))) (lzero,lzero)}
u5_25 ->
  {_u (forall {} . cs: 1 => Int
           lzero U CA@212 == CA@212
      ) (top,lone)}
u5_24 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
genBalancedBinTree ->
  {_u (forall {CA@1277,CA@5388} . cs: 5 => ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) CA@1277})
           lzero U CA@1277 == CA@1277
           CA@1277 (+) lzero == CA@1277
           CA@1277 U lzero == CA@1277
           CA@1277 (+) lzero == CA@1277
           CA@1277 (+) lzero == CA@1277
      ) (lone,lone)}
a_@UNQ_@138_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@1390) (lzero,CA@1387)}
a_@UNQ_@102_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@27) (CA@115,lzero)}
x1_@UNQ_@132 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390))) (lzero,{set {1,infty}})}
x2_@UNQ_@65 ->
  {_u (forall {} . cs: 0 => CA@559) (CA@580,CA@581)}
x1_@UNQ_@76 ->
  {_u (forall {} . cs: 0 => ({_u CA@831 (lzero,CA@971)} -> {_u CA@989 CA@1027})) (lzero,{set {0,1}})}
x1_@UNQ_@67 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@748 CA@749 lzero lone CA@744 CA@745 CA@734 lone) (CA@760))) (lzero,lone)}
x1_@UNQ_@64 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@567 CA@568 CA@557 CA@558 CA@561 CA@562 CA@565 CA@566) (CA@559))) (lzero,lzero)}
x3_@UNQ_@66 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@567 CA@568 CA@557 CA@558 CA@561 CA@562 CA@565 CA@566) (CA@559))) (CA@565,CA@566)}
x2_@UNQ_@86 ->
  {_u (forall {} . cs: 0 => (BinTree (lzero CA@971 lzero lzero lzero lzero lzero lzero) (CA@831))) (lzero,lone)}
x1_@UNQ_@63 ->
  {_u (forall {} . cs: 0 => CA@773) (CA@775,CA@776)}
u5_8 ->
  {_u (forall {} . cs: 1 => ([] (lzero lzero lzero lzero) (CA@27))
           lzero U CA@115 == CA@115
      ) (lzero,{set {0,1}})}
x1_@UNQ_@98 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@143 lzero lzero CA@106 CA@115 lzero lzero lzero) (CA@27))) (lzero,lone)}
x1_@UNQ_@109 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
x1_@UNQ_@121 ->
  {_u (forall {} . cs: 0 => (BinTree (top lone lzero lone lzero lone CA@212 lone) (Int))) (lzero,lone)}
n_@UNQ_@111_@CCN ->
  {_u (forall {} . cs: 1 => (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (()))
           CA@1277 (+) lzero == CA@1277
      ) (CA@1277,{set {0,1}})}
a_@UNQ_@107_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@27) (CA@143,lzero)}
u5_130 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_135 ->
  {_u (forall {} . cs: 0 => ([] (lzero lzero lzero lzero) (Int))) (lzero,lone)}
u5_134 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
a_@UNQ_@95_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@831) (lzero,CA@971)}
u5_18 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u3_687_0_@UNQ_@120_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
main ->
  {_u (forall {CA@8472} . cs: 0 => (CA@8473 CA@8472)) (lone,lone)}
u5_108 ->
  {_u (forall {} . cs: 0 => ()) (lzero,CA@1250)}
testBinTreeHigherOrderMap ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_35 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_61 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
testTreeHigherOrderMap ->
  {_u (forall {CA@7546,CA@7545,CA@7547,CA@7548} . cs: 0 => (BinTree (CA@7547 CA@7545 lzero lzero CA@7548 CA@7546 lzero lzero) (Int))) (lzero,lomega)}
u5_39 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
u5_38 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_94 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
u3_218_0_@UNQ_@75_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@760) (CA@748,CA@749)}
l_@UNQ_@101_@FLD_@0 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@143 lzero lzero CA@106 CA@115 lzero lzero lzero) (CA@27))) (lzero,CA@106)}
u5_65 ->
  {_u (forall {} . cs: 1 => Int
           lzero U CA@734 == CA@734
      ) (top,lone)}
u5_7 ->
  {_u (forall {} . cs: 3 => ([] (lzero lzero lzero lzero) (CA@27))
           CA@106 > lzero == lzero
           CA@106 (+) lzero == CA@106
           CA@106 > lzero == lzero
      ) (lzero,CA@106)}
u3_553_0_@UNQ_@100_@EVL ->
  {_u (forall {} . cs: 0 => (BinTree (CA@143 lzero lzero CA@106 CA@115 lzero lzero lzero) (CA@27))) (lone,lomega)}
u5_11 ->
  {_u (forall {CA@154,CA@149} . cs: 1 => ([] (lzero lzero CA@154 CA@149) (CA@27))
           lzero U CA@143 == CA@143
      ) (lzero,lone)}
u5_5 ->
  {_u (forall {} . cs: 8 => ([] (lzero lzero lzero lzero) (CA@27))
           lone U CA@106 == CA@106
           lzero > CA@106 == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . lzero == lzero
           CA@106 . {set {0,1}} == {set {0,1}}
           CA@106 . {set {0,1}} == {set {0,1}}
           lone U CA@106 == CA@106
      ) (lzero,lone)}
u5_10 ->
  {_u (forall {} . cs: 0 => ([] (lzero lzero lzero lzero) (CA@27))) (lzero,lzero)}
sumTree ->
  {_u (forall {CA@212} . cs: 1 => ({_u (BinTree (top lone lzero lone lzero lone CA@212 lone) (Int)) (lzero,lone)} -> {_u Int top})
           lzero U CA@212 == CA@212
      ) (lone,lzero)}
a_@UNQ_@89_@FLD_@1 ->
  {_u (forall {} . cs: 0 => CA@831) (lzero,lzero)}
u5_78 ->
  {_u (forall {} . cs: 4 => (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989))
           lzero U CA@1013 == CA@1013
           lzero U CA@1027 == CA@1027
           CA@888 U CA@1013 == CA@1013
           CA@1013 (+) lzero == CA@1013
      ) (CA@1013,lone)}
u3_37_0_@UNQ_@61 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
x_@UNQ_@130_@FLD_@0 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_114 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390))) (lzero,lone)}
u5_133 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
r_@UNQ_@90_@FLD_@2 ->
  {_u (forall {} . cs: 0 => (BinTree (lzero CA@971 lzero lzero lzero lzero lzero lzero) (CA@831))) (lzero,lzero)}
u5_118 ->
  {_u (forall {} . cs: 0 => (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390))) (lzero,lzero)})
"start optimizing"
let
  flatten = (\x1_@UNQ_@98 ->
               let!
                 u3_553_0_@UNQ_@100_@EVL = x1_@UNQ_@98 :: {_u (BinTree (CA@143 lzero lzero CA@106 CA@115 lzero lzero lzero) (CA@27)) lzero}
               in
                 (case u3_553_0_@UNQ_@100_@EVL :: {_u (BinTree (CA@143 lzero lzero CA@106 CA@115 lzero lzero lzero) (CA@27)) lone} of
                    BinTree l_@UNQ_@101_@FLD_@0 a_@UNQ_@102_@FLD_@1 r_@UNQ_@103_@FLD_@2 -> let
                                                                                             u5_10 = (flatten :: {_u ({_u (BinTree (CA@143 lzero lzero CA@106 CA@115 lzero lzero lzero) (CA@27)) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) lone} r_@UNQ_@103_@FLD_@2) :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                                                                                           in
                                                                                             let
                                                                                               u5_8 = ((: :: {_u ({_u CA@27 (lzero,lzero)} -> {_u ({_u ([] (lzero lzero lzero lzero) (CA@27)) (lzero,lzero)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) lone}) top} a_@UNQ_@102_@FLD_@1) :: {_u ({_u ([] (lzero lzero lzero lzero) (CA@27)) (lzero,lzero)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) lone} u5_10) :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                                                                                             in
                                                                                               let
                                                                                                 u5_7 = (flatten :: {_u ({_u (BinTree (CA@143 lzero lzero CA@106 CA@115 lzero lzero lzero) (CA@27)) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) lone} l_@UNQ_@101_@FLD_@0) :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                                                                                               in
                                                                                                 let
                                                                                                   u5_5 = ((++ :: {_u ({_u ([] (lzero lzero lzero lzero) (CA@27)) (lzero,CA@106)} -> {_u ({_u ([] (lzero lzero lzero lzero) (CA@27)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) CA@106}) top} u5_7) :: {_u ({_u ([] (lzero lzero lzero lzero) (CA@27)) (lzero,{set {0,1}})} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) CA@106} u5_8) :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                                                                                                 in
                                                                                                   u5_5 :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                    Leaf a_@UNQ_@107_@FLD_@0 -> let
                                                  u5_11 = ((: :: {_u ({_u CA@27 (lzero,lzero)} -> {_u ({_u ([] (lzero lzero CA@154 CA@149) (CA@27)) (CA@154,CA@149)} -> {_u ([] (lzero lzero CA@154 CA@149) (CA@27)) lzero}) lone}) top} a_@UNQ_@107_@FLD_@0) :: {_u ({_u ([] (lzero lzero CA@154 CA@149) (CA@27)) (CA@154,CA@149)} -> {_u ([] (lzero lzero CA@154 CA@149) (CA@27)) lzero}) lone} []) :: {_u ([] (lzero lzero CA@154 CA@149) (CA@27)) lzero}
                                                in
                                                  u5_11 :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
                 ) :: {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}
            ) :: {_u ({_u (BinTree (CA@143 lzero lzero CA@106 CA@115 lzero lzero lzero) (CA@27)) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) (CA@27)) lzero}) {set {1,infty}}}
in
  let
    sumTree = (\x1_@UNQ_@121 ->
                 let!
                   u3_847_0_@UNQ_@123_@EVL = x1_@UNQ_@121 :: {_u (BinTree (top lone lzero lone lzero lone CA@212 lone) (Int)) lzero}
                 in
                   (case u3_847_0_@UNQ_@123_@EVL :: {_u (BinTree (top lone lzero lone lzero lone CA@212 lone) (Int)) lone} of
                      BinTree l_@UNQ_@124_@FLD_@0 x_@UNQ_@125_@FLD_@1 r_@UNQ_@126_@FLD_@2 -> let
                                                                                               u5_25 = (sumTree :: {_u ({_u (BinTree (top lone lzero lone lzero lone CA@212 lone) (Int)) (lzero,lone)} -> {_u Int top}) lone} r_@UNQ_@126_@FLD_@2) :: {_u Int top}
                                                                                             in
                                                                                               let
                                                                                                 u5_24 = (sumTree :: {_u ({_u (BinTree (top lone lzero lone lzero lone CA@212 lone) (Int)) (lzero,lone)} -> {_u Int top}) lone} l_@UNQ_@124_@FLD_@0) :: {_u Int top}
                                                                                               in
                                                                                                 let
                                                                                                   u5_21 = (((+ :: {_u ({_u (_'Num (CA@3895 CA@3896 CA@3901 top CA@3898 CA@3951 CA@3950 CA@3949 lone CA@3947 CA@3953 CA@3953 CA@3952 lone top CA@3942 lone CA@3937 CA@3939 CA@3939 CA@3936 lone top CA@3933 CA@3932 CA@3902 lone CA@3935 CA@3929 CA@3929 CA@3928 lone top CA@3903 CA@3905 CA@3926 CA@3924 CA@3924 CA@3922 lone top lone lone lzero lone lone lzero lone top CA@3913 lone CA@3961 lone top top CA@3914 CA@3920 lone CA@3920 CA@3911 CA@3910 CA@3917 CA@3916 top CA@3909 lone CA@3962 lone top CA@3900 CA@3899 CA@3966 CA@3965 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_24) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} x_@UNQ_@125_@FLD_@1) :: {_u Int top}
                                                                                                 in
                                                                                                   let
                                                                                                     u5_18 = (((+ :: {_u ({_u (_'Num (CA@4147 CA@4148 CA@4153 top CA@4150 CA@4203 CA@4202 CA@4201 lone CA@4199 CA@4205 CA@4205 CA@4204 lone top CA@4194 lone CA@4189 CA@4191 CA@4191 CA@4188 lone top CA@4185 CA@4184 CA@4154 lone CA@4187 CA@4181 CA@4181 CA@4180 lone top CA@4155 CA@4157 CA@4178 CA@4176 CA@4176 CA@4174 lone top lone lone lzero lone lone lzero lone top CA@4165 lone CA@4213 lone top top CA@4166 CA@4172 lone CA@4172 CA@4163 CA@4162 CA@4169 CA@4168 top CA@4161 lone CA@4214 lone top CA@4152 CA@4151 CA@4218 CA@4217 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_21) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_25) :: {_u Int top}
                                                                                                   in
                                                                                                     u5_18 :: {_u Int top}
                      Leaf x_@UNQ_@130_@FLD_@0 -> x_@UNQ_@130_@FLD_@0 :: {_u Int top}
                   ) :: {_u Int top}
              ) :: {_u ({_u (BinTree (top lone lzero lone lzero lone CA@212 lone) (Int)) (lzero,lone)} -> {_u Int top}) lone}
  in
    let
      fact = (\n_@UNQ_@60 ->
                let
                  u3_37_0_@UNQ_@61 = (((<= :: {_u ({_u (_'Ord (CA@4484 CA@4481 CA@4480 CA@4546 lone CA@4491 CA@4490 CA@4493 lone CA@4495 CA@4489 CA@4489 CA@4488 lone top CA@4503 lone CA@4498 CA@4500 CA@4500 CA@4497 lone top CA@4521 CA@4520 CA@4550 CA@4547 CA@4525 CA@4523 CA@4523 CA@4522 lone top lone lone lzero lone lone lzero lone top CA@4483 CA@4482 CA@4529 CA@4528 CA@4531 CA@4530 CA@4527 top CA@4486 CA@4487 CA@4533 CA@4532 CA@4536 CA@4534 CA@4537 top CA@4545 lone CA@4540 CA@4541 CA@4541 CA@4539 lone top CA@4543 CA@4544 CA@4479 CA@4477 CA@4477 CA@4476 lone top CA@4549 CA@4551 CA@4508 CA@4512 CA@4512 CA@4510 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} n_@UNQ_@60) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
                in
                  let!
                    u3_37_0_@UNQ_@62_@EVL = u3_37_0_@UNQ_@61 :: {_u Bool top}
                  in
                    (case u3_37_0_@UNQ_@62_@EVL :: {_u Bool lone} of
                       False -> let
                                  u5_39 = (((- :: {_u ({_u (_'Num (CA@4764 CA@4763 CA@4765 top CA@4767 CA@4774 CA@4775 CA@4778 lone CA@4772 CA@4776 CA@4776 CA@4777 lone top CA@4811 lone CA@4809 CA@4814 CA@4814 CA@4810 lone top CA@4807 CA@4806 lone lone lzero lone lone lzero lone top CA@4747 CA@4748 CA@4796 CA@4792 CA@4792 CA@4794 lone top CA@4749 lone CA@4799 CA@4756 CA@4756 CA@4757 lone top CA@4752 lone CA@4761 lone top top CA@4753 CA@4791 lone CA@4791 CA@4745 CA@4746 CA@4787 CA@4789 top CA@4751 lone CA@4781 lone top CA@4769 CA@4766 CA@4784 CA@4785 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@60) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                in
                                  let
                                    u5_38 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} u5_39) :: {_u Int top}
                                  in
                                    let
                                      u5_35 = (((* :: {_u ({_u (_'Num (CA@5056 CA@5057 CA@5076 top CA@5062 CA@5077 CA@5078 CA@5079 lone CA@5081 CA@5075 CA@5075 CA@5072 lone top CA@5073 lone CA@5065 CA@5070 CA@5070 CA@5066 lone top CA@5034 CA@5036 CA@5011 lone CA@5035 CA@5040 CA@5040 CA@5037 lone top lone lone lzero lone lone lzero lone top CA@5009 lone CA@5016 CA@5018 CA@5018 CA@5013 lone top CA@5058 lone CA@5019 lone top top CA@5054 CA@5047 lone CA@5047 CA@5053 CA@5051 CA@5043 CA@5030 top CA@5052 lone CA@5028 lone top CA@5059 CA@5060 CA@5027 CA@5042 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@60) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_38) :: {_u Int top}
                                    in
                                      u5_35 :: {_u Int top}
                       True -> 1 :: {_u Int top}
                    ) :: {_u Int top}
             ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lzero}
    in
      let
        BinTree = (\x1_@UNQ_@64 ->
                     (\x2_@UNQ_@65 ->
                        (\x3_@UNQ_@66 ->
                           (MainOpts.BinTree x1_@UNQ_@64 x2_@UNQ_@65 x3_@UNQ_@66) :: {_u (BinTree (CA@567 CA@568 CA@557 CA@558 CA@561 CA@562 CA@565 CA@566) (CA@559)) CA@576}
                        ) :: {_u ({_u (BinTree (CA@567 CA@568 CA@557 CA@558 CA@561 CA@562 CA@565 CA@566) (CA@559)) (CA@565,CA@566)} -> {_u (BinTree (CA@567 CA@568 CA@557 CA@558 CA@561 CA@562 CA@565 CA@566) (CA@559)) CA@576}) CA@578}
                     ) :: {_u ({_u CA@559 (CA@580,CA@581)} -> {_u ({_u (BinTree (CA@567 CA@568 CA@557 CA@558 CA@561 CA@562 CA@565 CA@566) (CA@559)) (CA@565,CA@566)} -> {_u (BinTree (CA@567 CA@568 CA@557 CA@558 CA@561 CA@562 CA@565 CA@566) (CA@559)) CA@576}) CA@578}) CA@584}
                  ) :: {_u ({_u (BinTree (CA@567 CA@568 CA@557 CA@558 CA@561 CA@562 CA@565 CA@566) (CA@559)) (lzero,lzero)} -> {_u ({_u CA@559 (CA@580,CA@581)} -> {_u ({_u (BinTree (CA@567 CA@568 CA@557 CA@558 CA@561 CA@562 CA@565 CA@566) (CA@559)) (CA@565,CA@566)} -> {_u (BinTree (CA@567 CA@568 CA@557 CA@558 CA@561 CA@562 CA@565 CA@566) (CA@559)) CA@576}) CA@578}) CA@584}) top}
      in
        let
          countLeafs = (\x1_@UNQ_@67 ->
                          let!
                            u3_209_0_@UNQ_@69_@EVL = x1_@UNQ_@67 :: {_u (BinTree (CA@748 CA@749 lzero lone CA@744 CA@745 CA@734 lone) (CA@760)) lzero}
                          in
                            (case u3_209_0_@UNQ_@69_@EVL :: {_u (BinTree (CA@748 CA@749 lzero lone CA@744 CA@745 CA@734 lone) (CA@760)) lone} of
                               BinTree l_@UNQ_@70_@FLD_@0 u3_242_0_@UNQ_@71_@FLD_@1 r_@UNQ_@72_@FLD_@2 -> let
                                                                                                            u5_65 = (countLeafs :: {_u ({_u (BinTree (CA@748 CA@749 lzero lone CA@744 CA@745 CA@734 lone) (CA@760)) (lzero,lone)} -> {_u Int top}) lone} r_@UNQ_@72_@FLD_@2) :: {_u Int top}
                                                                                                          in
                                                                                                            let
                                                                                                              u5_64 = (countLeafs :: {_u ({_u (BinTree (CA@748 CA@749 lzero lone CA@744 CA@745 CA@734 lone) (CA@760)) (lzero,lone)} -> {_u Int top}) lone} l_@UNQ_@70_@FLD_@0) :: {_u Int top}
                                                                                                            in
                                                                                                              let
                                                                                                                u5_61 = (((+ :: {_u ({_u (_'Num (CA@5451 CA@5452 CA@5457 top CA@5454 CA@5507 CA@5506 CA@5505 lone CA@5503 CA@5509 CA@5509 CA@5508 lone top CA@5498 lone CA@5493 CA@5495 CA@5495 CA@5492 lone top CA@5489 CA@5488 CA@5458 lone CA@5491 CA@5485 CA@5485 CA@5484 lone top CA@5459 CA@5461 CA@5482 CA@5480 CA@5480 CA@5478 lone top lone lone lzero lone lone lzero lone top CA@5469 lone CA@5517 lone top top CA@5470 CA@5476 lone CA@5476 CA@5467 CA@5466 CA@5473 CA@5472 top CA@5465 lone CA@5518 lone top CA@5456 CA@5455 CA@5522 CA@5521 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_64) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                                                                                              in
                                                                                                                let
                                                                                                                  u5_58 = (((+ :: {_u ({_u (_'Num (CA@5702 CA@5703 CA@5708 top CA@5705 CA@5758 CA@5757 CA@5756 lone CA@5754 CA@5760 CA@5760 CA@5759 lone top CA@5749 lone CA@5744 CA@5746 CA@5746 CA@5743 lone top CA@5740 CA@5739 CA@5709 lone CA@5742 CA@5736 CA@5736 CA@5735 lone top CA@5710 CA@5712 CA@5733 CA@5731 CA@5731 CA@5729 lone top lone lone lzero lone lone lzero lone top CA@5720 lone CA@5768 lone top top CA@5721 CA@5727 lone CA@5727 CA@5718 CA@5717 CA@5724 CA@5723 top CA@5716 lone CA@5769 lone top CA@5707 CA@5706 CA@5773 CA@5772 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_61) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_65) :: {_u Int top}
                                                                                                                in
                                                                                                                  u5_58 :: {_u Int top}
                               Leaf u3_218_0_@UNQ_@75_@FLD_@0 -> 1 :: {_u Int top}
                            ) :: {_u Int top}
                       ) :: {_u ({_u (BinTree (CA@748 CA@749 lzero lone CA@744 CA@745 CA@734 lone) (CA@760)) (lzero,lone)} -> {_u Int top}) lone}
        in
          let
            Leaf = (\x1_@UNQ_@63 ->
                      (MainOpts.Leaf x1_@UNQ_@63) :: {_u (BinTree (CA@775 CA@776 CA@779 CA@780 CA@781 CA@782 CA@783 CA@784) (CA@773)) CA@786}
                   ) :: {_u ({_u CA@773 (CA@775,CA@776)} -> {_u (BinTree (CA@775 CA@776 CA@779 CA@780 CA@781 CA@782 CA@783 CA@784) (CA@773)) CA@786}) top}
          in
            let
              mapTree = (\x1_@UNQ_@76 ->
                           (\x2_@UNQ_@86 ->
                              let!
                                x2_@UNQ_@87_@EVL = x2_@UNQ_@86 :: {_u (BinTree (lzero CA@971 lzero lzero lzero lzero lzero lzero) (CA@831)) lzero}
                              in
                                (case x2_@UNQ_@87_@EVL :: {_u (BinTree (lzero CA@971 lzero lzero lzero lzero lzero lzero) (CA@831)) lone} of
                                   BinTree l_@UNQ_@88_@FLD_@0 a_@UNQ_@89_@FLD_@1 r_@UNQ_@90_@FLD_@2 -> let
                                                                                                         u5_84 = ((mapTree :: {_u ({_u ({_u CA@831 (lzero,CA@971)} -> {_u CA@989 CA@1027}) (lzero,{set {0,1}})} -> {_u ({_u (BinTree (lzero CA@971 lzero lzero lzero lzero lzero lzero) (CA@831)) (lzero,lone)} -> {_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) CA@1013}) CA@848}) lone} x1_@UNQ_@76) :: {_u ({_u (BinTree (lzero CA@971 lzero lzero lzero lzero lzero lzero) (CA@831)) (lzero,lone)} -> {_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) CA@1013}) CA@848} r_@UNQ_@90_@FLD_@2) :: {_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) CA@1013}
                                                                                                       in
                                                                                                         let
                                                                                                           u5_83 = (x1_@UNQ_@76 :: {_u ({_u CA@831 (lzero,CA@971)} -> {_u CA@989 CA@1027}) lone} a_@UNQ_@89_@FLD_@1) :: {_u CA@989 CA@1027}
                                                                                                         in
                                                                                                           let
                                                                                                             u5_81 = ((mapTree :: {_u ({_u ({_u CA@831 (lzero,CA@971)} -> {_u CA@989 CA@1027}) (lzero,{set {0,1}})} -> {_u ({_u (BinTree (lzero CA@971 lzero lzero lzero lzero lzero lzero) (CA@831)) (lzero,lone)} -> {_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) CA@1013}) CA@848}) lone} x1_@UNQ_@76) :: {_u ({_u (BinTree (lzero CA@971 lzero lzero lzero lzero lzero lzero) (CA@831)) (lzero,lone)} -> {_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) CA@1013}) CA@848} l_@UNQ_@88_@FLD_@0) :: {_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) CA@1013}
                                                                                                           in
                                                                                                             let
                                                                                                               u5_78 = (((BinTree :: {_u ({_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) (lzero,lzero)} -> {_u ({_u CA@989 (lzero,lzero)} -> {_u ({_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) (CA@888,lzero)} -> {_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) CA@1013}) lone}) lone}) lone} u5_81) :: {_u ({_u CA@989 (lzero,lzero)} -> {_u ({_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) (CA@888,lzero)} -> {_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) CA@1013}) lone}) lone} u5_83) :: {_u ({_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) (CA@888,lzero)} -> {_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) CA@1013}) lone} u5_84) :: {_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) CA@1013}
                                                                                                             in
                                                                                                               u5_78 :: {_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) CA@1013}
                                   Leaf a_@UNQ_@95_@FLD_@0 -> let
                                                                u5_87 = (x1_@UNQ_@76 :: {_u ({_u CA@831 (lzero,CA@971)} -> {_u CA@989 CA@1027}) lone} a_@UNQ_@95_@FLD_@0) :: {_u CA@989 CA@1027}
                                                              in
                                                                let
                                                                  u5_86 = (Leaf :: {_u ({_u CA@989 (CA@992,CA@5334)} -> {_u (BinTree (CA@992 CA@5334 CA@6025 CA@6019 CA@6020 CA@6022 CA@6023 CA@6024) (CA@989)) CA@1013}) lone} u5_87) :: {_u (BinTree (CA@992 CA@5334 CA@6025 CA@6019 CA@6020 CA@6022 CA@6023 CA@6024) (CA@989)) CA@1013}
                                                                in
                                                                  u5_86 :: {_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) CA@1013}
                                ) :: {_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) CA@1013}
                           ) :: {_u ({_u (BinTree (lzero CA@971 lzero lzero lzero lzero lzero lzero) (CA@831)) (lzero,lone)} -> {_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) CA@1013}) CA@848}
                        ) :: {_u ({_u ({_u CA@831 (lzero,CA@971)} -> {_u CA@989 CA@1027}) (lzero,{set {0,1}})} -> {_u ({_u (BinTree (lzero CA@971 lzero lzero lzero lzero lzero lzero) (CA@831)) (lzero,lone)} -> {_u (BinTree (CA@5335 CA@5334 lzero lzero lzero lzero CA@888 lzero) (CA@989)) CA@1013}) CA@848}) lone}
            in
              let
                n_@NEW_@36_@UNQ_@111_@CCN = (\x1_@NEW_@37_@UNQ_@109 ->
                                               let
                                                 u5_94 = (((- :: {_u ({_u (_'Num (CA@6392 CA@6391 CA@6393 top CA@6395 CA@6402 CA@6403 CA@6406 lone CA@6400 CA@6404 CA@6404 CA@6405 lone top CA@6439 lone CA@6437 CA@6442 CA@6442 CA@6438 lone top CA@6435 CA@6434 lone lone lzero lone lone lzero lone top CA@6375 CA@6376 CA@6424 CA@6420 CA@6420 CA@6422 lone top CA@6377 lone CA@6427 CA@6384 CA@6384 CA@6385 lone top CA@6380 lone CA@6389 lone top top CA@6381 CA@6419 lone CA@6419 CA@6373 CA@6374 CA@6415 CA@6417 top CA@6379 lone CA@6409 lone top CA@6397 CA@6394 CA@6412 CA@6413 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} x1_@NEW_@37_@UNQ_@109) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                               in
                                                 let
                                                   sub_@UNQ_@117 = (genBalancedBinTree :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) CA@1277}) lone} u5_94) :: {_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) CA@1277}
                                                 in
                                                   let
                                                     u5_100 = () :: {_u () lzero}
                                                   in
                                                     (((BinTree :: {_u ({_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) (lzero,lzero)} -> {_u ({_u () (lzero,lzero)} -> {_u ({_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) (lzero,CA@7005)} -> {_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) CA@1277}) lone}) lone}) lone} sub_@UNQ_@117) :: {_u ({_u () (lzero,lzero)} -> {_u ({_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) (lzero,CA@7005)} -> {_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) CA@1277}) lone}) lone} u5_100) :: {_u ({_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) (lzero,CA@7005)} -> {_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) CA@1277}) lone} sub_@UNQ_@117) :: {_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) CA@1277}
                                            ) :: {_u ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) CA@1277}) lzero}
                genBalancedBinTree = (\x1_@UNQ_@109 ->
                                        let
                                          n_@UNQ_@111_@CCN = (n_@NEW_@36_@UNQ_@111_@CCN :: {_u ({_u Int (lzero,lone)} -> {_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) CA@1277}) lone} x1_@UNQ_@109) :: {_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) CA@1277}
                                        in
                                          let
                                            u3_687_0_@UNQ_@119 = (((< :: {_u ({_u (_'Ord (CA@6717 CA@6718 CA@6725 CA@6677 lone CA@6726 CA@6722 CA@6724 lone CA@6723 CA@6721 CA@6721 CA@6683 lone top CA@6682 lone CA@6688 CA@6686 CA@6686 CA@6679 lone top CA@6691 CA@6690 CA@6674 CA@6675 CA@6693 CA@6695 CA@6695 CA@6694 lone top CA@6670 lone CA@6703 CA@6699 CA@6699 CA@6700 lone top CA@6713 CA@6714 CA@6708 CA@6705 CA@6706 CA@6709 CA@6710 top CA@6715 CA@6716 CA@6704 CA@6660 CA@6661 CA@6658 CA@6659 top CA@6711 lone CA@6656 CA@6655 CA@6655 CA@6650 lone top lone lone lzero lone lone lzero lone top CA@6673 CA@6672 CA@6663 CA@6665 CA@6665 CA@6666 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} x1_@UNQ_@109) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
                                          in
                                            let!
                                              u3_687_0_@UNQ_@120_@EVL = u3_687_0_@UNQ_@119 :: {_u Bool top}
                                            in
                                              (case u3_687_0_@UNQ_@120_@EVL :: {_u Bool lone} of
                                                 False -> n_@UNQ_@111_@CCN :: {_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) CA@1277}
                                                 True -> let
                                                           u5_108 = () :: {_u () lzero}
                                                         in
                                                           let
                                                             u5_107 = (Leaf :: {_u ({_u () (lzero,CA@1250)} -> {_u (BinTree (lzero CA@1250 CA@6040 CA@6034 CA@6035 CA@6037 CA@6038 CA@6039) (())) CA@1277}) lone} u5_108) :: {_u (BinTree (lzero CA@1250 CA@6040 CA@6034 CA@6035 CA@6037 CA@6038 CA@6039) (())) CA@1277}
                                                           in
                                                             u5_107 :: {_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) CA@1277}
                                              ) :: {_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) CA@1277}
                                     ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@5388 lzero lzero lzero lzero lzero CA@7005) (())) CA@1277}) lone}
              in
                let
                  mirror = (\x1_@UNQ_@132 ->
                              let!
                                u3_967_0_@UNQ_@136_@EVL = x1_@UNQ_@132 :: {_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) lzero}
                              in
                                (case u3_967_0_@UNQ_@136_@EVL :: {_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) lone} of
                                   BinTree l_@UNQ_@137_@FLD_@0 a_@UNQ_@138_@FLD_@1 r_@UNQ_@139_@FLD_@2 -> let
                                                                                                            u5_118 = (mirror :: {_u ({_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) lzero}) lone} l_@UNQ_@137_@FLD_@0) :: {_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) lzero}
                                                                                                          in
                                                                                                            let
                                                                                                              u5_117 = (mirror :: {_u ({_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) lzero}) lone} r_@UNQ_@139_@FLD_@2) :: {_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) lzero}
                                                                                                            in
                                                                                                              let
                                                                                                                u5_114 = (((BinTree :: {_u ({_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) (lzero,lzero)} -> {_u ({_u CA@1390 (lzero,CA@1387)} -> {_u ({_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) (lzero,lzero)} -> {_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) lzero}) lone}) lone}) lone} u5_117) :: {_u ({_u CA@1390 (lzero,CA@1387)} -> {_u ({_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) (lzero,lzero)} -> {_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) lzero}) lone}) lone} a_@UNQ_@138_@FLD_@1) :: {_u ({_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) (lzero,lzero)} -> {_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) lzero}) lone} u5_118) :: {_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) lzero}
                                                                                                              in
                                                                                                                u5_114 :: {_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) lzero}
                                   Leaf __@UNQ_@143 -> x1_@UNQ_@132 :: {_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) lzero}
                                ) :: {_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) lzero}
                           ) :: {_u ({_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@1463 CA@1464 lzero lzero lzero CA@1387 lzero lzero) (CA@1390)) lzero}) lone}
                in
                  let
                    u5_125 = (genBalancedBinTree :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (BinTree (lzero CA@7010 CA@7011 CA@7012 CA@7013 CA@7008 lzero CA@7005) (())) CA@1277}) lone} 20) :: {_u (BinTree (lzero CA@7010 CA@7011 CA@7012 CA@7013 CA@7008 lzero CA@7005) (())) CA@1277}
                  in
                    let
                      u5_124 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 12) :: {_u Int top}
                    in
                      let
                        u5_123 = (const :: {_u ({_u Int (lzero,lzero)} -> {_u ({_u CA@7320 (CA@7324,CA@7322)} -> {_u Int CA@7325}) lzero}) top} u5_124) :: {_u ({_u CA@7320 (CA@7324,CA@7322)} -> {_u Int CA@7325}) lzero}
                      in
                        let
                          u5_121 = ((mapTree :: {_u ({_u ({_u () (lzero,lzero)} -> {_u Int lzero}) (lzero,{set {0,1}})} -> {_u ({_u (BinTree (lzero lzero lzero lzero lzero lzero lzero lzero) (())) (lzero,lone)} -> {_u (BinTree (lzero CA@6229 CA@6248 CA@6249 CA@6232 CA@6230 lzero lzero) (Int)) lzero}) lone}) lone} u5_123) :: {_u ({_u (BinTree (lzero lzero lzero lzero lzero lzero lzero lzero) (())) (lzero,lone)} -> {_u (BinTree (lzero CA@6229 CA@6248 CA@6249 CA@6232 CA@6230 lzero lzero) (Int)) lzero}) lone} u5_125) :: {_u (BinTree (lzero CA@6229 CA@6248 CA@6249 CA@6232 CA@6230 lzero lzero) (Int)) lzero}
                        in
                          let
                            testTreeHigherOrderMap = (mirror :: {_u ({_u (BinTree (CA@7547 CA@7545 lzero lzero CA@7548 CA@7546 lzero lzero) (Int)) (lzero,{set {1,infty}})} -> {_u (BinTree (CA@7547 CA@7545 lzero lzero CA@7548 CA@7546 lzero lzero) (Int)) lzero}) lone} u5_121) :: {_u (BinTree (CA@7547 CA@7545 lzero lzero CA@7548 CA@7546 lzero lzero) (Int)) lzero}
                          in
                            let
                              u5_136 = (sumTree :: {_u ({_u (BinTree (top lone lzero lzero lzero lone lzero lone) (Int)) (lzero,lone)} -> {_u Int top}) lone} testTreeHigherOrderMap) :: {_u Int top}
                            in
                              let
                                u5_135 = (flatten :: {_u ({_u (BinTree (lzero lzero lzero lzero lzero lzero lzero lzero) (Int)) (lzero,lone)} -> {_u ([] (lzero lzero lzero lzero) (Int)) lzero}) {set {1,infty}}} testTreeHigherOrderMap) :: {_u ([] (lzero lzero lzero lzero) (Int)) lzero}
                              in
                                let
                                  u5_134 = (length :: {_u ({_u ([] (lzero CA@7702 lzero lzero) (Int)) (lzero,lone)} -> {_u Int lzero}) top} u5_135) :: {_u Int lzero}
                                in
                                  let
                                    u5_133 = (countLeafs :: {_u ({_u (BinTree (CA@7585 CA@7584 lzero lzero CA@7586 CA@7583 lzero lone) (Int)) (lzero,lone)} -> {_u Int top}) lone} testTreeHigherOrderMap) :: {_u Int top}
                                  in
                                    let
                                      u5_130 = (((+ :: {_u ({_u (_'Num (CA@7784 CA@7785 CA@7790 top CA@7787 CA@7840 CA@7839 CA@7838 lone CA@7836 CA@7842 CA@7842 CA@7841 lone top CA@7831 lone CA@7826 CA@7828 CA@7828 CA@7825 lone top CA@7822 CA@7821 CA@7791 lone CA@7824 CA@7818 CA@7818 CA@7817 lone top CA@7792 CA@7794 CA@7815 CA@7813 CA@7813 CA@7811 lone top lone lone lzero lone lone lzero lone top CA@7802 lone CA@7850 lone top top CA@7803 CA@7809 lone CA@7809 CA@7800 CA@7799 CA@7806 CA@7805 top CA@7798 lone CA@7851 lone top CA@7789 CA@7788 CA@7855 CA@7854 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_133) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_134) :: {_u Int top}
                                    in
                                      let
                                        testBinTreeHigherOrderMap = (((+ :: {_u ({_u (_'Num (CA@8053 CA@8054 CA@8059 top CA@8056 CA@8109 CA@8108 CA@8107 lone CA@8105 CA@8111 CA@8111 CA@8110 lone top CA@8100 lone CA@8095 CA@8097 CA@8097 CA@8094 lone top CA@8091 CA@8090 CA@8060 lone CA@8093 CA@8087 CA@8087 CA@8086 lone top CA@8061 CA@8063 CA@8084 CA@8082 CA@8082 CA@8080 lone top lone lone lzero lone lone lzero lone top CA@8071 lone CA@8119 lone top top CA@8072 CA@8078 lone CA@8078 CA@8069 CA@8068 CA@8075 CA@8074 top CA@8067 lone CA@8120 lone top CA@8058 CA@8057 CA@8124 CA@8123 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_130) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_136) :: {_u Int top}
                                      in
                                        let
                                          main = ((print :: {_u ({_u (_'Show (CA@8350 CA@8353 lone lone lzero lone top CA@8356 CA@8354 CA@8348 CA@8349 CA@8319 lone CA@8313 CA@8316 CA@8352 CA@8314 CA@8315 CA@8317 CA@8342 CA@8341 CA@8338 CA@8337 CA@8334 CA@8333 CA@8340 CA@8339 CA@8336 CA@8335 CA@8347 CA@8312 CA@8318 CA@8345 lone CA@8344 CA@8346 CA@8329 CA@8322 CA@8327 CA@8323 CA@8328 CA@8325 CA@8330 CA@8324 CA@8331 CA@8326) (Int)) (lone,lone)} -> {_u ({_u Int (lone,lone)} -> {_u (CA@8473 CA@8310) lone}) lone}) top} Show_@DCT_@u95_17_0) :: {_u ({_u Int (lone,lone)} -> {_u (CA@8473 CA@8310) lone}) lone} testBinTreeHigherOrderMap) :: {_u (CA@8473 CA@8310) lone}
                                        in
                                          let
                                            u5_143 = () :: {_u () lzero}
                                          in
                                            let
                                              main = ((ehcRunMain :: {_u ({_u (CA@8473 CA@8472) (lone,lone)} -> {_u ({_u () (lzero,lzero)} -> {_u (CA@8473 CA@8472) lone}) lone}) top} main) :: {_u ({_u () (lzero,lzero)} -> {_u (CA@8473 CA@8472) lone}) lone} u5_143) :: {_u (CA@8473 CA@8472) lone}
                                            in
                                              main :: {_u (CA@8473 CA@8615) lone}
let
  flatten = \x1_@UNQ_@98 ->
              let! u3_553_0_@UNQ_@100_@EVL = x1_@UNQ_@98
              in case u3_553_0_@UNQ_@100_@EVL of
                   BinTree l_@UNQ_@101_@FLD_@0 a_@UNQ_@102_@FLD_@1 r_@UNQ_@103_@FLD_@2 -> let
                                                                                            u5_10 = flatten r_@UNQ_@103_@FLD_@2
                                                                                          in let
                                                                                               u5_8 = : a_@UNQ_@102_@FLD_@1 u5_10
                                                                                             in let
                                                                                                  u5_7 = flatten l_@UNQ_@101_@FLD_@0
                                                                                                in let
                                                                                                     u5_5 = ++ u5_7 u5_8
                                                                                                   in u5_5
                   Leaf a_@UNQ_@107_@FLD_@0 -> let
                                                 u5_11 = : a_@UNQ_@107_@FLD_@0 []
                                               in u5_11
in let
     sumTree = \x1_@UNQ_@121 ->
                 let! u3_847_0_@UNQ_@123_@EVL = x1_@UNQ_@121
                 in case u3_847_0_@UNQ_@123_@EVL of
                      BinTree l_@UNQ_@124_@FLD_@0 x_@UNQ_@125_@FLD_@1 r_@UNQ_@126_@FLD_@2 -> let
                                                                                               u5_25 = sumTree r_@UNQ_@126_@FLD_@2
                                                                                             in let
                                                                                                  u5_24 = sumTree l_@UNQ_@124_@FLD_@0
                                                                                                in let
                                                                                                     u5_21 = + Num_@DCT_@u88_18_0 u5_24 x_@UNQ_@125_@FLD_@1
                                                                                                   in let
                                                                                                        u5_18 = + Num_@DCT_@u88_18_0 u5_21 u5_25
                                                                                                      in u5_18
                      Leaf x_@UNQ_@130_@FLD_@0 -> x_@UNQ_@130_@FLD_@0
   in let
        fact = \n_@UNQ_@60 ->
                 let
                   u3_37_0_@UNQ_@61 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@60 1
                 in let! u3_37_0_@UNQ_@62_@EVL = u3_37_0_@UNQ_@61
                    in case u3_37_0_@UNQ_@62_@EVL of
                         False  -> let
                                     u5_39 = - Num_@DCT_@u88_18_0 n_@UNQ_@60 1
                                   in let
                                        u5_38 = fact u5_39
                                      in let
                                           u5_35 = * Num_@DCT_@u88_18_0 n_@UNQ_@60 u5_38
                                         in u5_35
                         True  -> 1
      in let
           BinTree = \x1_@UNQ_@64 ->
                       \x2_@UNQ_@65 ->
                         \x3_@UNQ_@66 ->
                           BinTree MainOpts.x1_@UNQ_@64 MainOpts.x2_@UNQ_@65 MainOpts.x3_@UNQ_@66
         in let
              countLeafs = \x1_@UNQ_@67 ->
                             let! u3_209_0_@UNQ_@69_@EVL = x1_@UNQ_@67
                             in case u3_209_0_@UNQ_@69_@EVL of
                                  BinTree l_@UNQ_@70_@FLD_@0 u3_242_0_@UNQ_@71_@FLD_@1 r_@UNQ_@72_@FLD_@2 -> let
                                                                                                               u5_65 = countLeafs r_@UNQ_@72_@FLD_@2
                                                                                                             in let
                                                                                                                  u5_64 = countLeafs l_@UNQ_@70_@FLD_@0
                                                                                                                in let
                                                                                                                     u5_61 = + Num_@DCT_@u88_18_0 u5_64 1
                                                                                                                   in let
                                                                                                                        u5_58 = + Num_@DCT_@u88_18_0 u5_61 u5_65
                                                                                                                      in u5_58
                                  Leaf u3_218_0_@UNQ_@75_@FLD_@0 -> 1
            in let
                 Leaf = \x1_@UNQ_@63 ->
                          Leaf MainOpts.x1_@UNQ_@63
               in let
                    mapTree = \x1_@UNQ_@76 ->
                                \x2_@UNQ_@86 ->
                                  let! x2_@UNQ_@87_@EVL = x2_@UNQ_@86
                                  in case x2_@UNQ_@87_@EVL of
                                       BinTree l_@UNQ_@88_@FLD_@0 a_@UNQ_@89_@FLD_@1 r_@UNQ_@90_@FLD_@2 -> let
                                                                                                             u5_84 = mapTree x1_@UNQ_@76 r_@UNQ_@90_@FLD_@2
                                                                                                           in let
                                                                                                                u5_83 = x1_@UNQ_@76 a_@UNQ_@89_@FLD_@1
                                                                                                              in let
                                                                                                                   u5_81 = mapTree x1_@UNQ_@76 l_@UNQ_@88_@FLD_@0
                                                                                                                 in let
                                                                                                                      u5_78 = BinTree u5_81 u5_83 u5_84
                                                                                                                    in u5_78
                                       Leaf a_@UNQ_@95_@FLD_@0 -> let
                                                                    u5_87 = x1_@UNQ_@76 a_@UNQ_@95_@FLD_@0
                                                                  in let
                                                                       u5_86 = Leaf u5_87
                                                                     in u5_86
                  in let
                       n_@NEW_@36_@UNQ_@111_@CCN = \x1_@NEW_@37_@UNQ_@109 ->
                                                     let
                                                       u5_94 = - Num_@DCT_@u88_18_0 x1_@NEW_@37_@UNQ_@109 1
                                                     in let
                                                          sub_@UNQ_@117 = genBalancedBinTree u5_94
                                                        in let
                                                             u5_100 = ()
                                                           in BinTree sub_@UNQ_@117 u5_100 sub_@UNQ_@117
                       genBalancedBinTree = \x1_@UNQ_@109 ->
                                              let
                                                n_@UNQ_@111_@CCN = n_@NEW_@36_@UNQ_@111_@CCN x1_@UNQ_@109
                                              in let
                                                   u3_687_0_@UNQ_@119 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@109 1
                                                 in let! u3_687_0_@UNQ_@120_@EVL = u3_687_0_@UNQ_@119
                                                    in case u3_687_0_@UNQ_@120_@EVL of
                                                         False  -> n_@UNQ_@111_@CCN
                                                         True  -> let
                                                                    u5_108 = ()
                                                                  in let
                                                                       u5_107 = Leaf u5_108
                                                                     in u5_107
                     in let
                          mirror = \x1_@UNQ_@132 ->
                                     let! u3_967_0_@UNQ_@136_@EVL = x1_@UNQ_@132
                                     in case u3_967_0_@UNQ_@136_@EVL of
                                          BinTree l_@UNQ_@137_@FLD_@0 a_@UNQ_@138_@FLD_@1 r_@UNQ_@139_@FLD_@2 -> let
                                                                                                                   u5_118 = mirror l_@UNQ_@137_@FLD_@0
                                                                                                                 in let
                                                                                                                      u5_117 = mirror r_@UNQ_@139_@FLD_@2
                                                                                                                    in let
                                                                                                                         u5_114 = BinTree u5_117 a_@UNQ_@138_@FLD_@1 u5_118
                                                                                                                       in u5_114
                                          Leaf __@UNQ_@143 -> x1_@UNQ_@132
                        in let
                             u5_125 = genBalancedBinTree 20
                           in let
                                u5_124 = fact 12
                              in let
                                   u5_123 = const u5_124
                                 in let
                                      u5_121 = mapTree u5_123 u5_125
                                    in let
                                         testTreeHigherOrderMap = mirror u5_121
                                       in let
                                            u5_136 = sumTree testTreeHigherOrderMap
                                          in let
                                               u5_135 = flatten testTreeHigherOrderMap
                                             in let
                                                  u5_134 = length u5_135
                                                in let
                                                     u5_133 = countLeafs testTreeHigherOrderMap
                                                   in let
                                                        u5_130 = + Num_@DCT_@u88_18_0 u5_133 u5_134
                                                      in let
                                                           testBinTreeHigherOrderMap = + Num_@DCT_@u88_18_0 u5_130 u5_136
                                                         in let
                                                              main = print Show_@DCT_@u95_17_0 testBinTreeHigherOrderMap
                                                            in let
                                                                 u5_143 = ()
                                                               in let
                                                                    main = ehcRunMain main u5_143
                                                                  in main
("opt-let",main)
("opt-let",MainOpts.main)
("opt-let",MainOpts.testBinTreeHigherOrderMap)
("opt-let",MainOpts.u5_130)
("opt-let",MainOpts.u5_133)
("opt-let",MainOpts.u5_134)
("opt-let",MainOpts.u5_135)
("opt-let",MainOpts.u5_136)
("opt-let",MainOpts.testTreeHigherOrderMap)
("opt-let",MainOpts.u5_121)
("opt-let",MainOpts.u5_125)
("opt-let",MainOpts.u5_114)
("opt-let",MainOpts.u5_107)
("opt-let",MainOpts.u3_687_0_@UNQ_@119)
("opt-let",MainOpts.u5_94)
("opt-let",MainOpts.u5_86)
("opt-let",MainOpts.u5_78)
("opt-let",MainOpts.u5_58)
("opt-let",MainOpts.u5_61)
("opt-let",MainOpts.u5_64)
("opt-let",MainOpts.u5_65)
("opt-AltCon",[7_12,7_13])
("opt-let",MainOpts.u5_35)
("opt-let",MainOpts.u5_38)
("opt-let",MainOpts.u5_39)
("opt-let",MainOpts.u3_37_0_@UNQ_@61)
("opt-AltCon",[7_7])
("opt-let",MainOpts.u5_18)
("opt-let",MainOpts.u5_21)
("opt-let",MainOpts.u5_24)
("opt-let",MainOpts.u5_25)
("opt-AltCon",[7_3,7_4,7_5])
("opt-let",MainOpts.u5_11)
("opt-let",MainOpts.u5_5)
("Transformation applied: ",37)
let
  flatten = \x1_@UNQ_@98 ->
              let! u3_553_0_@UNQ_@100_@EVL = x1_@UNQ_@98
              in case u3_553_0_@UNQ_@100_@EVL of
                   BinTree l_@UNQ_@101_@FLD_@0 a_@UNQ_@102_@FLD_@1 r_@UNQ_@103_@FLD_@2 -> let
                                                                                            u5_10 = flatten r_@UNQ_@103_@FLD_@2
                                                                                          in let
                                                                                               u5_8 = : a_@UNQ_@102_@FLD_@1 u5_10
                                                                                             in let
                                                                                                  u5_7 = flatten l_@UNQ_@101_@FLD_@0
                                                                                                in let! u5_5 = ++ u5_7 u5_8
                                                                                                   in u5_5
                   Leaf a_@UNQ_@107_@FLD_@0 -> let! u5_11 = : a_@UNQ_@107_@FLD_@0 []
                                               in u5_11
in let
     sumTree = \x1_@UNQ_@121 ->
                 let! u3_847_0_@UNQ_@123_@EVL = x1_@UNQ_@121
                 in case u3_847_0_@UNQ_@123_@EVL of
                      BinTree l_@UNQ_@124_@FLD_@0 x_@UNQ_@125_@FLD_@1 r_@UNQ_@126_@FLD_@2 -> let! u7_3 = l_@UNQ_@124_@FLD_@0
                                                                                             in let! u7_4 = x_@UNQ_@125_@FLD_@1
                                                                                                in let! u7_5 = r_@UNQ_@126_@FLD_@2
                                                                                                   in let! u5_25 = sumTree r_@UNQ_@126_@FLD_@2
                                                                                                      in let! u5_24 = sumTree l_@UNQ_@124_@FLD_@0
                                                                                                         in let! u5_21 = + Num_@DCT_@u88_18_0 u5_24 x_@UNQ_@125_@FLD_@1
                                                                                                            in let! u5_18 = + Num_@DCT_@u88_18_0 u5_21 u5_25
                                                                                                               in u5_18
                      Leaf x_@UNQ_@130_@FLD_@0 -> let! u7_7 = x_@UNQ_@130_@FLD_@0
                                                  in x_@UNQ_@130_@FLD_@0
   in let
        fact = \n_@UNQ_@60 ->
                 let! u3_37_0_@UNQ_@61 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@60 1
                 in let! u3_37_0_@UNQ_@62_@EVL = u3_37_0_@UNQ_@61
                    in case u3_37_0_@UNQ_@62_@EVL of
                         False  -> let! u5_39 = - Num_@DCT_@u88_18_0 n_@UNQ_@60 1
                                   in let! u5_38 = fact u5_39
                                      in let! u5_35 = * Num_@DCT_@u88_18_0 n_@UNQ_@60 u5_38
                                         in u5_35
                         True  -> 1
      in let
           BinTree = \x1_@UNQ_@64 ->
                       \x2_@UNQ_@65 ->
                         \x3_@UNQ_@66 ->
                           BinTree MainOpts.x1_@UNQ_@64 MainOpts.x2_@UNQ_@65 MainOpts.x3_@UNQ_@66
         in let
              countLeafs = \x1_@UNQ_@67 ->
                             let! u3_209_0_@UNQ_@69_@EVL = x1_@UNQ_@67
                             in case u3_209_0_@UNQ_@69_@EVL of
                                  BinTree l_@UNQ_@70_@FLD_@0 u3_242_0_@UNQ_@71_@FLD_@1 r_@UNQ_@72_@FLD_@2 -> let! u7_12 = l_@UNQ_@70_@FLD_@0
                                                                                                             in let! u7_13 = r_@UNQ_@72_@FLD_@2
                                                                                                                in let! u5_65 = countLeafs r_@UNQ_@72_@FLD_@2
                                                                                                                   in let! u5_64 = countLeafs l_@UNQ_@70_@FLD_@0
                                                                                                                      in let! u5_61 = + Num_@DCT_@u88_18_0 u5_64 1
                                                                                                                         in let! u5_58 = + Num_@DCT_@u88_18_0 u5_61 u5_65
                                                                                                                            in u5_58
                                  Leaf u3_218_0_@UNQ_@75_@FLD_@0 -> 1
            in let
                 Leaf = \x1_@UNQ_@63 ->
                          Leaf MainOpts.x1_@UNQ_@63
               in let
                    mapTree = \x1_@UNQ_@76 ->
                                \x2_@UNQ_@86 ->
                                  let! x2_@UNQ_@87_@EVL = x2_@UNQ_@86
                                  in case x2_@UNQ_@87_@EVL of
                                       BinTree l_@UNQ_@88_@FLD_@0 a_@UNQ_@89_@FLD_@1 r_@UNQ_@90_@FLD_@2 -> let
                                                                                                             u5_84 = mapTree x1_@UNQ_@76 r_@UNQ_@90_@FLD_@2
                                                                                                           in let
                                                                                                                u5_83 = x1_@UNQ_@76 a_@UNQ_@89_@FLD_@1
                                                                                                              in let
                                                                                                                   u5_81 = mapTree x1_@UNQ_@76 l_@UNQ_@88_@FLD_@0
                                                                                                                 in let! u5_78 = BinTree u5_81 u5_83 u5_84
                                                                                                                    in u5_78
                                       Leaf a_@UNQ_@95_@FLD_@0 -> let
                                                                    u5_87 = x1_@UNQ_@76 a_@UNQ_@95_@FLD_@0
                                                                  in let! u5_86 = Leaf u5_87
                                                                     in u5_86
                  in let
                       n_@NEW_@36_@UNQ_@111_@CCN = \x1_@NEW_@37_@UNQ_@109 ->
                                                     let! u5_94 = - Num_@DCT_@u88_18_0 x1_@NEW_@37_@UNQ_@109 1
                                                     in let
                                                          sub_@UNQ_@117 = genBalancedBinTree u5_94
                                                        in let
                                                             u5_100 = ()
                                                           in BinTree sub_@UNQ_@117 u5_100 sub_@UNQ_@117
                       genBalancedBinTree = \x1_@UNQ_@109 ->
                                              let
                                                n_@UNQ_@111_@CCN = n_@NEW_@36_@UNQ_@111_@CCN x1_@UNQ_@109
                                              in let! u3_687_0_@UNQ_@119 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@109 1
                                                 in let! u3_687_0_@UNQ_@120_@EVL = u3_687_0_@UNQ_@119
                                                    in case u3_687_0_@UNQ_@120_@EVL of
                                                         False  -> n_@UNQ_@111_@CCN
                                                         True  -> let
                                                                    u5_108 = ()
                                                                  in let! u5_107 = Leaf u5_108
                                                                     in u5_107
                     in let
                          mirror = \x1_@UNQ_@132 ->
                                     let! u3_967_0_@UNQ_@136_@EVL = x1_@UNQ_@132
                                     in case u3_967_0_@UNQ_@136_@EVL of
                                          BinTree l_@UNQ_@137_@FLD_@0 a_@UNQ_@138_@FLD_@1 r_@UNQ_@139_@FLD_@2 -> let
                                                                                                                   u5_118 = mirror l_@UNQ_@137_@FLD_@0
                                                                                                                 in let
                                                                                                                      u5_117 = mirror r_@UNQ_@139_@FLD_@2
                                                                                                                    in let! u5_114 = BinTree u5_117 a_@UNQ_@138_@FLD_@1 u5_118
                                                                                                                       in u5_114
                                          Leaf __@UNQ_@143 -> x1_@UNQ_@132
                        in let! u5_125 = genBalancedBinTree 20
                           in let
                                u5_124 = fact 12
                              in let
                                   u5_123 = const u5_124
                                 in let! u5_121 = mapTree u5_123 u5_125
                                    in let! testTreeHigherOrderMap = mirror u5_121
                                       in let! u5_136 = sumTree testTreeHigherOrderMap
                                          in let! u5_135 = flatten testTreeHigherOrderMap
                                             in let! u5_134 = length u5_135
                                                in let! u5_133 = countLeafs testTreeHigherOrderMap
                                                   in let! u5_130 = + Num_@DCT_@u88_18_0 u5_133 u5_134
                                                      in let! testBinTreeHigherOrderMap = + Num_@DCT_@u88_18_0 u5_130 u5_136
                                                         in let! main = print Show_@DCT_@u95_17_0 testBinTreeHigherOrderMap
                                                            in let
                                                                 u5_143 = ()
                                                               in let! main = ehcRunMain main u5_143
                                                                  in main

ListInlinedMap:
("TyGam: ",List ->
  Type Error: MainOpts.List dataTgi)
("DataGam: ",List a 0 1 2 3
  MainOpts.Nil 
  MainOpts.Cons {_u a (0,1)} {_u (List (0 1 2 3) (a)) (2,3)})
("num constraints: ",917)
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@1100}, a2_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]}, a_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}})
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@1144}, a2_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]}, a_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}})
("still to do cs",0,30)
("Tys",n_@UNQ_@64 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
u5_59 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
main ->
  {_u (forall {CA@5637,CA@5474} . cs: 0 => (CA@5637 CA@5474)) (lone,lone)}
u5_82 ->
  {_u (forall {} . cs: 1 => Int
           CA@785 U CA@781 == CA@781
      ) (top,lone)}
u5_87 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u3_508_0_@UNQ_@84 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
u5_91 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
u3_400_0_@UNQ_@70_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@406) (CA@388,CA@389)}
a_@UNQ_@60_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@2294) (CA@86,CA@87)}
u5_100 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
u5_43 ->
  {_u (forall {} . cs: 0 => Int) (top,lzero)}
testListInlinedMap ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_64 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
countNodes ->
  {_u (forall {CA@781,CA@785,CA@847,CA@846,CA@855} . cs: 1 => ({_u (List (CA@846 CA@847 CA@781 lone) (CA@855)) (CA@785,lone)} -> {_u Int top})
           CA@785 U CA@781 == CA@781
      ) (lone,lzero)}
u3_384_0_@UNQ_@69_@EVL ->
  {_u (forall {} . cs: 0 => (List (CA@388 CA@389 lzero lzero) (CA@406))) (lone,lomega)}
u5_79 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
genBalancedList ->
  {_u (forall {CA@611} . cs: 7 => ({_u Int (lzero,{set {1,infty}})} -> {_u (List (lzero lzero lzero CA@611) (())) lzero})
           CA@611 > top == top
           CA@611 > {set {1,infty}} == {set {1,infty}}
           CA@611 > lone == lone
           CA@611 > lone == lone
           CA@611 > lzero == lzero
           CA@611 (+) lzero == CA@611
           CA@611 > lzero == lzero
      ) (lone,lone)}
u5_73 ->
  {_u (forall {CA@4303,CA@4301,CA@4304} . cs: 0 => (List (CA@4304 CA@4303 lzero CA@4301) (()))) (lzero,lone)}
sub_@UNQ_@82 ->
  {_u (forall {} . cs: 3 => (List (lzero lzero lzero CA@611) (()))
           CA@611 > lzero == lzero
           CA@611 (+) lzero == CA@611
           CA@611 > lzero == lzero
      ) (lzero,CA@611)}
fact ->
  {_u (forall {} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u Int top})) (lzero,lzero)}
u3_508_0_@UNQ_@85_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
u3_251_0_@UNQ_@66_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
u3_653_0_@UNQ_@88_@EVL ->
  {_u (forall {} . cs: 0 => (List (CA@846 CA@847 CA@781 lone) (CA@855))) (lone,lomega)}
n_@NEW_@21_@UNQ_@76_@CCN ->
  {_u (forall {CA@611} . cs: 7 => ({_u Int (lzero,lone)} -> {_u (List (lzero lzero lzero CA@611) (())) lzero})
           CA@611 > top == top
           CA@611 > {set {1,infty}} == {set {1,infty}}
           CA@611 > lone == lone
           CA@611 > lone == lone
           CA@611 > lzero == lzero
           CA@611 (+) lzero == CA@611
           CA@611 > lzero == lzero
      ) (lzero,lzero)}
u3_677_0_@UNQ_@89_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@855) (CA@846,CA@847)}
u3_251_0_@UNQ_@65 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
u3_75_0_@UNQ_@52_@EVL ->
  {_u (forall {} . cs: 0 => (List (CA@484 CA@461 CA@498 lone) (Int))) (lone,lomega)}
testTreeInlinedMap ->
  {_u (forall {CA@3327,CA@3328} . cs: 0 => (List (CA@3327 CA@3328 lzero lzero) (Int))) (lzero,lomega)}
flatten ->
  {_u (forall {CA@72,CA@87,CA@86,CA@2294} . cs: 1 => ({_u (List (CA@86 CA@87 lzero lzero) (CA@2294)) (lzero,lone)} -> {_u ([] (lzero CA@87 CA@72 lzero) (CA@2294)) top})
           lzero U CA@86 == CA@86
      ) (lone,lone)}
r_@UNQ_@61_@FLD_@1 ->
  {_u (forall {} . cs: 0 => (List (CA@86 CA@87 lzero lzero) (CA@2294))) (lzero,lzero)}
u5_27 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
n_@UNQ_@76_@CCN ->
  {_u (forall {} . cs: 0 => (List (lzero lzero lzero CA@611) (()))) (lzero,{set {0,1}})}
u5_31 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
mapTreeUnitToFac ->
  {_u (forall {CA@388,CA@389,CA@406} . cs: 0 => ({_u (List (CA@388 CA@389 lzero lzero) (CA@406)) (lzero,lone)} -> {_u (List (lzero lzero lzero lzero) (Int)) lzero})) (lone,lone)}
u5_30 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
x1_@UNQ_@67 ->
  {_u (forall {} . cs: 0 => (List (CA@388 CA@389 lzero lzero) (CA@406))) (lzero,lone)}
x1_@UNQ_@86 ->
  {_u (forall {} . cs: 0 => (List (CA@846 CA@847 CA@781 lone) (CA@855))) (CA@785,lone)}
x1_@UNQ_@74 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
x2_@UNQ_@49 ->
  {_u (forall {} . cs: 0 => (List (CA@2 CA@3 CA@6 CA@7) (CA@0))) (CA@6,CA@7)}
x1_@UNQ_@48 ->
  {_u (forall {} . cs: 0 => CA@0) (CA@17,CA@18)}
x1_@UNQ_@50 ->
  {_u (forall {} . cs: 0 => (List (CA@484 CA@461 CA@498 lone) (Int))) (CA@443,lone)}
x1_@UNQ_@57 ->
  {_u (forall {} . cs: 0 => (List (CA@86 CA@87 lzero lzero) (CA@2294))) (lzero,lone)}
Nil ->
  {_u (forall {CA@27,CA@26,CA@25,CA@24,CA@28} . cs: 0 => (List (CA@24 CA@25 CA@26 CA@27) (CA@28))) (top,top)}
u5_15 ->
  {_u (forall {} . cs: 1 => ([] (lzero CA@87 CA@72 lzero) (CA@2294))
           lzero U CA@86 == CA@86
      ) (top,lone)}
u5_49 ->
  {_u (forall {} . cs: 2 => Int
           lzero U CA@484 == CA@484
           lone U CA@461 == CA@461
      ) (top,lone)}
u3_173_0_@UNQ_@59_@EVL ->
  {_u (forall {} . cs: 0 => (List (CA@86 CA@87 lzero lzero) (CA@2294))) (lone,lomega)}
main ->
  {_u (forall {CA@5636} . cs: 0 => (CA@5637 CA@5636)) (lone,lone)}
u5_17 ->
  {_u (forall {} . cs: 0 => ([] (lzero CA@87 CA@72 lzero) (CA@2294))) (top,lzero)}
Cons ->
  {_u (forall {CA@13,CA@17,CA@15,CA@18,CA@7,CA@6,CA@3,CA@2,CA@0} . cs: 2 => ({_u CA@0 (CA@17,CA@18)} -> {_u ({_u (List (CA@2 CA@3 CA@6 CA@7) (CA@0)) (CA@6,CA@7)} -> {_u (List (CA@2 CA@3 CA@6 CA@7) (CA@0)) CA@13}) CA@15})
           CA@15 . CA@2 == CA@17
           CA@15 . CA@3 == CA@18
      ) (top,top)}
r'_@UNQ_@73 ->
  {_u (forall {} . cs: 0 => (List (lzero lzero lzero lzero) (Int))) (lzero,lzero)}
u5_90 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
x1_@NEW_@22_@UNQ_@74 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
u5_93 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_92 ->
  {_u (forall {CA@2367} . cs: 0 => ([] (lzero lzero CA@2367 lzero) (Int))) (top,lone)}
r_@UNQ_@71_@FLD_@1 ->
  {_u (forall {} . cs: 0 => (List (CA@388 CA@389 lzero lzero) (CA@406))) (lzero,lzero)}
r_@UNQ_@54_@FLD_@1 ->
  {_u (forall {} . cs: 0 => (List (CA@484 CA@461 CA@498 lone) (Int))) (CA@498,lone)}
x_@UNQ_@53_@FLD_@0 ->
  {_u (forall {} . cs: 0 => Int) (CA@484,CA@461)}
sumTree ->
  {_u (forall {CA@443,CA@484,CA@498,CA@461} . cs: 4 => ({_u (List (CA@484 CA@461 CA@498 lone) (Int)) (CA@443,lone)} -> {_u Int top})
           lone > CA@461 == CA@461
           CA@443 U CA@498 == CA@498
           lzero U CA@484 == CA@484
           lone U CA@461 == CA@461
      ) (lone,lzero)}
u5_52 ->
  {_u (forall {} . cs: 1 => Int
           CA@443 U CA@498 == CA@498
      ) (top,lone)}
r_@UNQ_@90_@FLD_@1 ->
  {_u (forall {} . cs: 0 => (List (CA@846 CA@847 CA@781 lone) (CA@855))) (CA@781,lone)})
"start optimizing"
let
  Cons = (\x1_@UNQ_@48 ->
            (\x2_@UNQ_@49 ->
               (MainOpts.Cons x1_@UNQ_@48 x2_@UNQ_@49) :: {_u (List (CA@2 CA@3 CA@6 CA@7) (CA@0)) CA@13}
            ) :: {_u ({_u (List (CA@2 CA@3 CA@6 CA@7) (CA@0)) (CA@6,CA@7)} -> {_u (List (CA@2 CA@3 CA@6 CA@7) (CA@0)) CA@13}) CA@15}
         ) :: {_u ({_u CA@0 (CA@17,CA@18)} -> {_u ({_u (List (CA@2 CA@3 CA@6 CA@7) (CA@0)) (CA@6,CA@7)} -> {_u (List (CA@2 CA@3 CA@6 CA@7) (CA@0)) CA@13}) CA@15}) top}
in
  let
    Nil = MainOpts.Nil :: {_u (List (CA@24 CA@25 CA@26 CA@27) (CA@28)) top}
  in
    let
      flatten = (\x1_@UNQ_@57 ->
                   let!
                     u3_173_0_@UNQ_@59_@EVL = x1_@UNQ_@57 :: {_u (List (CA@86 CA@87 lzero lzero) (CA@2294)) lzero}
                   in
                     (case u3_173_0_@UNQ_@59_@EVL :: {_u (List (CA@86 CA@87 lzero lzero) (CA@2294)) lone} of
                        Cons a_@UNQ_@60_@FLD_@0 r_@UNQ_@61_@FLD_@1 -> let
                                                                        u5_17 = (flatten :: {_u ({_u (List (CA@86 CA@87 lzero lzero) (CA@2294)) (lzero,lone)} -> {_u ([] (lzero CA@87 CA@72 lzero) (CA@2294)) top}) lone} r_@UNQ_@61_@FLD_@1) :: {_u ([] (lzero CA@87 CA@72 lzero) (CA@2294)) top}
                                                                      in
                                                                        let
                                                                          u5_15 = ((: :: {_u ({_u CA@2294 (lzero,CA@87)} -> {_u ({_u ([] (lzero CA@87 CA@72 lzero) (CA@2294)) (CA@72,lzero)} -> {_u ([] (lzero CA@87 CA@72 lzero) (CA@2294)) top}) lone}) top} a_@UNQ_@60_@FLD_@0) :: {_u ({_u ([] (lzero CA@87 CA@72 lzero) (CA@2294)) (CA@72,lzero)} -> {_u ([] (lzero CA@87 CA@72 lzero) (CA@2294)) top}) lone} u5_17) :: {_u ([] (lzero CA@87 CA@72 lzero) (CA@2294)) top}
                                                                        in
                                                                          u5_15 :: {_u ([] (lzero CA@87 CA@72 lzero) (CA@2294)) top}
                        Nil -> [] :: {_u ([] (lzero CA@87 CA@72 lzero) (CA@2294)) top}
                     ) :: {_u ([] (lzero CA@87 CA@72 lzero) (CA@2294)) top}
                ) :: {_u ({_u (List (CA@86 CA@87 lzero lzero) (CA@2294)) (lzero,lone)} -> {_u ([] (lzero CA@87 CA@72 lzero) (CA@2294)) top}) lone}
    in
      let
        fact = (\n_@UNQ_@64 ->
                  let
                    u3_251_0_@UNQ_@65 = (((<= :: {_u ({_u (_'Ord (CA@2430 CA@2427 CA@2426 CA@2492 lone CA@2437 CA@2436 CA@2439 lone CA@2441 CA@2435 CA@2435 CA@2434 lone top CA@2449 lone CA@2444 CA@2446 CA@2446 CA@2443 lone top CA@2467 CA@2466 CA@2496 CA@2493 CA@2471 CA@2469 CA@2469 CA@2468 lone top lone lone lzero lone lone lzero lone top CA@2429 CA@2428 CA@2475 CA@2474 CA@2477 CA@2476 CA@2473 top CA@2432 CA@2433 CA@2479 CA@2478 CA@2482 CA@2480 CA@2483 top CA@2491 lone CA@2486 CA@2487 CA@2487 CA@2485 lone top CA@2489 CA@2490 CA@2425 CA@2423 CA@2423 CA@2422 lone top CA@2495 CA@2497 CA@2454 CA@2458 CA@2458 CA@2456 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} n_@UNQ_@64) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
                  in
                    let!
                      u3_251_0_@UNQ_@66_@EVL = u3_251_0_@UNQ_@65 :: {_u Bool top}
                    in
                      (case u3_251_0_@UNQ_@66_@EVL :: {_u Bool lone} of
                         False -> let
                                    u5_31 = (((- :: {_u ({_u (_'Num (CA@2710 CA@2709 CA@2711 top CA@2713 CA@2720 CA@2721 CA@2724 lone CA@2718 CA@2722 CA@2722 CA@2723 lone top CA@2757 lone CA@2755 CA@2760 CA@2760 CA@2756 lone top CA@2753 CA@2752 lone lone lzero lone lone lzero lone top CA@2693 CA@2694 CA@2742 CA@2738 CA@2738 CA@2740 lone top CA@2695 lone CA@2745 CA@2702 CA@2702 CA@2703 lone top CA@2698 lone CA@2707 lone top top CA@2699 CA@2737 lone CA@2737 CA@2691 CA@2692 CA@2733 CA@2735 top CA@2697 lone CA@2727 lone top CA@2715 CA@2712 CA@2730 CA@2731 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@64) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                  in
                                    let
                                      u5_30 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} u5_31) :: {_u Int top}
                                    in
                                      let
                                        u5_27 = (((* :: {_u ({_u (_'Num (CA@3002 CA@3003 CA@3022 top CA@3008 CA@3023 CA@3024 CA@3025 lone CA@3027 CA@3021 CA@3021 CA@3018 lone top CA@3019 lone CA@3011 CA@3016 CA@3016 CA@3012 lone top CA@2980 CA@2982 CA@2957 lone CA@2981 CA@2986 CA@2986 CA@2983 lone top lone lone lzero lone lone lzero lone top CA@2955 lone CA@2962 CA@2964 CA@2964 CA@2959 lone top CA@3004 lone CA@2965 lone top top CA@3000 CA@2993 lone CA@2993 CA@2999 CA@2997 CA@2989 CA@2976 top CA@2998 lone CA@2974 lone top CA@3005 CA@3006 CA@2973 CA@2988 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@64) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_30) :: {_u Int top}
                                      in
                                        u5_27 :: {_u Int top}
                         True -> 1 :: {_u Int top}
                      ) :: {_u Int top}
               ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lzero}
      in
        let
          mapTreeUnitToFac = (\x1_@UNQ_@67 ->
                                let!
                                  u3_384_0_@UNQ_@69_@EVL = x1_@UNQ_@67 :: {_u (List (CA@388 CA@389 lzero lzero) (CA@406)) lzero}
                                in
                                  (case u3_384_0_@UNQ_@69_@EVL :: {_u (List (CA@388 CA@389 lzero lzero) (CA@406)) lone} of
                                     Cons u3_400_0_@UNQ_@70_@FLD_@0 r_@UNQ_@71_@FLD_@1 -> let
                                                                                            r'_@UNQ_@73 = (mapTreeUnitToFac :: {_u ({_u (List (CA@388 CA@389 lzero lzero) (CA@406)) (lzero,lone)} -> {_u (List (lzero lzero lzero lzero) (Int)) lzero}) lone} r_@UNQ_@71_@FLD_@1) :: {_u (List (lzero lzero lzero lzero) (Int)) lzero}
                                                                                          in
                                                                                            let
                                                                                              u5_43 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 12) :: {_u Int top}
                                                                                            in
                                                                                              ((Cons :: {_u ({_u Int (lzero,lzero)} -> {_u ({_u (List (lzero lzero lzero lzero) (Int)) (lzero,lzero)} -> {_u (List (lzero lzero lzero lzero) (Int)) lzero}) lone}) lone} u5_43) :: {_u ({_u (List (lzero lzero lzero lzero) (Int)) (lzero,lzero)} -> {_u (List (lzero lzero lzero lzero) (Int)) lzero}) lone} r'_@UNQ_@73) :: {_u (List (lzero lzero lzero lzero) (Int)) lzero}
                                     Nil -> Nil :: {_u (List (lzero lzero lzero lzero) (Int)) lzero}
                                  ) :: {_u (List (lzero lzero lzero lzero) (Int)) lzero}
                             ) :: {_u ({_u (List (CA@388 CA@389 lzero lzero) (CA@406)) (lzero,lone)} -> {_u (List (lzero lzero lzero lzero) (Int)) lzero}) lone}
        in
          let
            sumTree = (\x1_@UNQ_@50 ->
                         let!
                           u3_75_0_@UNQ_@52_@EVL = x1_@UNQ_@50 :: {_u (List (CA@484 CA@461 CA@498 lone) (Int)) CA@443}
                         in
                           (case u3_75_0_@UNQ_@52_@EVL :: {_u (List (CA@484 CA@461 CA@498 lone) (Int)) lone} of
                              Cons x_@UNQ_@53_@FLD_@0 r_@UNQ_@54_@FLD_@1 -> let
                                                                              u5_52 = (sumTree :: {_u ({_u (List (CA@484 CA@461 CA@498 lone) (Int)) (CA@443,lone)} -> {_u Int top}) lone} r_@UNQ_@54_@FLD_@1) :: {_u Int top}
                                                                            in
                                                                              let
                                                                                u5_49 = (((+ :: {_u ({_u (_'Num (CA@3414 CA@3415 CA@3420 top CA@3417 CA@3470 CA@3469 CA@3468 lone CA@3466 CA@3472 CA@3472 CA@3471 lone top CA@3461 lone CA@3456 CA@3458 CA@3458 CA@3455 lone top CA@3452 CA@3451 CA@3421 lone CA@3454 CA@3448 CA@3448 CA@3447 lone top CA@3422 CA@3424 CA@3445 CA@3443 CA@3443 CA@3441 lone top lone lone lzero CA@461 CA@461 lzero lone top CA@3432 lone CA@3480 lone top top CA@3433 CA@3439 lone CA@3439 CA@3430 CA@3429 CA@3436 CA@3435 top CA@3428 lone CA@3481 lone top CA@3419 CA@3418 CA@3485 CA@3484 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,CA@461)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) CA@461}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,CA@461)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) CA@461}) lone} x_@UNQ_@53_@FLD_@0) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) CA@461} u5_52) :: {_u Int top}
                                                                              in
                                                                                u5_49 :: {_u Int top}
                              Nil -> 0 :: {_u Int top}
                           ) :: {_u Int top}
                      ) :: {_u ({_u (List (CA@484 CA@461 CA@498 lone) (Int)) (CA@443,lone)} -> {_u Int top}) lone}
          in
            let
              n_@NEW_@21_@UNQ_@76_@CCN = (\x1_@NEW_@22_@UNQ_@74 ->
                                            let
                                              u5_59 = (((- :: {_u ({_u (_'Num (CA@3742 CA@3741 CA@3743 top CA@3745 CA@3752 CA@3753 CA@3756 lone CA@3750 CA@3754 CA@3754 CA@3755 lone top CA@3789 lone CA@3787 CA@3792 CA@3792 CA@3788 lone top CA@3785 CA@3784 lone lone lzero lone lone lzero lone top CA@3725 CA@3726 CA@3774 CA@3770 CA@3770 CA@3772 lone top CA@3727 lone CA@3777 CA@3734 CA@3734 CA@3735 lone top CA@3730 lone CA@3739 lone top top CA@3731 CA@3769 lone CA@3769 CA@3723 CA@3724 CA@3765 CA@3767 top CA@3729 lone CA@3759 lone top CA@3747 CA@3744 CA@3762 CA@3763 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} x1_@NEW_@22_@UNQ_@74) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                            in
                                              let
                                                sub_@UNQ_@82 = (genBalancedList :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (List (lzero lzero lzero CA@611) (())) lzero}) lone} u5_59) :: {_u (List (lzero lzero lzero CA@611) (())) lzero}
                                              in
                                                let
                                                  u5_64 = () :: {_u () lzero}
                                                in
                                                  ((Cons :: {_u ({_u () (lzero,lzero)} -> {_u ({_u (List (lzero lzero lzero CA@611) (())) (lzero,CA@611)} -> {_u (List (lzero lzero lzero CA@611) (())) lzero}) lone}) lone} u5_64) :: {_u ({_u (List (lzero lzero lzero CA@611) (())) (lzero,CA@611)} -> {_u (List (lzero lzero lzero CA@611) (())) lzero}) lone} sub_@UNQ_@82) :: {_u (List (lzero lzero lzero CA@611) (())) lzero}
                                         ) :: {_u ({_u Int (lzero,lone)} -> {_u (List (lzero lzero lzero CA@611) (())) lzero}) lzero}
              genBalancedList = (\x1_@UNQ_@74 ->
                                   let
                                     n_@UNQ_@76_@CCN = (n_@NEW_@21_@UNQ_@76_@CCN :: {_u ({_u Int (lzero,lone)} -> {_u (List (lzero lzero lzero CA@611) (())) lzero}) lone} x1_@UNQ_@74) :: {_u (List (lzero lzero lzero CA@611) (())) lzero}
                                   in
                                     let
                                       u3_508_0_@UNQ_@84 = (((< :: {_u ({_u (_'Ord (CA@4067 CA@4068 CA@4075 CA@4027 lone CA@4076 CA@4072 CA@4074 lone CA@4073 CA@4071 CA@4071 CA@4033 lone top CA@4032 lone CA@4038 CA@4036 CA@4036 CA@4029 lone top CA@4041 CA@4040 CA@4024 CA@4025 CA@4043 CA@4045 CA@4045 CA@4044 lone top CA@4020 lone CA@4053 CA@4049 CA@4049 CA@4050 lone top CA@4063 CA@4064 CA@4058 CA@4055 CA@4056 CA@4059 CA@4060 top CA@4065 CA@4066 CA@4054 CA@4010 CA@4011 CA@4008 CA@4009 top CA@4061 lone CA@4006 CA@4005 CA@4005 CA@4000 lone top lone lone lzero lone lone lzero lone top CA@4023 CA@4022 CA@4013 CA@4015 CA@4015 CA@4016 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} x1_@UNQ_@74) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
                                     in
                                       let!
                                         u3_508_0_@UNQ_@85_@EVL = u3_508_0_@UNQ_@84 :: {_u Bool top}
                                       in
                                         (case u3_508_0_@UNQ_@85_@EVL :: {_u Bool lone} of
                                            False -> n_@UNQ_@76_@CCN :: {_u (List (lzero lzero lzero CA@611) (())) lzero}
                                            True -> Nil :: {_u (List (lzero lzero lzero CA@611) (())) lzero}
                                         ) :: {_u (List (lzero lzero lzero CA@611) (())) lzero}
                                ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (List (lzero lzero lzero CA@611) (())) lzero}) lone}
            in
              let
                u5_73 = (genBalancedList :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u (List (CA@4304 CA@4303 lzero CA@4301) (())) lzero}) lone} 20) :: {_u (List (CA@4304 CA@4303 lzero CA@4301) (())) lzero}
              in
                let
                  testTreeInlinedMap = (mapTreeUnitToFac :: {_u ({_u (List (CA@4387 CA@4385 lzero lzero) (())) (lzero,lone)} -> {_u (List (CA@3327 CA@3328 lzero lzero) (Int)) lzero}) lone} u5_73) :: {_u (List (CA@3327 CA@3328 lzero lzero) (Int)) lzero}
                in
                  let
                    countNodes = (\x1_@UNQ_@86 ->
                                    let!
                                      u3_653_0_@UNQ_@88_@EVL = x1_@UNQ_@86 :: {_u (List (CA@846 CA@847 CA@781 lone) (CA@855)) CA@785}
                                    in
                                      (case u3_653_0_@UNQ_@88_@EVL :: {_u (List (CA@846 CA@847 CA@781 lone) (CA@855)) lone} of
                                         Cons u3_677_0_@UNQ_@89_@FLD_@0 r_@UNQ_@90_@FLD_@1 -> let
                                                                                                u5_82 = (countNodes :: {_u ({_u (List (CA@846 CA@847 CA@781 lone) (CA@855)) (CA@785,lone)} -> {_u Int top}) lone} r_@UNQ_@90_@FLD_@1) :: {_u Int top}
                                                                                              in
                                                                                                let
                                                                                                  u5_79 = (((+ :: {_u ({_u (_'Num (CA@4480 CA@4481 CA@4486 top CA@4483 CA@4536 CA@4535 CA@4534 lone CA@4532 CA@4538 CA@4538 CA@4537 lone top CA@4527 lone CA@4522 CA@4524 CA@4524 CA@4521 lone top CA@4518 CA@4517 CA@4487 lone CA@4520 CA@4514 CA@4514 CA@4513 lone top CA@4488 CA@4490 CA@4511 CA@4509 CA@4509 CA@4507 lone top lone lone lzero lone lone lzero lone top CA@4498 lone CA@4546 lone top top CA@4499 CA@4505 lone CA@4505 CA@4496 CA@4495 CA@4502 CA@4501 top CA@4494 lone CA@4547 lone top CA@4485 CA@4484 CA@4551 CA@4550 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} 1) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_82) :: {_u Int top}
                                                                                                in
                                                                                                  u5_79 :: {_u Int top}
                                         Nil -> 1 :: {_u Int top}
                                      ) :: {_u Int top}
                                 ) :: {_u ({_u (List (CA@846 CA@847 CA@781 lone) (CA@855)) (CA@785,lone)} -> {_u Int top}) lone}
                  in
                    let
                      u5_93 = (sumTree :: {_u ({_u (List (lzero lone lzero lone) (Int)) (lzero,lone)} -> {_u Int top}) lone} testTreeInlinedMap) :: {_u Int top}
                    in
                      let
                        u5_92 = (flatten :: {_u ({_u (List (lzero lzero lzero lzero) (Int)) (lzero,lone)} -> {_u ([] (lzero lzero CA@2367 lzero) (Int)) top}) lone} testTreeInlinedMap) :: {_u ([] (lzero lzero CA@2367 lzero) (Int)) top}
                      in
                        let
                          u5_91 = (length :: {_u ({_u ([] (CA@4800 CA@4802 CA@4799 lone) (Int)) (lzero,lone)} -> {_u Int lzero}) top} u5_92) :: {_u Int lzero}
                        in
                          let
                            u5_90 = (countNodes :: {_u ({_u (List (CA@4412 CA@4414 lzero lone) (Int)) (lzero,lone)} -> {_u Int top}) lone} testTreeInlinedMap) :: {_u Int top}
                          in
                            let
                              u5_87 = (((+ :: {_u ({_u (_'Num (CA@4972 CA@4973 CA@4978 top CA@4975 CA@5028 CA@5027 CA@5026 lone CA@5024 CA@5030 CA@5030 CA@5029 lone top CA@5019 lone CA@5014 CA@5016 CA@5016 CA@5013 lone top CA@5010 CA@5009 CA@4979 lone CA@5012 CA@5006 CA@5006 CA@5005 lone top CA@4980 CA@4982 CA@5003 CA@5001 CA@5001 CA@4999 lone top lone lone lzero lone lone lzero lone top CA@4990 lone CA@5038 lone top top CA@4991 CA@4997 lone CA@4997 CA@4988 CA@4987 CA@4994 CA@4993 top CA@4986 lone CA@5039 lone top CA@4977 CA@4976 CA@5043 CA@5042 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_90) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_91) :: {_u Int top}
                            in
                              let
                                testListInlinedMap = (((+ :: {_u ({_u (_'Num (CA@5223 CA@5224 CA@5229 top CA@5226 CA@5279 CA@5278 CA@5277 lone CA@5275 CA@5281 CA@5281 CA@5280 lone top CA@5270 lone CA@5265 CA@5267 CA@5267 CA@5264 lone top CA@5261 CA@5260 CA@5230 lone CA@5263 CA@5257 CA@5257 CA@5256 lone top CA@5231 CA@5233 CA@5254 CA@5252 CA@5252 CA@5250 lone top lone lone lzero lone lone lzero lone top CA@5241 lone CA@5289 lone top top CA@5242 CA@5248 lone CA@5248 CA@5239 CA@5238 CA@5245 CA@5244 top CA@5237 lone CA@5290 lone top CA@5228 CA@5227 CA@5294 CA@5293 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_87) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_93) :: {_u Int top}
                              in
                                let
                                  main = ((print :: {_u ({_u (_'Show (CA@5514 CA@5517 lone lone lzero lone top CA@5520 CA@5518 CA@5512 CA@5513 CA@5483 lone CA@5477 CA@5480 CA@5516 CA@5478 CA@5479 CA@5481 CA@5506 CA@5505 CA@5502 CA@5501 CA@5498 CA@5497 CA@5504 CA@5503 CA@5500 CA@5499 CA@5511 CA@5476 CA@5482 CA@5509 lone CA@5508 CA@5510 CA@5493 CA@5486 CA@5491 CA@5487 CA@5492 CA@5489 CA@5494 CA@5488 CA@5495 CA@5490) (Int)) (lone,lone)} -> {_u ({_u Int (lone,lone)} -> {_u (CA@5637 CA@5474) lone}) lone}) top} Show_@DCT_@u95_17_0) :: {_u ({_u Int (lone,lone)} -> {_u (CA@5637 CA@5474) lone}) lone} testListInlinedMap) :: {_u (CA@5637 CA@5474) lone}
                                in
                                  let
                                    u5_100 = () :: {_u () lzero}
                                  in
                                    let
                                      main = ((ehcRunMain :: {_u ({_u (CA@5637 CA@5636) (lone,lone)} -> {_u ({_u () (lzero,lzero)} -> {_u (CA@5637 CA@5636) lone}) lone}) top} main) :: {_u ({_u () (lzero,lzero)} -> {_u (CA@5637 CA@5636) lone}) lone} u5_100) :: {_u (CA@5637 CA@5636) lone}
                                    in
                                      main :: {_u (CA@5637 CA@5761) lone}
let
  Cons = \x1_@UNQ_@48 ->
           \x2_@UNQ_@49 ->
             Cons MainOpts.x1_@UNQ_@48 MainOpts.x2_@UNQ_@49
in let
     Nil = Nil 
   in let
        flatten = \x1_@UNQ_@57 ->
                    let! u3_173_0_@UNQ_@59_@EVL = x1_@UNQ_@57
                    in case u3_173_0_@UNQ_@59_@EVL of
                         Cons a_@UNQ_@60_@FLD_@0 r_@UNQ_@61_@FLD_@1 -> let
                                                                         u5_17 = flatten r_@UNQ_@61_@FLD_@1
                                                                       in let
                                                                            u5_15 = : a_@UNQ_@60_@FLD_@0 u5_17
                                                                          in u5_15
                         Nil  -> []
      in let
           fact = \n_@UNQ_@64 ->
                    let
                      u3_251_0_@UNQ_@65 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@64 1
                    in let! u3_251_0_@UNQ_@66_@EVL = u3_251_0_@UNQ_@65
                       in case u3_251_0_@UNQ_@66_@EVL of
                            False  -> let
                                        u5_31 = - Num_@DCT_@u88_18_0 n_@UNQ_@64 1
                                      in let
                                           u5_30 = fact u5_31
                                         in let
                                              u5_27 = * Num_@DCT_@u88_18_0 n_@UNQ_@64 u5_30
                                            in u5_27
                            True  -> 1
         in let
              mapTreeUnitToFac = \x1_@UNQ_@67 ->
                                   let! u3_384_0_@UNQ_@69_@EVL = x1_@UNQ_@67
                                   in case u3_384_0_@UNQ_@69_@EVL of
                                        Cons u3_400_0_@UNQ_@70_@FLD_@0 r_@UNQ_@71_@FLD_@1 -> let
                                                                                               r'_@UNQ_@73 = mapTreeUnitToFac r_@UNQ_@71_@FLD_@1
                                                                                             in let
                                                                                                  u5_43 = fact 12
                                                                                                in Cons u5_43 r'_@UNQ_@73
                                        Nil  -> Nil
            in let
                 sumTree = \x1_@UNQ_@50 ->
                             let! u3_75_0_@UNQ_@52_@EVL = x1_@UNQ_@50
                             in case u3_75_0_@UNQ_@52_@EVL of
                                  Cons x_@UNQ_@53_@FLD_@0 r_@UNQ_@54_@FLD_@1 -> let
                                                                                  u5_52 = sumTree r_@UNQ_@54_@FLD_@1
                                                                                in let
                                                                                     u5_49 = + Num_@DCT_@u88_18_0 x_@UNQ_@53_@FLD_@0 u5_52
                                                                                   in u5_49
                                  Nil  -> 0
               in let
                    n_@NEW_@21_@UNQ_@76_@CCN = \x1_@NEW_@22_@UNQ_@74 ->
                                                 let
                                                   u5_59 = - Num_@DCT_@u88_18_0 x1_@NEW_@22_@UNQ_@74 1
                                                 in let
                                                      sub_@UNQ_@82 = genBalancedList u5_59
                                                    in let
                                                         u5_64 = ()
                                                       in Cons u5_64 sub_@UNQ_@82
                    genBalancedList = \x1_@UNQ_@74 ->
                                        let
                                          n_@UNQ_@76_@CCN = n_@NEW_@21_@UNQ_@76_@CCN x1_@UNQ_@74
                                        in let
                                             u3_508_0_@UNQ_@84 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@74 1
                                           in let! u3_508_0_@UNQ_@85_@EVL = u3_508_0_@UNQ_@84
                                              in case u3_508_0_@UNQ_@85_@EVL of
                                                   False  -> n_@UNQ_@76_@CCN
                                                   True  -> Nil
                  in let
                       u5_73 = genBalancedList 20
                     in let
                          testTreeInlinedMap = mapTreeUnitToFac u5_73
                        in let
                             countNodes = \x1_@UNQ_@86 ->
                                            let! u3_653_0_@UNQ_@88_@EVL = x1_@UNQ_@86
                                            in case u3_653_0_@UNQ_@88_@EVL of
                                                 Cons u3_677_0_@UNQ_@89_@FLD_@0 r_@UNQ_@90_@FLD_@1 -> let
                                                                                                        u5_82 = countNodes r_@UNQ_@90_@FLD_@1
                                                                                                      in let
                                                                                                           u5_79 = + Num_@DCT_@u88_18_0 1 u5_82
                                                                                                         in u5_79
                                                 Nil  -> 1
                           in let
                                u5_93 = sumTree testTreeInlinedMap
                              in let
                                   u5_92 = flatten testTreeInlinedMap
                                 in let
                                      u5_91 = length u5_92
                                    in let
                                         u5_90 = countNodes testTreeInlinedMap
                                       in let
                                            u5_87 = + Num_@DCT_@u88_18_0 u5_90 u5_91
                                          in let
                                               testListInlinedMap = + Num_@DCT_@u88_18_0 u5_87 u5_93
                                             in let
                                                  main = print Show_@DCT_@u95_17_0 testListInlinedMap
                                                in let
                                                     u5_100 = ()
                                                   in let
                                                        main = ehcRunMain main u5_100
                                                      in main
("opt-let",main)
("opt-let",MainOpts.main)
("opt-let",MainOpts.testListInlinedMap)
("opt-let",MainOpts.u5_87)
("opt-let",MainOpts.u5_90)
("opt-let",MainOpts.u5_91)
("opt-let",MainOpts.u5_92)
("opt-let",MainOpts.u5_93)
("opt-let",MainOpts.u5_79)
("opt-let",MainOpts.u5_82)
("opt-AltCon",[7_15])
("opt-let",MainOpts.testTreeInlinedMap)
("opt-let",MainOpts.u5_73)
("opt-let",MainOpts.u3_508_0_@UNQ_@84)
("opt-let",MainOpts.u5_59)
("opt-let",MainOpts.u5_49)
("opt-let",MainOpts.u5_52)
("opt-AltCon",[7_9])
("opt-let",MainOpts.u5_27)
("opt-let",MainOpts.u5_30)
("opt-let",MainOpts.u5_31)
("opt-let",MainOpts.u3_251_0_@UNQ_@65)
("opt-let",MainOpts.u5_15)
("Transformation applied: ",23)
let
  Cons = \x1_@UNQ_@48 ->
           \x2_@UNQ_@49 ->
             Cons MainOpts.x1_@UNQ_@48 MainOpts.x2_@UNQ_@49
in let
     Nil = Nil 
   in let
        flatten = \x1_@UNQ_@57 ->
                    let! u3_173_0_@UNQ_@59_@EVL = x1_@UNQ_@57
                    in case u3_173_0_@UNQ_@59_@EVL of
                         Cons a_@UNQ_@60_@FLD_@0 r_@UNQ_@61_@FLD_@1 -> let
                                                                         u5_17 = flatten r_@UNQ_@61_@FLD_@1
                                                                       in let! u5_15 = : a_@UNQ_@60_@FLD_@0 u5_17
                                                                          in u5_15
                         Nil  -> []
      in let
           fact = \n_@UNQ_@64 ->
                    let! u3_251_0_@UNQ_@65 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@64 1
                    in let! u3_251_0_@UNQ_@66_@EVL = u3_251_0_@UNQ_@65
                       in case u3_251_0_@UNQ_@66_@EVL of
                            False  -> let! u5_31 = - Num_@DCT_@u88_18_0 n_@UNQ_@64 1
                                      in let! u5_30 = fact u5_31
                                         in let! u5_27 = * Num_@DCT_@u88_18_0 n_@UNQ_@64 u5_30
                                            in u5_27
                            True  -> 1
         in let
              mapTreeUnitToFac = \x1_@UNQ_@67 ->
                                   let! u3_384_0_@UNQ_@69_@EVL = x1_@UNQ_@67
                                   in case u3_384_0_@UNQ_@69_@EVL of
                                        Cons u3_400_0_@UNQ_@70_@FLD_@0 r_@UNQ_@71_@FLD_@1 -> let
                                                                                               r'_@UNQ_@73 = mapTreeUnitToFac r_@UNQ_@71_@FLD_@1
                                                                                             in let
                                                                                                  u5_43 = fact 12
                                                                                                in Cons u5_43 r'_@UNQ_@73
                                        Nil  -> Nil
            in let
                 sumTree = \x1_@UNQ_@50 ->
                             let! u3_75_0_@UNQ_@52_@EVL = x1_@UNQ_@50
                             in case u3_75_0_@UNQ_@52_@EVL of
                                  Cons x_@UNQ_@53_@FLD_@0 r_@UNQ_@54_@FLD_@1 -> let! u7_9 = r_@UNQ_@54_@FLD_@1
                                                                                in let! u5_52 = sumTree r_@UNQ_@54_@FLD_@1
                                                                                   in let! u5_49 = + Num_@DCT_@u88_18_0 x_@UNQ_@53_@FLD_@0 u5_52
                                                                                      in u5_49
                                  Nil  -> 0
               in let
                    n_@NEW_@21_@UNQ_@76_@CCN = \x1_@NEW_@22_@UNQ_@74 ->
                                                 let! u5_59 = - Num_@DCT_@u88_18_0 x1_@NEW_@22_@UNQ_@74 1
                                                 in let
                                                      sub_@UNQ_@82 = genBalancedList u5_59
                                                    in let
                                                         u5_64 = ()
                                                       in Cons u5_64 sub_@UNQ_@82
                    genBalancedList = \x1_@UNQ_@74 ->
                                        let
                                          n_@UNQ_@76_@CCN = n_@NEW_@21_@UNQ_@76_@CCN x1_@UNQ_@74
                                        in let! u3_508_0_@UNQ_@84 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@74 1
                                           in let! u3_508_0_@UNQ_@85_@EVL = u3_508_0_@UNQ_@84
                                              in case u3_508_0_@UNQ_@85_@EVL of
                                                   False  -> n_@UNQ_@76_@CCN
                                                   True  -> Nil
                  in let! u5_73 = genBalancedList 20
                     in let! testTreeInlinedMap = mapTreeUnitToFac u5_73
                        in let
                             countNodes = \x1_@UNQ_@86 ->
                                            let! u3_653_0_@UNQ_@88_@EVL = x1_@UNQ_@86
                                            in case u3_653_0_@UNQ_@88_@EVL of
                                                 Cons u3_677_0_@UNQ_@89_@FLD_@0 r_@UNQ_@90_@FLD_@1 -> let! u7_15 = r_@UNQ_@90_@FLD_@1
                                                                                                      in let! u5_82 = countNodes r_@UNQ_@90_@FLD_@1
                                                                                                         in let! u5_79 = + Num_@DCT_@u88_18_0 1 u5_82
                                                                                                            in u5_79
                                                 Nil  -> 1
                           in let! u5_93 = sumTree testTreeInlinedMap
                              in let! u5_92 = flatten testTreeInlinedMap
                                 in let! u5_91 = length u5_92
                                    in let! u5_90 = countNodes testTreeInlinedMap
                                       in let! u5_87 = + Num_@DCT_@u88_18_0 u5_90 u5_91
                                          in let! testListInlinedMap = + Num_@DCT_@u88_18_0 u5_87 u5_93
                                             in let! main = print Show_@DCT_@u95_17_0 testListInlinedMap
                                                in let
                                                     u5_100 = ()
                                                   in let! main = ehcRunMain main u5_100
                                                      in main

Fact:
("TyGam: ",)
("DataGam: ",)
("num constraints: ",251)
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("still to do cs",0,0)
("Tys",n_@UNQ_@23 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
main ->
  {_u (forall {CA@1958,CA@1796} . cs: 0 => (CA@1958 CA@1796)) (lone,lone)}
fact ->
  {_u (forall {} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u Int top})) (lzero,lzero)}
u3_37_0_@UNQ_@25_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
u5_21 ->
  {_u (forall {CA@1486,CA@1485} . cs: 0 => ([] (lzero lzero CA@1485 CA@1486) (Int))) (top,lone)}
u5_27 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
u5_9 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u5_13 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
u5_12 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
main ->
  {_u (forall {CA@1957} . cs: 0 => (CA@1958 CA@1957)) (lone,lone)}
u5_19 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
u5_23 ->
  {_u (forall {} . cs: 0 => Int) (top,lzero)}
u3_37_0_@UNQ_@24 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)})
"start optimizing"
let
  fact = (\n_@UNQ_@23 ->
            let
              u3_37_0_@UNQ_@24 = (((<= :: {_u ({_u (_'Ord (CA@633 CA@630 CA@629 CA@695 lone CA@640 CA@639 CA@642 lone CA@644 CA@638 CA@638 CA@637 lone top CA@652 lone CA@647 CA@649 CA@649 CA@646 lone top CA@670 CA@669 CA@699 CA@696 CA@674 CA@672 CA@672 CA@671 lone top lone lone lzero lone lone lzero lone top CA@632 CA@631 CA@678 CA@677 CA@680 CA@679 CA@676 top CA@635 CA@636 CA@682 CA@681 CA@685 CA@683 CA@686 top CA@694 lone CA@689 CA@690 CA@690 CA@688 lone top CA@692 CA@693 CA@628 CA@626 CA@626 CA@625 lone top CA@698 CA@700 CA@657 CA@661 CA@661 CA@659 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} n_@UNQ_@23) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
            in
              let!
                u3_37_0_@UNQ_@25_@EVL = u3_37_0_@UNQ_@24 :: {_u Bool top}
              in
                (case u3_37_0_@UNQ_@25_@EVL :: {_u Bool lone} of
                   False -> let
                              u5_13 = (((- :: {_u ({_u (_'Num (CA@913 CA@912 CA@914 top CA@916 CA@923 CA@924 CA@927 lone CA@921 CA@925 CA@925 CA@926 lone top CA@960 lone CA@958 CA@963 CA@963 CA@959 lone top CA@956 CA@955 lone lone lzero lone lone lzero lone top CA@896 CA@897 CA@945 CA@941 CA@941 CA@943 lone top CA@898 lone CA@948 CA@905 CA@905 CA@906 lone top CA@901 lone CA@910 lone top top CA@902 CA@940 lone CA@940 CA@894 CA@895 CA@936 CA@938 top CA@900 lone CA@930 lone top CA@918 CA@915 CA@933 CA@934 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@23) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                            in
                              let
                                u5_12 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} u5_13) :: {_u Int top}
                              in
                                let
                                  u5_9 = (((* :: {_u ({_u (_'Num (CA@1205 CA@1206 CA@1225 top CA@1211 CA@1226 CA@1227 CA@1228 lone CA@1230 CA@1224 CA@1224 CA@1221 lone top CA@1222 lone CA@1214 CA@1219 CA@1219 CA@1215 lone top CA@1183 CA@1185 CA@1160 lone CA@1184 CA@1189 CA@1189 CA@1186 lone top lone lone lzero lone lone lzero lone top CA@1158 lone CA@1165 CA@1167 CA@1167 CA@1162 lone top CA@1207 lone CA@1168 lone top top CA@1203 CA@1196 lone CA@1196 CA@1202 CA@1200 CA@1192 CA@1179 top CA@1201 lone CA@1177 lone top CA@1208 CA@1209 CA@1176 CA@1191 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} n_@UNQ_@23) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_12) :: {_u Int top}
                                in
                                  u5_9 :: {_u Int top}
                   True -> 1 :: {_u Int top}
                ) :: {_u Int top}
         ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lzero}
in
  let
    u5_23 = (fact :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 12) :: {_u Int top}
  in
    let
      u5_21 = ((replicate :: {_u ({_u Int (lzero,lzero)} -> {_u ({_u Int (lzero,lzero)} -> {_u ([] (lzero lzero CA@1485 CA@1486) (Int)) top}) lzero}) top} 10000000) :: {_u ({_u Int (lzero,lzero)} -> {_u ([] (lzero lzero CA@1485 CA@1486) (Int)) top}) lzero} u5_23) :: {_u ([] (lzero lzero CA@1485 CA@1486) (Int)) top}
    in
      let
        u5_19 = ((sum :: {_u ({_u (_'Num (CA@1611 CA@1605 CA@1609 top CA@1607 CA@1610 CA@1603 CA@1595 lone CA@1599 CA@1593 CA@1593 CA@1592 lone top CA@1600 lone CA@1572 CA@1573 CA@1573 CA@1578 lone top CA@1576 CA@1608 CA@1596 lone CA@1580 CA@1565 CA@1565 CA@1566 lone top CA@1602 CA@1597 CA@1568 CA@1570 CA@1570 CA@1569 lone top top lone lzero lone lone CA@1555 lzero top CA@1551 lone CA@1556 lone top top CA@1549 CA@1561 lone CA@1561 CA@1547 CA@1545 CA@1562 CA@1564 top lone lone lone lzero top CA@1544 CA@1604 CA@1587 CA@1588 top) (Int)) (lzero,top)} -> {_u ({_u ([] (lzero lzero CA@1530 lone) (Int)) (lzero,lone)} -> {_u Int lzero}) top}) top} Num_@DCT_@u88_18_0) :: {_u ({_u ([] (lzero lzero CA@1530 lone) (Int)) (lzero,lone)} -> {_u Int lzero}) top} u5_21) :: {_u Int lzero}
      in
        let
          main = ((print :: {_u ({_u (_'Show (CA@1836 CA@1839 lone lone lzero lone top CA@1842 CA@1840 CA@1834 CA@1835 CA@1805 lone CA@1799 CA@1802 CA@1838 CA@1800 CA@1801 CA@1803 CA@1828 CA@1827 CA@1824 CA@1823 CA@1820 CA@1819 CA@1826 CA@1825 CA@1822 CA@1821 CA@1833 CA@1798 CA@1804 CA@1831 lone CA@1830 CA@1832 CA@1815 CA@1808 CA@1813 CA@1809 CA@1814 CA@1811 CA@1816 CA@1810 CA@1817 CA@1812) (Int)) (lone,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u (CA@1958 CA@1796) lone}) lone}) top} Show_@DCT_@u95_17_0) :: {_u ({_u Int (lzero,lone)} -> {_u (CA@1958 CA@1796) lone}) lone} u5_19) :: {_u (CA@1958 CA@1796) lone}
        in
          let
            u5_27 = () :: {_u () lzero}
          in
            let
              main = ((ehcRunMain :: {_u ({_u (CA@1958 CA@1957) (lone,lone)} -> {_u ({_u () (lzero,lzero)} -> {_u (CA@1958 CA@1957) lone}) lone}) top} main) :: {_u ({_u () (lzero,lzero)} -> {_u (CA@1958 CA@1957) lone}) lone} u5_27) :: {_u (CA@1958 CA@1957) lone}
            in
              main :: {_u (CA@1958 CA@2036) lone}
let
  fact = \n_@UNQ_@23 ->
           let
             u3_37_0_@UNQ_@24 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@23 1
           in let! u3_37_0_@UNQ_@25_@EVL = u3_37_0_@UNQ_@24
              in case u3_37_0_@UNQ_@25_@EVL of
                   False  -> let
                               u5_13 = - Num_@DCT_@u88_18_0 n_@UNQ_@23 1
                             in let
                                  u5_12 = fact u5_13
                                in let
                                     u5_9 = * Num_@DCT_@u88_18_0 n_@UNQ_@23 u5_12
                                   in u5_9
                   True  -> 1
in let
     u5_23 = fact 12
   in let
        u5_21 = replicate 10000000 u5_23
      in let
           u5_19 = sum Num_@DCT_@u88_18_0 u5_21
         in let
              main = print Show_@DCT_@u95_17_0 u5_19
            in let
                 u5_27 = ()
               in let
                    main = ehcRunMain main u5_27
                  in main
("opt-let",main)
("opt-let",MainOpts.main)
("opt-let",MainOpts.u5_19)
("opt-let",MainOpts.u5_21)
("opt-let",MainOpts.u5_9)
("opt-let",MainOpts.u5_12)
("opt-let",MainOpts.u5_13)
("opt-let",MainOpts.u3_37_0_@UNQ_@24)
("Transformation applied: ",8)
let
  fact = \n_@UNQ_@23 ->
           let! u3_37_0_@UNQ_@24 = <= Ord_@DCT_@u81_27_0 n_@UNQ_@23 1
           in let! u3_37_0_@UNQ_@25_@EVL = u3_37_0_@UNQ_@24
              in case u3_37_0_@UNQ_@25_@EVL of
                   False  -> let! u5_13 = - Num_@DCT_@u88_18_0 n_@UNQ_@23 1
                             in let! u5_12 = fact u5_13
                                in let! u5_9 = * Num_@DCT_@u88_18_0 n_@UNQ_@23 u5_12
                                   in u5_9
                   True  -> 1
in let
     u5_23 = fact 12
   in let! u5_21 = replicate 10000000 u5_23
      in let! u5_19 = sum Num_@DCT_@u88_18_0 u5_21
         in let! main = print Show_@DCT_@u95_17_0 u5_19
            in let
                 u5_27 = ()
               in let! main = ehcRunMain main u5_27
                  in main

Fibt:
("TyGam: ",)
("DataGam: ",)
("num constraints: ",329)
("still to do cs",0,0)
("Tys",main ->
  {_u (forall {CA@2090,CA@2281} . cs: 0 => (CA@2281 CA@2090)) (lone,lone)}
u3_43_0_@UNQ_@37_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
u3_37_0_@UNQ_@34_@EVL_@0 ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
x1_@NEW_@2_@UNQ_@29 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
x_@UNQ_@31_@CCN ->
  {_u (forall {} . cs: 0 => Int) (top,{set {0,1}})}
u3_43_0_@UNQ_@36 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
u5_30 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
fibt ->
  {_u (forall {} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u Int top})) (lone,lone)}
u5_9 ->
  {_u (forall {} . cs: 0 => Int) (top,top)}
u5_8 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {0,1}})}
x1_@UNQ_@29 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
u5_13 ->
  {_u (forall {} . cs: 0 => Int) (top,top)}
u5_12 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {0,1}})}
main ->
  {_u (forall {CA@2280} . cs: 0 => (CA@2281 CA@2280)) (lone,lone)}
u5_34 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
x_@NEW_@1_@UNQ_@31_@CCN ->
  {_u (forall {} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u Int top})) (lzero,lzero)}
u3_89_0_@UNQ_@32_@CCN ->
  {_u (forall {} . cs: 0 => Int) (top,{set {0,1}})})
"start optimizing"
let
  x_@NEW_@1_@UNQ_@31_@CCN = (\x1_@NEW_@2_@UNQ_@29 ->
                               let
                                 u5_13 = (((- :: {_u ({_u (_'Num (CA@829 CA@828 CA@830 top CA@832 CA@839 CA@840 CA@843 lone CA@837 CA@841 CA@841 CA@842 lone top CA@876 lone CA@874 CA@879 CA@879 CA@875 lone top CA@872 CA@871 lone lone lzero lone lone lzero lone top CA@812 CA@813 CA@861 CA@857 CA@857 CA@859 lone top CA@814 lone CA@864 CA@821 CA@821 CA@822 lone top CA@817 lone CA@826 lone top top CA@818 CA@856 lone CA@856 CA@810 CA@811 CA@852 CA@854 top CA@816 lone CA@846 lone top CA@834 CA@831 CA@849 CA@850 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} x1_@NEW_@2_@UNQ_@29) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 2) :: {_u Int top}
                               in
                                 let
                                   u5_12 = (fibt :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} u5_13) :: {_u Int top}
                                 in
                                   let
                                     u5_9 = (((- :: {_u ({_u (_'Num (CA@1089 CA@1088 CA@1090 top CA@1092 CA@1099 CA@1100 CA@1103 lone CA@1097 CA@1101 CA@1101 CA@1102 lone top CA@1136 lone CA@1134 CA@1139 CA@1139 CA@1135 lone top CA@1132 CA@1131 lone lone lzero lone lone lzero lone top CA@1072 CA@1073 CA@1121 CA@1117 CA@1117 CA@1119 lone top CA@1074 lone CA@1124 CA@1081 CA@1081 CA@1082 lone top CA@1077 lone CA@1086 lone top top CA@1078 CA@1116 lone CA@1116 CA@1070 CA@1071 CA@1112 CA@1114 top CA@1076 lone CA@1106 lone top CA@1094 CA@1091 CA@1109 CA@1110 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} x1_@NEW_@2_@UNQ_@29) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                   in
                                     let
                                       u5_8 = (fibt :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} u5_9) :: {_u Int top}
                                     in
                                       let
                                         u3_89_0_@UNQ_@32_@CCN = (((+ :: {_u ({_u (_'Num (CA@1331 CA@1332 CA@1337 top CA@1334 CA@1387 CA@1386 CA@1385 lone CA@1383 CA@1389 CA@1389 CA@1388 lone top CA@1378 lone CA@1373 CA@1375 CA@1375 CA@1372 lone top CA@1369 CA@1368 CA@1338 lone CA@1371 CA@1365 CA@1365 CA@1364 lone top CA@1339 CA@1341 CA@1362 CA@1360 CA@1360 CA@1358 lone top lone lone lzero lone lone lzero lone top CA@1349 lone CA@1397 lone top top CA@1350 CA@1356 lone CA@1356 CA@1347 CA@1346 CA@1353 CA@1352 top CA@1345 lone CA@1398 lone top CA@1336 CA@1335 CA@1402 CA@1401 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} u5_8) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} u5_12) :: {_u Int top}
                                       in
                                         let!
                                           u3_37_0_@UNQ_@34_@EVL_@0 = (((== :: {_u ({_u (_'Eq (CA@1583 CA@1581 lone lone lzero lone lone lzero lone top CA@1585 lone CA@1592 CA@1590 CA@1590 CA@1589 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Eq_@DCT_@u81_24_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} 1) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} x1_@NEW_@2_@UNQ_@29) :: {_u Bool top}
                                         in
                                           (case u3_37_0_@UNQ_@34_@EVL_@0 :: {_u Bool lone} of
                                              False -> u3_89_0_@UNQ_@32_@CCN :: {_u Int top}
                                              True -> 1 :: {_u Int top}
                                           ) :: {_u Int top}
                            ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lzero}
  fibt = (\x1_@UNQ_@29 ->
            let
              x_@UNQ_@31_@CCN = (x_@NEW_@1_@UNQ_@31_@CCN :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} x1_@UNQ_@29) :: {_u Int top}
            in
              let
                u3_43_0_@UNQ_@36 = (((< :: {_u ({_u (_'Ord (CA@1747 CA@1748 CA@1755 CA@1707 lone CA@1756 CA@1752 CA@1754 lone CA@1753 CA@1751 CA@1751 CA@1713 lone top CA@1712 lone CA@1718 CA@1716 CA@1716 CA@1709 lone top CA@1721 CA@1720 CA@1704 CA@1705 CA@1723 CA@1725 CA@1725 CA@1724 lone top CA@1700 lone CA@1733 CA@1729 CA@1729 CA@1730 lone top CA@1743 CA@1744 CA@1738 CA@1735 CA@1736 CA@1739 CA@1740 top CA@1745 CA@1746 CA@1734 CA@1690 CA@1691 CA@1688 CA@1689 top CA@1741 lone CA@1686 CA@1685 CA@1685 CA@1680 lone top lone lone lzero lone lone lzero lone top CA@1703 CA@1702 CA@1693 CA@1695 CA@1695 CA@1696 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} x1_@UNQ_@29) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
              in
                let!
                  u3_43_0_@UNQ_@37_@EVL = u3_43_0_@UNQ_@36 :: {_u Bool top}
                in
                  (case u3_43_0_@UNQ_@37_@EVL :: {_u Bool lone} of
                     False -> x_@UNQ_@31_@CCN :: {_u Int top}
                     True -> 0 :: {_u Int top}
                  ) :: {_u Int top}
         ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone}
in
  let
    u5_30 = (fibt :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 30) :: {_u Int top}
  in
    let
      main = ((print :: {_u ({_u (_'Show (CA@2130 CA@2133 lone lone lzero lone top CA@2136 CA@2134 CA@2128 CA@2129 CA@2099 lone CA@2093 CA@2096 CA@2132 CA@2094 CA@2095 CA@2097 CA@2122 CA@2121 CA@2118 CA@2117 CA@2114 CA@2113 CA@2120 CA@2119 CA@2116 CA@2115 CA@2127 CA@2092 CA@2098 CA@2125 lone CA@2124 CA@2126 CA@2109 CA@2102 CA@2107 CA@2103 CA@2108 CA@2105 CA@2110 CA@2104 CA@2111 CA@2106) (Int)) (lone,lone)} -> {_u ({_u Int (lone,lone)} -> {_u (CA@2281 CA@2090) lone}) lone}) top} Show_@DCT_@u95_17_0) :: {_u ({_u Int (lone,lone)} -> {_u (CA@2281 CA@2090) lone}) lone} u5_30) :: {_u (CA@2281 CA@2090) lone}
    in
      let
        u5_34 = () :: {_u () lzero}
      in
        let
          main = ((ehcRunMain :: {_u ({_u (CA@2281 CA@2280) (lone,lone)} -> {_u ({_u () (lzero,lzero)} -> {_u (CA@2281 CA@2280) lone}) lone}) top} main) :: {_u ({_u () (lzero,lzero)} -> {_u (CA@2281 CA@2280) lone}) lone} u5_34) :: {_u (CA@2281 CA@2280) lone}
        in
          main :: {_u (CA@2281 CA@2365) lone}
let
  x_@NEW_@1_@UNQ_@31_@CCN = \x1_@NEW_@2_@UNQ_@29 ->
                              let
                                u5_13 = - Num_@DCT_@u88_18_0 x1_@NEW_@2_@UNQ_@29 2
                              in let
                                   u5_12 = fibt u5_13
                                 in let
                                      u5_9 = - Num_@DCT_@u88_18_0 x1_@NEW_@2_@UNQ_@29 1
                                    in let
                                         u5_8 = fibt u5_9
                                       in let
                                            u3_89_0_@UNQ_@32_@CCN = + Num_@DCT_@u88_18_0 u5_8 u5_12
                                          in let! u3_37_0_@UNQ_@34_@EVL_@0 = == Eq_@DCT_@u81_24_0 1 x1_@NEW_@2_@UNQ_@29
                                             in case u3_37_0_@UNQ_@34_@EVL_@0 of
                                                  False  -> u3_89_0_@UNQ_@32_@CCN
                                                  True  -> 1
  fibt = \x1_@UNQ_@29 ->
           let
             x_@UNQ_@31_@CCN = x_@NEW_@1_@UNQ_@31_@CCN x1_@UNQ_@29
           in let
                u3_43_0_@UNQ_@36 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@29 1
              in let! u3_43_0_@UNQ_@37_@EVL = u3_43_0_@UNQ_@36
                 in case u3_43_0_@UNQ_@37_@EVL of
                      False  -> x_@UNQ_@31_@CCN
                      True  -> 0
in let
     u5_30 = fibt 30
   in let
        main = print Show_@DCT_@u95_17_0 u5_30
      in let
           u5_34 = ()
         in let
              main = ehcRunMain main u5_34
            in main
("opt-let",main)
("opt-let",MainOpts.main)
("opt-let",MainOpts.u5_30)
("opt-let",MainOpts.u3_43_0_@UNQ_@36)
("Transformation applied: ",4)
let
  x_@NEW_@1_@UNQ_@31_@CCN = \x1_@NEW_@2_@UNQ_@29 ->
                              let
                                u5_13 = - Num_@DCT_@u88_18_0 x1_@NEW_@2_@UNQ_@29 2
                              in let
                                   u5_12 = fibt u5_13
                                 in let
                                      u5_9 = - Num_@DCT_@u88_18_0 x1_@NEW_@2_@UNQ_@29 1
                                    in let
                                         u5_8 = fibt u5_9
                                       in let
                                            u3_89_0_@UNQ_@32_@CCN = + Num_@DCT_@u88_18_0 u5_8 u5_12
                                          in let! u3_37_0_@UNQ_@34_@EVL_@0 = == Eq_@DCT_@u81_24_0 1 x1_@NEW_@2_@UNQ_@29
                                             in case u3_37_0_@UNQ_@34_@EVL_@0 of
                                                  False  -> u3_89_0_@UNQ_@32_@CCN
                                                  True  -> 1
  fibt = \x1_@UNQ_@29 ->
           let
             x_@UNQ_@31_@CCN = x_@NEW_@1_@UNQ_@31_@CCN x1_@UNQ_@29
           in let! u3_43_0_@UNQ_@36 = < Ord_@DCT_@u81_27_0 x1_@UNQ_@29 1
              in let! u3_43_0_@UNQ_@37_@EVL = u3_43_0_@UNQ_@36
                 in case u3_43_0_@UNQ_@37_@EVL of
                      False  -> x_@UNQ_@31_@CCN
                      True  -> 0
in let! u5_30 = fibt 30
   in let! main = print Show_@DCT_@u95_17_0 u5_30
      in let
           u5_34 = ()
         in let! main = ehcRunMain main u5_34
            in main

Fibt2:
("TyGam: ",)
("DataGam: ",)
("num constraints: ",288)
("error: no top found testforTop",ConstraintAnn_Cond {a1_ConstraintAnn_Cond = Annotation_Var {v_Annotation_Var = MainOpts.CA@386}, a2_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]}, a_ConstraintAnn_Cond = Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]}})
("still to do cs",0,0)
("Tys",x_@UNQ_@13 ->
  {_u (forall {} . cs: 0 => Int) (lzero,{set {1,infty}})}
main ->
  {_u (forall {CA@1930,CA@2099} . cs: 0 => (CA@2099 CA@1930)) (lone,lone)}
u3_134_0_@UNQ_@27_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)}
fibt ->
  {_u (forall {} . cs: 0 => ({_u Int (lzero,{set {1,infty}})} -> {_u Int top})) (lone,lzero)}
f2_@UNQ_@38 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
f1_@UNQ_@39 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
main ->
  {_u (forall {CA@2098} . cs: 0 => (CA@2099 CA@2098)) (lone,lone)}
u5_33 ->
  {_u (forall {} . cs: 0 => Int) (top,lone)}
u3_@UNQ_@37 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
u4_@UNQ_@32 ->
  {_u (forall {} . cs: 0 => Int) (top,{set {1,infty}})}
u1_@UNQ_@18 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
u2_@UNQ_@25 ->
  {_u (forall {} . cs: 0 => Bool) (top,lone)}
u5_37 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
u3_75_0_@UNQ_@20_@EVL ->
  {_u (forall {} . cs: 0 => Bool) (lone,lomega)})
"start optimizing"
let
  fibt = (\x_@UNQ_@13 ->
            let
              u1_@UNQ_@18 = (((< :: {_u ({_u (_'Ord (CA@780 CA@781 CA@788 CA@740 lone CA@789 CA@785 CA@787 lone CA@786 CA@784 CA@784 CA@746 lone top CA@745 lone CA@751 CA@749 CA@749 CA@742 lone top CA@754 CA@753 CA@737 CA@738 CA@756 CA@758 CA@758 CA@757 lone top CA@733 lone CA@766 CA@762 CA@762 CA@763 lone top CA@776 CA@777 CA@771 CA@768 CA@769 CA@772 CA@773 top CA@778 CA@779 CA@767 CA@723 CA@724 CA@721 CA@722 top CA@774 lone CA@719 CA@718 CA@718 CA@713 lone top lone lone lzero lone lone lzero lone top CA@736 CA@735 CA@726 CA@728 CA@728 CA@729 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Ord_@DCT_@u81_27_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} x_@UNQ_@13) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
            in
              let!
                u3_75_0_@UNQ_@20_@EVL = u1_@UNQ_@18 :: {_u Bool top}
              in
                (case u3_75_0_@UNQ_@20_@EVL :: {_u Bool lone} of
                   False -> let
                              u2_@UNQ_@25 = (((== :: {_u ({_u (_'Eq (CA@992 CA@990 lone lone lzero lone lone lzero lone top CA@994 lone CA@1001 CA@999 CA@999 CA@998 lone top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone}) top} Eq_@DCT_@u81_24_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone}) lone} x_@UNQ_@13) :: {_u ({_u Int (lzero,lone)} -> {_u Bool top}) lone} 1) :: {_u Bool top}
                            in
                              let!
                                u3_134_0_@UNQ_@27_@EVL = u2_@UNQ_@25 :: {_u Bool top}
                              in
                                (case u3_134_0_@UNQ_@27_@EVL :: {_u Bool lone} of
                                   False -> let
                                              u3_@UNQ_@37 = (((- :: {_u ({_u (_'Num (CA@1095 CA@1094 CA@1096 top CA@1098 CA@1105 CA@1106 CA@1109 lone CA@1103 CA@1107 CA@1107 CA@1108 lone top CA@1142 lone CA@1140 CA@1145 CA@1145 CA@1141 lone top CA@1138 CA@1137 lone lone lzero lone lone lzero lone top CA@1078 CA@1079 CA@1127 CA@1123 CA@1123 CA@1125 lone top CA@1080 lone CA@1130 CA@1087 CA@1087 CA@1088 lone top CA@1083 lone CA@1092 lone top top CA@1084 CA@1122 lone CA@1122 CA@1076 CA@1077 CA@1118 CA@1120 top CA@1082 lone CA@1112 lone top CA@1100 CA@1097 CA@1115 CA@1116 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} x_@UNQ_@13) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 1) :: {_u Int top}
                                            in
                                              let
                                                f1_@UNQ_@39 = (fibt :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} u3_@UNQ_@37) :: {_u Int top}
                                              in
                                                let
                                                  u4_@UNQ_@32 = (((- :: {_u ({_u (_'Num (CA@1347 CA@1346 CA@1348 top CA@1350 CA@1357 CA@1358 CA@1361 lone CA@1355 CA@1359 CA@1359 CA@1360 lone top CA@1394 lone CA@1392 CA@1397 CA@1397 CA@1393 lone top CA@1390 CA@1389 lone lone lzero lone lone lzero lone top CA@1330 CA@1331 CA@1379 CA@1375 CA@1375 CA@1377 lone top CA@1332 lone CA@1382 CA@1339 CA@1339 CA@1340 lone top CA@1335 lone CA@1344 lone top top CA@1336 CA@1374 lone CA@1374 CA@1328 CA@1329 CA@1370 CA@1372 top CA@1334 lone CA@1364 lone top CA@1352 CA@1349 CA@1367 CA@1368 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} x_@UNQ_@13) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} 2) :: {_u Int top}
                                                in
                                                  let
                                                    f2_@UNQ_@38 = (fibt :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} u4_@UNQ_@32) :: {_u Int top}
                                                  in
                                                    (((+ :: {_u ({_u (_'Num (CA@1580 CA@1581 CA@1586 top CA@1583 CA@1636 CA@1635 CA@1634 lone CA@1632 CA@1638 CA@1638 CA@1637 lone top CA@1627 lone CA@1622 CA@1624 CA@1624 CA@1621 lone top CA@1618 CA@1617 CA@1587 lone CA@1620 CA@1614 CA@1614 CA@1613 lone top CA@1588 CA@1590 CA@1611 CA@1609 CA@1609 CA@1607 lone top lone lone lzero lone lone lzero lone top CA@1598 lone CA@1646 lone top top CA@1599 CA@1605 lone CA@1605 CA@1596 CA@1595 CA@1602 CA@1601 top CA@1594 lone CA@1647 lone top CA@1585 CA@1584 CA@1651 CA@1650 top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (lzero,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone}) lone} f1_@UNQ_@39) :: {_u ({_u Int (lzero,lone)} -> {_u Int top}) lone} f2_@UNQ_@38) :: {_u Int top}
                                   True -> 1 :: {_u Int top}
                                ) :: {_u Int top}
                   True -> 0 :: {_u Int top}
                ) :: {_u Int top}
         ) :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone}
in
  let
    u5_33 = (fibt :: {_u ({_u Int (lzero,{set {1,infty}})} -> {_u Int top}) lone} 30) :: {_u Int top}
  in
    let
      main = ((print :: {_u ({_u (_'Show (CA@1970 CA@1973 lone lone lzero lone top CA@1976 CA@1974 CA@1968 CA@1969 CA@1939 lone CA@1933 CA@1936 CA@1972 CA@1934 CA@1935 CA@1937 CA@1962 CA@1961 CA@1958 CA@1957 CA@1954 CA@1953 CA@1960 CA@1959 CA@1956 CA@1955 CA@1967 CA@1932 CA@1938 CA@1965 lone CA@1964 CA@1966 CA@1949 CA@1942 CA@1947 CA@1943 CA@1948 CA@1945 CA@1950 CA@1944 CA@1951 CA@1946) (Int)) (lone,lone)} -> {_u ({_u Int (lone,lone)} -> {_u (CA@2099 CA@1930) lone}) lone}) top} Show_@DCT_@u95_17_0) :: {_u ({_u Int (lone,lone)} -> {_u (CA@2099 CA@1930) lone}) lone} u5_33) :: {_u (CA@2099 CA@1930) lone}
    in
      let
        u5_37 = () :: {_u () lzero}
      in
        let
          main = ((ehcRunMain :: {_u ({_u (CA@2099 CA@2098) (lone,lone)} -> {_u ({_u () (lzero,lzero)} -> {_u (CA@2099 CA@2098) lone}) lone}) top} main) :: {_u ({_u () (lzero,lzero)} -> {_u (CA@2099 CA@2098) lone}) lone} u5_37) :: {_u (CA@2099 CA@2098) lone}
        in
          main :: {_u (CA@2099 CA@2172) lone}
let
  fibt = \x_@UNQ_@13 ->
           let
             u1_@UNQ_@18 = < Ord_@DCT_@u81_27_0 x_@UNQ_@13 1
           in let! u3_75_0_@UNQ_@20_@EVL = u1_@UNQ_@18
              in case u3_75_0_@UNQ_@20_@EVL of
                   False  -> let
                               u2_@UNQ_@25 = == Eq_@DCT_@u81_24_0 x_@UNQ_@13 1
                             in let! u3_134_0_@UNQ_@27_@EVL = u2_@UNQ_@25
                                in case u3_134_0_@UNQ_@27_@EVL of
                                     False  -> let
                                                 u3_@UNQ_@37 = - Num_@DCT_@u88_18_0 x_@UNQ_@13 1
                                               in let
                                                    f1_@UNQ_@39 = fibt u3_@UNQ_@37
                                                  in let
                                                       u4_@UNQ_@32 = - Num_@DCT_@u88_18_0 x_@UNQ_@13 2
                                                     in let
                                                          f2_@UNQ_@38 = fibt u4_@UNQ_@32
                                                        in + Num_@DCT_@u88_18_0 f1_@UNQ_@39 f2_@UNQ_@38
                                     True  -> 1
                   True  -> 0
in let
     u5_33 = fibt 30
   in let
        main = print Show_@DCT_@u95_17_0 u5_33
      in let
           u5_37 = ()
         in let
              main = ehcRunMain main u5_37
            in main
("opt-let",main)
("opt-let",MainOpts.main)
("opt-let",MainOpts.u5_33)
("opt-let",MainOpts.f2_@UNQ_@38)
("opt-let",MainOpts.u4_@UNQ_@32)
("opt-let",MainOpts.f1_@UNQ_@39)
("opt-let",MainOpts.u3_@UNQ_@37)
("opt-let",MainOpts.u2_@UNQ_@25)
("opt-let",MainOpts.u1_@UNQ_@18)
("Transformation applied: ",9)
let
  fibt = \x_@UNQ_@13 ->
           let! u1_@UNQ_@18 = < Ord_@DCT_@u81_27_0 x_@UNQ_@13 1
           in let! u3_75_0_@UNQ_@20_@EVL = u1_@UNQ_@18
              in case u3_75_0_@UNQ_@20_@EVL of
                   False  -> let! u2_@UNQ_@25 = == Eq_@DCT_@u81_24_0 x_@UNQ_@13 1
                             in let! u3_134_0_@UNQ_@27_@EVL = u2_@UNQ_@25
                                in case u3_134_0_@UNQ_@27_@EVL of
                                     False  -> let! u3_@UNQ_@37 = - Num_@DCT_@u88_18_0 x_@UNQ_@13 1
                                               in let! f1_@UNQ_@39 = fibt u3_@UNQ_@37
                                                  in let! u4_@UNQ_@32 = - Num_@DCT_@u88_18_0 x_@UNQ_@13 2
                                                     in let! f2_@UNQ_@38 = fibt u4_@UNQ_@32
                                                        in + Num_@DCT_@u88_18_0 f1_@UNQ_@39 f2_@UNQ_@38
                                     True  -> 1
                   True  -> 0
in let! u5_33 = fibt 30
   in let! main = print Show_@DCT_@u95_17_0 u5_33
      in let
           u5_37 = ()
         in let! main = ehcRunMain main u5_37
            in main

Lists:
("TyGam: ",)
("DataGam: ",)
("num constraints: ",103)
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("still to do cs",0,4)
("Tys",f ->
  {_u (forall {CA@2,CA@0} . cs: 0 => ({_u CA@0 (CA@2,lone)} -> {_u CA@0 CA@2})) (top,top)}
h ->
  {_u (forall {CA@356,CA@344,CA@92} . cs: 1 => ({_u ([] (CA@356 lone CA@344 lone) (Int)) (CA@92,lone)} -> {_u Int lzero})
           lzero U CA@92 == CA@92
      ) (top,top)}
g ->
  {_u (forall {CA@298,CA@295,CA@296,CA@15,CA@294} . cs: 1 => ({_u ([] (CA@298 CA@296 CA@295 lone) (CA@294)) (CA@15,lone)} -> {_u Int lzero})
           lzero U CA@15 == CA@15
      ) (top,top)}
xs_@UNQ_@8 ->
  {_u (forall {} . cs: 0 => ([] (CA@298 CA@296 CA@295 lone) (CA@294))) (CA@15,lone)}
xs_@UNQ_@6 ->
  {_u (forall {} . cs: 0 => CA@0) (CA@2,lone)}
xs_@UNQ_@7 ->
  {_u (forall {} . cs: 0 => ([] (CA@356 lone CA@344 lone) (Int))) (CA@92,lone)}
u5_13 ->
  {_u (forall {} . cs: 1 => ([] (CA@356 lone CA@344 lone) (Int))
           lzero U CA@92 == CA@92
      ) (lzero,lone)}
u5_7 ->
  {_u (forall {} . cs: 1 => ([] (CA@298 CA@296 CA@295 lone) (CA@294))
           lzero U CA@15 == CA@15
      ) (lzero,lone)})
"start optimizing"
let
  f = (\xs_@UNQ_@6 ->
         xs_@UNQ_@6 :: {_u CA@0 CA@2}
      ) :: {_u ({_u CA@0 (CA@2,lone)} -> {_u CA@0 CA@2}) top}
in
  let
    g = (\xs_@UNQ_@8 ->
           let
             u5_7 = (f :: {_u ({_u ([] (CA@298 CA@296 CA@295 lone) (CA@294)) (lzero,lone)} -> {_u ([] (CA@298 CA@296 CA@295 lone) (CA@294)) lzero}) lone} xs_@UNQ_@8) :: {_u ([] (CA@298 CA@296 CA@295 lone) (CA@294)) lzero}
           in
             (length :: {_u ({_u ([] (CA@298 CA@296 CA@295 lone) (CA@294)) (lzero,lone)} -> {_u Int lzero}) top} u5_7) :: {_u Int lzero}
        ) :: {_u ({_u ([] (CA@298 CA@296 CA@295 lone) (CA@294)) (CA@15,lone)} -> {_u Int lzero}) top}
  in
    let
      h = (\xs_@UNQ_@7 ->
             let
               u5_13 = (f :: {_u ({_u ([] (CA@356 lone CA@344 lone) (Int)) (lzero,lone)} -> {_u ([] (CA@356 lone CA@344 lone) (Int)) lzero}) lone} xs_@UNQ_@7) :: {_u ([] (CA@356 lone CA@344 lone) (Int)) lzero}
             in
               ((sum :: {_u ({_u (_'Num (CA@413 CA@407 CA@411 top CA@409 CA@412 CA@405 CA@397 lone CA@401 CA@395 CA@395 CA@394 lone top CA@402 lone CA@374 CA@375 CA@375 CA@380 lone top CA@378 CA@410 CA@398 lone CA@382 CA@367 CA@367 CA@368 lone top CA@404 CA@399 CA@370 CA@372 CA@372 CA@371 lone top top lone lzero lone lone CA@357 lone top CA@353 lone CA@358 lone top top CA@351 CA@363 lone CA@363 CA@349 CA@347 CA@364 CA@366 top lone lone lone lzero top CA@346 CA@406 CA@389 CA@390 top) (Int)) (lzero,top)} -> {_u ({_u ([] (CA@356 lone CA@344 lone) (Int)) (lzero,lone)} -> {_u Int lzero}) top}) top} Num_@DCT_@u88_18_0) :: {_u ({_u ([] (CA@356 lone CA@344 lone) (Int)) (lzero,lone)} -> {_u Int lzero}) top} u5_13) :: {_u Int lzero}
          ) :: {_u ({_u ([] (CA@356 lone CA@344 lone) (Int)) (CA@92,lone)} -> {_u Int lzero}) top}
    in
      0 :: {_u Int CA@106}
let
  f = \xs_@UNQ_@6 ->
        xs_@UNQ_@6
in let
     g = \xs_@UNQ_@8 ->
           let
             u5_7 = f xs_@UNQ_@8
           in length u5_7
   in let
        h = \xs_@UNQ_@7 ->
              let
                u5_13 = f xs_@UNQ_@7
              in sum Num_@DCT_@u88_18_0 u5_13
      in 0
("opt-let",MainOpts.u5_13)
("opt-let",MainOpts.u5_7)
("Transformation applied: ",2)
let
  f = \xs_@UNQ_@6 ->
        xs_@UNQ_@6
in let
     g = \xs_@UNQ_@8 ->
           let! u5_7 = f xs_@UNQ_@8
           in length u5_7
   in let
        h = \xs_@UNQ_@7 ->
              let! u5_13 = f xs_@UNQ_@7
              in sum Num_@DCT_@u88_18_0 u5_13
      in 0
compilation run
No 'main' defined:

Map:
("TyGam: ",)
("DataGam: ",)
("num constraints: ",248)
("error eqann top not equal",{0} == {0,1,2})
("error eqann top not equal",{0} == {0,1,2})
("error eqann top not equal",{0} == {0,1,2})
("error eqann top not equal",{0,1} == {0,1,2})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("still to do cs",0,21)
("Tys",main ->
  {_u (forall {CA@1709,CA@1547} . cs: 0 => (CA@1709 CA@1547)) (lone,lone)}
xs_@UNQ_@37_@FLD_@1 ->
  {_u (forall {} . cs: 0 => ([] (lzero lzero lzero {set {0,1}}) (CA@35))) (lzero,{set {0,1}})}
mapm ->
  {_u (forall {CA@93,CA@127,CA@129,CA@130,CA@107,CA@32,CA@2,CA@47,CA@35} . cs: 11 => ({_u ({_u CA@35 (lzero,CA@32)} -> {_u CA@47 CA@93}) (CA@129,CA@130)} -> {_u ({_u ([] (lzero lzero lzero {set {0,1}}) (CA@35)) (CA@2,lone)} -> {_u ([] (lzero lzero lzero CA@107) (CA@47)) top}) CA@127})
           lone > CA@107 == CA@107
           CA@107 > lzero == lzero
           CA@107 > lone == {set {0,1}}
           CA@107 > top == top
           CA@107 > top == top
           CA@127 . top == CA@129
           CA@127 . top == CA@130
           CA@107 > lzero == lzero
           CA@107 (+) lzero == CA@107
           CA@107 > lzero == lzero
           lzero U CA@93 == CA@93
      ) (lone,lone)}
x_@UNQ_@36_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@35) (lzero,lzero)}
x2_@UNQ_@35_@EVL ->
  {_u (forall {} . cs: 0 => ([] (lzero lzero lzero {set {0,1}}) (CA@35))) (lone,lomega)}
u5_20 ->
  {_u (forall {} . cs: 0 => ([] (top top top top) (Int))) (lzero,lone)}
u5_26 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
u5_9 ->
  {_u (forall {} . cs: 0 => CA@47) (CA@93,lzero)}
x2_@UNQ_@34 ->
  {_u (forall {} . cs: 0 => ([] (lzero lzero lzero {set {0,1}}) (CA@35))) (CA@2,lone)}
x1_@UNQ_@24 ->
  {_u (forall {} . cs: 0 => ({_u CA@35 (lzero,CA@32)} -> {_u CA@47 CA@93})) (CA@129,CA@130)}
u5_15 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
main ->
  {_u (forall {CA@1708} . cs: 0 => (CA@1709 CA@1708)) (lone,lone)}
u5_17 ->
  {_u (forall {CA@767} . cs: 0 => ([] (lzero lzero lzero CA@767) (Int))) (top,lone)}
u5_19 ->
  {_u (forall {CA@1001} . cs: 0 => ({_u Int (lzero,CA@1001)} -> {_u Int top})) (top,top)}
u5_7 ->
  {_u (forall {CA@107} . cs: 1 => ([] (lzero lzero lzero CA@107) (CA@47))
           lzero U CA@93 == CA@93
      ) (top,lone)}
u5_10 ->
  {_u (forall {CA@621,CA@622,CA@620,CA@618} . cs: 3 => ([] (CA@620 CA@622 CA@621 CA@618) (CA@47))
           CA@107 > lzero == lzero
           CA@107 (+) lzero == CA@107
           CA@107 > lzero == lzero
      ) (lzero,CA@107)})
"start optimizing"
let
  mapm = (\x1_@UNQ_@24 ->
            (\x2_@UNQ_@34 ->
               let!
                 x2_@UNQ_@35_@EVL = x2_@UNQ_@34 :: {_u ([] (lzero lzero lzero {set {0,1}}) (CA@35)) CA@2}
               in
                 (case x2_@UNQ_@35_@EVL :: {_u ([] (lzero lzero lzero {set {0,1}}) (CA@35)) lone} of
                    : x_@UNQ_@36_@FLD_@0 xs_@UNQ_@37_@FLD_@1 -> let
                                                                  u5_10 = ((map :: {_u ({_u ({_u CA@35 (lzero,CA@32)} -> {_u CA@47 CA@93}) (top,top)} -> {_u ({_u ([] (lzero lzero lzero {set {0,1}}) (CA@35)) (lzero,lone)} -> {_u ([] (CA@620 CA@622 CA@621 CA@618) (CA@47)) lzero}) {set {0,1}}}) top} x1_@UNQ_@24) :: {_u ({_u ([] (lzero lzero lzero {set {0,1}}) (CA@35)) (lzero,lone)} -> {_u ([] (CA@620 CA@622 CA@621 CA@618) (CA@47)) lzero}) {set {0,1}}} xs_@UNQ_@37_@FLD_@1) :: {_u ([] (CA@620 CA@622 CA@621 CA@618) (CA@47)) lzero}
                                                                in
                                                                  let
                                                                    u5_9 = (x1_@UNQ_@24 :: {_u ({_u CA@35 (lzero,CA@32)} -> {_u CA@47 CA@93}) lone} x_@UNQ_@36_@FLD_@0) :: {_u CA@47 CA@93}
                                                                  in
                                                                    let
                                                                      u5_7 = ((: :: {_u ({_u CA@47 (lzero,lzero)} -> {_u ({_u ([] (lzero lzero lzero CA@107) (CA@47)) (lzero,CA@107)} -> {_u ([] (lzero lzero lzero CA@107) (CA@47)) top}) lone}) top} u5_9) :: {_u ({_u ([] (lzero lzero lzero CA@107) (CA@47)) (lzero,CA@107)} -> {_u ([] (lzero lzero lzero CA@107) (CA@47)) top}) lone} u5_10) :: {_u ([] (lzero lzero lzero CA@107) (CA@47)) top}
                                                                    in
                                                                      u5_7 :: {_u ([] (lzero lzero lzero CA@107) (CA@47)) top}
                    [] -> [] :: {_u ([] (lzero lzero lzero CA@107) (CA@47)) top}
                 ) :: {_u ([] (lzero lzero lzero CA@107) (CA@47)) top}
            ) :: {_u ({_u ([] (lzero lzero lzero {set {0,1}}) (CA@35)) (CA@2,lone)} -> {_u ([] (lzero lzero lzero CA@107) (CA@47)) top}) CA@127}
         ) :: {_u ({_u ({_u CA@35 (lzero,CA@32)} -> {_u CA@47 CA@93}) (CA@129,CA@130)} -> {_u ({_u ([] (lzero lzero lzero {set {0,1}}) (CA@35)) (CA@2,lone)} -> {_u ([] (lzero lzero lzero CA@107) (CA@47)) top}) CA@127}) lone}
in
  let
    u5_20 = (((enumFromTo :: {_u ({_u (_'Enum (CA@833 CA@827 lone lone lzero top lone lzero {set {0,1}} {set {0,1}} CA@835 CA@836 CA@821 CA@820 top top lone lzero lone lzero lone lone lzero lzero top CA@834 lone lzero CA@815 top lone lone lzero lzero lone lzero {set {0,1}} lzero top lone lzero lone lzero lone lone lzero top lone lzero top top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lzero)} -> {_u ({_u Int (lzero,{set {0,1}})} -> {_u ([] (top top top top) (Int)) lzero}) lone}) lone}) top} Enum_@DCT_@u88_35_0) :: {_u ({_u Int (lzero,lzero)} -> {_u ({_u Int (lzero,{set {0,1}})} -> {_u ([] (top top top top) (Int)) lzero}) lone}) lone} 1) :: {_u ({_u Int (lzero,{set {0,1}})} -> {_u ([] (top top top top) (Int)) lzero}) lone} 1000000) :: {_u ([] (top top top top) (Int)) lzero}
  in
    let
      u5_19 = (succ :: {_u ({_u (_'Enum (CA@998 CA@999 lone lone lzero top lone lzero {set {0,1}} {set {0,1}} CA@994 CA@993 CA@997 CA@996 top top lone lzero lone lzero lone lone lzero lzero top top lone lzero CA@1001 top lone lone lzero lzero lone lzero {set {0,1}} lzero top lone lzero lone lzero lone lone lzero top lone lzero top top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,CA@1001)} -> {_u Int top}) top}) top} Enum_@DCT_@u88_35_0) :: {_u ({_u Int (lzero,CA@1001)} -> {_u Int top}) top}
    in
      let
        u5_17 = ((mapm :: {_u ({_u ({_u Int (lzero,lzero)} -> {_u Int top}) (top,top)} -> {_u ({_u ([] (lzero lzero lzero {set {0,1}}) (Int)) (lzero,lone)} -> {_u ([] (lzero lzero lzero CA@767) (Int)) top}) lone}) lone} u5_19) :: {_u ({_u ([] (lzero lzero lzero {set {0,1}}) (Int)) (lzero,lone)} -> {_u ([] (lzero lzero lzero CA@767) (Int)) top}) lone} u5_20) :: {_u ([] (lzero lzero lzero CA@767) (Int)) top}
      in
        let
          u5_15 = ((sum :: {_u ({_u (_'Num (CA@1348 CA@1342 CA@1346 top CA@1344 CA@1347 CA@1340 CA@1332 lone CA@1336 CA@1330 CA@1330 CA@1329 lone top CA@1337 lone CA@1309 CA@1310 CA@1310 CA@1315 lone top CA@1313 CA@1345 CA@1333 lone CA@1317 CA@1302 CA@1302 CA@1303 lone top CA@1339 CA@1334 CA@1305 CA@1307 CA@1307 CA@1306 lone top top lone lzero lone lone CA@1292 lone top CA@1288 lone CA@1293 lone top top CA@1286 CA@1298 lone CA@1298 CA@1284 CA@1282 CA@1299 CA@1301 top lone lone lone lzero top CA@1281 CA@1341 CA@1324 CA@1325 top) (Int)) (lzero,top)} -> {_u ({_u ([] (CA@1268 lone lzero lone) (Int)) (lzero,lone)} -> {_u Int lzero}) top}) top} Num_@DCT_@u88_18_0) :: {_u ({_u ([] (CA@1268 lone lzero lone) (Int)) (lzero,lone)} -> {_u Int lzero}) top} u5_17) :: {_u Int lzero}
        in
          let
            main = ((print :: {_u ({_u (_'Show (CA@1587 CA@1590 lone lone lzero lone top CA@1593 CA@1591 CA@1585 CA@1586 CA@1556 lone CA@1550 CA@1553 CA@1589 CA@1551 CA@1552 CA@1554 CA@1579 CA@1578 CA@1575 CA@1574 CA@1571 CA@1570 CA@1577 CA@1576 CA@1573 CA@1572 CA@1584 CA@1549 CA@1555 CA@1582 lone CA@1581 CA@1583 CA@1566 CA@1559 CA@1564 CA@1560 CA@1565 CA@1562 CA@1567 CA@1561 CA@1568 CA@1563) (Int)) (lone,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u (CA@1709 CA@1547) lone}) lone}) top} Show_@DCT_@u95_17_0) :: {_u ({_u Int (lzero,lone)} -> {_u (CA@1709 CA@1547) lone}) lone} u5_15) :: {_u (CA@1709 CA@1547) lone}
          in
            let
              u5_26 = () :: {_u () lzero}
            in
              let
                main = ((ehcRunMain :: {_u ({_u (CA@1709 CA@1708) (lone,lone)} -> {_u ({_u () (lzero,lzero)} -> {_u (CA@1709 CA@1708) lone}) lone}) top} main) :: {_u ({_u () (lzero,lzero)} -> {_u (CA@1709 CA@1708) lone}) lone} u5_26) :: {_u (CA@1709 CA@1708) lone}
              in
                main :: {_u (CA@1709 CA@1804) lone}
let
  mapm = \x1_@UNQ_@24 ->
           \x2_@UNQ_@34 ->
             let! x2_@UNQ_@35_@EVL = x2_@UNQ_@34
             in case x2_@UNQ_@35_@EVL of
                  : x_@UNQ_@36_@FLD_@0 xs_@UNQ_@37_@FLD_@1 -> let
                                                                u5_10 = map x1_@UNQ_@24 xs_@UNQ_@37_@FLD_@1
                                                              in let
                                                                   u5_9 = x1_@UNQ_@24 x_@UNQ_@36_@FLD_@0
                                                                 in let
                                                                      u5_7 = : u5_9 u5_10
                                                                    in u5_7
                  []  -> []
in let
     u5_20 = enumFromTo Enum_@DCT_@u88_35_0 1 1000000
   in let
        u5_19 = succ Enum_@DCT_@u88_35_0
      in let
           u5_17 = mapm u5_19 u5_20
         in let
              u5_15 = sum Num_@DCT_@u88_18_0 u5_17
            in let
                 main = print Show_@DCT_@u95_17_0 u5_15
               in let
                    u5_26 = ()
                  in let
                       main = ehcRunMain main u5_26
                     in main
("opt-let",main)
("opt-let",MainOpts.main)
("opt-let",MainOpts.u5_15)
("opt-let",MainOpts.u5_17)
("opt-let",MainOpts.u5_20)
("opt-let",MainOpts.u5_7)
("Transformation applied: ",6)
let
  mapm = \x1_@UNQ_@24 ->
           \x2_@UNQ_@34 ->
             let! x2_@UNQ_@35_@EVL = x2_@UNQ_@34
             in case x2_@UNQ_@35_@EVL of
                  : x_@UNQ_@36_@FLD_@0 xs_@UNQ_@37_@FLD_@1 -> let
                                                                u5_10 = map x1_@UNQ_@24 xs_@UNQ_@37_@FLD_@1
                                                              in let
                                                                   u5_9 = x1_@UNQ_@24 x_@UNQ_@36_@FLD_@0
                                                                 in let! u5_7 = : u5_9 u5_10
                                                                    in u5_7
                  []  -> []
in let! u5_20 = enumFromTo Enum_@DCT_@u88_35_0 1 1000000
   in let
        u5_19 = succ Enum_@DCT_@u88_35_0
      in let! u5_17 = mapm u5_19 u5_20
         in let! u5_15 = sum Num_@DCT_@u88_18_0 u5_17
            in let! main = print Show_@DCT_@u95_17_0 u5_15
               in let
                    u5_26 = ()
                  in let! main = ehcRunMain main u5_26
                     in main

Fold:
("TyGam: ",)
("DataGam: ",)
("num constraints: ",321)
("error eqann top not equal",{0,1,2} == {1})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero,AnnPrim_One]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("still to do cs",0,45)
("Tys",x_@UNQ_@33 ->
  {_u (forall {} . cs: 0 => Int) (CA@182,CA@180)}
z_@UNQ_@24 ->
  {_u (forall {} . cs: 0 => CA@77) (lzero,{set {0,1}})}
f_@UNQ_@20 ->
  {_u (forall {} . cs: 0 => ({_u CA@142 (lzero,lzero)} -> {_u ({_u CA@833 (lzero,CA@839)} -> {_u CA@142 CA@836}) CA@847})) (top,top)}
lgo_@UNQ_@23 ->
  {_u (forall {CA@69,CA@75,CA@20,CA@48,CA@40,CA@53,CA@57,CA@17,CA@77,CA@23} . cs: 17 => ({_u ({_u CA@77 (lzero,lzero)} -> {_u ({_u CA@23 (lzero,CA@20)} -> {_u CA@77 CA@75}) CA@17}) (top,top)} -> {_u ({_u CA@77 (lzero,{set {0,1}})} -> {_u ({_u ([] (lzero CA@69 CA@53 lone) (CA@23)) (CA@57,lone)} -> {_u CA@77 lzero}) CA@48}) CA@40})
           lone U CA@40 == CA@40
           lzero U CA@75 == CA@75
           lone U CA@48 == CA@48
           CA@57 U CA@53 == CA@53
           {set {0,1}} > CA@20 == CA@69
           CA@48 . lzero == lzero
           CA@48 . {set {0,1}} == {set {0,1}}
           CA@48 . {set {0,1}} == {set {0,1}}
           CA@48 . {set {0,1}} == {set {0,1}}
           CA@48 . top == top
           CA@48 . top == top
           CA@40 . {set {0,1}} == {set {0,1}}
           CA@40 . {set {0,1}} == {set {0,1}}
           CA@40 . top == top
           CA@40 . top == top
           lone U CA@17 == CA@17
           CA@75 (+) lzero == CA@75
      ) (lzero,lzero)}
xs0_@UNQ_@22 ->
  {_u (forall {} . cs: 0 => ([] (lzero CA@834 CA@844 lone) (CA@833))) (CA@140,lone)}
main ->
  {_u (forall {CA@1926,CA@2088} . cs: 0 => (CA@2088 CA@1926)) (lone,lone)}
f_@NEW_@0_@UNQ_@20 ->
  {_u (forall {} . cs: 0 => ({_u CA@77 (lzero,lzero)} -> {_u ({_u CA@23 (lzero,CA@20)} -> {_u CA@77 CA@75}) CA@17})) (top,top)}
u5_42 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)}
fo ->
  {_u (forall {CA@836,CA@834,CA@839,CA@844,CA@847,CA@140,CA@833,CA@142} . cs: 1 => ({_u ({_u CA@142 (lzero,lzero)} -> {_u ({_u CA@833 (lzero,CA@839)} -> {_u CA@142 CA@836}) CA@847}) (top,top)} -> {_u ({_u CA@142 (lzero,{set {0,1}})} -> {_u ({_u ([] (lzero CA@834 CA@844 lone) (CA@833)) (CA@140,lone)} -> {_u CA@142 lzero}) lone}) lone})
           lzero U CA@140 == CA@140
      ) (lzero,lzero)}
t6 ->
  {_u (forall {CA@225,CA@182,CA@180} . cs: 19 => ({_u Int (CA@182,CA@180)} -> {_u Int CA@225})
           lone > CA@182 == CA@182
           lone > CA@180 == CA@180
           CA@180 > lone == {set {0,1}}
           CA@180 > lzero == lzero
           CA@180 > lone == {set {0,1}}
           CA@180 > lone == {set {0,1}}
           CA@180 > lone == {set {0,1}}
           CA@180 > lzero == lzero
           CA@180 (+) lzero == CA@180
           CA@180 > lzero == lzero
           lzero U CA@182 == CA@182
           CA@180 > lone == {set {0,1}}
           CA@180 > lzero == lzero
           CA@180 > lone == {set {0,1}}
           CA@180 > lone == {set {0,1}}
           CA@180 > lone == {set {0,1}}
           CA@180 > lzero == lzero
           CA@180 (+) lzero == CA@180
           CA@180 > lzero == lzero
      ) (lzero,lzero)}
u3_64_0_@UNQ_@27_@EVL ->
  {_u (forall {} . cs: 0 => ([] (lzero CA@69 CA@53 lone) (CA@23))) (lone,lomega)}
u5_27 ->
  {_u (forall {CA@1276,CA@1275,CA@1278} . cs: 0 => ({_u Int (CA@1278,CA@1276)} -> {_u ({_u Int (CA@1275,lone)} -> {_u Int top}) CA@1276})) (top,top)}
x_@UNQ_@28_@FLD_@0 ->
  {_u (forall {} . cs: 0 => CA@23) (lzero,CA@69)}
z'_@UNQ_@32 ->
  {_u (forall {} . cs: 2 => CA@77
           lone U CA@17 == CA@17
           CA@75 (+) lzero == CA@75
      ) (CA@75,{set {0,1}})}
z0_@UNQ_@21 ->
  {_u (forall {} . cs: 0 => CA@142) (lzero,{set {0,1}})}
u5_28 ->
  {_u (forall {} . cs: 9 => ([] (top top top top) (Int))
           lzero U CA@182 == CA@182
           CA@180 > lone == {set {0,1}}
           CA@180 > lzero == lzero
           CA@180 > lone == {set {0,1}}
           CA@180 > lone == {set {0,1}}
           CA@180 > lone == {set {0,1}}
           CA@180 > lzero == lzero
           CA@180 (+) lzero == CA@180
           CA@180 > lzero == lzero
      ) (lzero,lone)}
ys_@UNQ_@25 ->
  {_u (forall {} . cs: 0 => ([] (lzero CA@69 CA@53 lone) (CA@23))) (CA@57,lone)}
xs_@UNQ_@29_@FLD_@1 ->
  {_u (forall {} . cs: 0 => ([] (lzero CA@69 CA@53 lone) (CA@23))) (CA@53,lone)}
main ->
  {_u (forall {CA@2087} . cs: 0 => (CA@2088 CA@2087)) (lone,lone)}
u5_34 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lone)}
u5_38 ->
  {_u (forall {} . cs: 0 => Int) (lzero,lzero)}
u5_36 ->
  {_u (forall {CA@1594,CA@1595} . cs: 0 => ([] (lzero lzero CA@1594 CA@1595) (Int))) (top,lone)})
"start optimizing"
let
  lgo_@UNQ_@23 = (\f_@NEW_@0_@UNQ_@20 ->
                    (\z_@UNQ_@24 ->
                       (\ys_@UNQ_@25 ->
                          let!
                            u3_64_0_@UNQ_@27_@EVL = ys_@UNQ_@25 :: {_u ([] (lzero CA@69 CA@53 lone) (CA@23)) CA@57}
                          in
                            (case u3_64_0_@UNQ_@27_@EVL :: {_u ([] (lzero CA@69 CA@53 lone) (CA@23)) lone} of
                               : x_@UNQ_@28_@FLD_@0 xs_@UNQ_@29_@FLD_@1 -> let
                                                                             z'_@UNQ_@32 = ((f_@NEW_@0_@UNQ_@20 :: {_u ({_u CA@77 (lzero,lzero)} -> {_u ({_u CA@23 (lzero,CA@20)} -> {_u CA@77 CA@75}) CA@17}) lone} z_@UNQ_@24) :: {_u ({_u CA@23 (lzero,CA@20)} -> {_u CA@77 CA@75}) CA@17} x_@UNQ_@28_@FLD_@0) :: {_u CA@77 CA@75}
                                                                           in
                                                                             (((lgo_@UNQ_@23 :: {_u ({_u ({_u CA@77 (lzero,lzero)} -> {_u ({_u CA@23 (lzero,CA@20)} -> {_u CA@77 CA@75}) CA@17}) (top,top)} -> {_u ({_u CA@77 (lzero,{set {0,1}})} -> {_u ({_u ([] (lzero CA@69 CA@53 lone) (CA@23)) (CA@57,lone)} -> {_u CA@77 lzero}) CA@48}) CA@40}) lone} f_@NEW_@0_@UNQ_@20) :: {_u ({_u CA@77 (lzero,{set {0,1}})} -> {_u ({_u ([] (lzero CA@69 CA@53 lone) (CA@23)) (CA@57,lone)} -> {_u CA@77 lzero}) CA@48}) CA@40} z'_@UNQ_@32) :: {_u ({_u ([] (lzero CA@69 CA@53 lone) (CA@23)) (CA@57,lone)} -> {_u CA@77 lzero}) CA@48} xs_@UNQ_@29_@FLD_@1) :: {_u CA@77 lzero}
                               [] -> z_@UNQ_@24 :: {_u CA@77 lzero}
                            ) :: {_u CA@77 lzero}
                       ) :: {_u ({_u ([] (lzero CA@69 CA@53 lone) (CA@23)) (CA@57,lone)} -> {_u CA@77 lzero}) CA@48}
                    ) :: {_u ({_u CA@77 (lzero,{set {0,1}})} -> {_u ({_u ([] (lzero CA@69 CA@53 lone) (CA@23)) (CA@57,lone)} -> {_u CA@77 lzero}) CA@48}) CA@40}
                 ) :: {_u ({_u ({_u CA@77 (lzero,lzero)} -> {_u ({_u CA@23 (lzero,CA@20)} -> {_u CA@77 CA@75}) CA@17}) (top,top)} -> {_u ({_u CA@77 (lzero,{set {0,1}})} -> {_u ({_u ([] (lzero CA@69 CA@53 lone) (CA@23)) (CA@57,lone)} -> {_u CA@77 lzero}) CA@48}) CA@40}) lzero}
in
  let
    fo = (\f_@UNQ_@20 ->
            (\z0_@UNQ_@21 ->
               (\xs0_@UNQ_@22 ->
                  (((lgo_@UNQ_@23 :: {_u ({_u ({_u CA@142 (lzero,lzero)} -> {_u ({_u CA@833 (lzero,CA@839)} -> {_u CA@142 CA@836}) CA@847}) (top,top)} -> {_u ({_u CA@142 (lzero,{set {0,1}})} -> {_u ({_u ([] (lzero CA@834 CA@844 lone) (CA@833)) (lzero,lone)} -> {_u CA@142 lzero}) lone}) lone}) lone} f_@UNQ_@20) :: {_u ({_u CA@142 (lzero,{set {0,1}})} -> {_u ({_u ([] (lzero CA@834 CA@844 lone) (CA@833)) (lzero,lone)} -> {_u CA@142 lzero}) lone}) lone} z0_@UNQ_@21) :: {_u ({_u ([] (lzero CA@834 CA@844 lone) (CA@833)) (lzero,lone)} -> {_u CA@142 lzero}) lone} xs0_@UNQ_@22) :: {_u CA@142 lzero}
               ) :: {_u ({_u ([] (lzero CA@834 CA@844 lone) (CA@833)) (CA@140,lone)} -> {_u CA@142 lzero}) lone}
            ) :: {_u ({_u CA@142 (lzero,{set {0,1}})} -> {_u ({_u ([] (lzero CA@834 CA@844 lone) (CA@833)) (CA@140,lone)} -> {_u CA@142 lzero}) lone}) lone}
         ) :: {_u ({_u ({_u CA@142 (lzero,lzero)} -> {_u ({_u CA@833 (lzero,CA@839)} -> {_u CA@142 CA@836}) CA@847}) (top,top)} -> {_u ({_u CA@142 (lzero,{set {0,1}})} -> {_u ({_u ([] (lzero CA@834 CA@844 lone) (CA@833)) (CA@140,lone)} -> {_u CA@142 lzero}) lone}) lone}) lzero}
  in
    let
      t6 = (\x_@UNQ_@33 ->
              let
                u5_28 = (((enumFromTo :: {_u ({_u (_'Enum (CA@1022 CA@1016 lone lone lzero top lone lzero {set {0,1}} {set {0,1}} CA@1024 CA@1025 CA@1010 CA@1009 top top lone lzero lone lzero lone lone lzero lzero top CA@1023 lone lzero CA@1004 top lone lone lzero lzero lone lzero CA@180 lzero top lone lzero lone lzero lone lone lzero top lone lzero top top) (Int)) (lzero,lone)} -> {_u ({_u Int (lzero,lzero)} -> {_u ({_u Int (lzero,CA@180)} -> {_u ([] (top top top top) (Int)) lzero}) lone}) lone}) top} Enum_@DCT_@u88_35_0) :: {_u ({_u Int (lzero,lzero)} -> {_u ({_u Int (lzero,CA@180)} -> {_u ([] (top top top top) (Int)) lzero}) lone}) lone} 1) :: {_u ({_u Int (lzero,CA@180)} -> {_u ([] (top top top top) (Int)) lzero}) lone} x_@UNQ_@33) :: {_u ([] (top top top top) (Int)) lzero}
              in
                let
                  u5_27 = (+ :: {_u ({_u (_'Num (CA@1214 CA@1215 CA@1220 top CA@1217 CA@1270 CA@1269 CA@1268 lone CA@1266 CA@1272 CA@1272 CA@1271 lone top CA@1261 lone CA@1256 CA@1258 CA@1258 CA@1255 lone top CA@1252 CA@1251 CA@1221 lone CA@1254 CA@1248 CA@1248 CA@1247 lone top CA@1222 CA@1224 CA@1245 CA@1243 CA@1243 CA@1241 lone top top lone CA@1278 CA@1276 CA@1276 CA@1275 lone top CA@1232 lone CA@1280 lone top top CA@1233 CA@1239 lone CA@1239 CA@1230 CA@1229 CA@1236 CA@1235 top CA@1228 lone CA@1281 lone top CA@1219 CA@1218 CA@1285 CA@1284 top) (Int)) (lzero,lone)} -> {_u ({_u Int (CA@1278,CA@1276)} -> {_u ({_u Int (CA@1275,lone)} -> {_u Int top}) CA@1276}) top}) top} Num_@DCT_@u88_18_0) :: {_u ({_u Int (CA@1278,CA@1276)} -> {_u ({_u Int (CA@1275,lone)} -> {_u Int top}) CA@1276}) top}
                in
                  (((fo :: {_u ({_u ({_u Int (CA@926,CA@929)} -> {_u ({_u Int (CA@928,lone)} -> {_u Int top}) CA@929}) (top,top)} -> {_u ({_u Int (lzero,{set {0,1}})} -> {_u ({_u ([] (top top top lone) (Int)) (lzero,lone)} -> {_u Int CA@225}) lone}) lone}) lone} u5_27) :: {_u ({_u Int (lzero,{set {0,1}})} -> {_u ({_u ([] (top top top lone) (Int)) (lzero,lone)} -> {_u Int CA@225}) lone}) lone} 0) :: {_u ({_u ([] (top top top lone) (Int)) (lzero,lone)} -> {_u Int CA@225}) lone} u5_28) :: {_u Int CA@225}
           ) :: {_u ({_u Int (CA@182,CA@180)} -> {_u Int CA@225}) lzero}
    in
      let
        u5_38 = (t6 :: {_u ({_u Int (lzero,{set {0,1}})} -> {_u Int lzero}) lone} 1000000) :: {_u Int lzero}
      in
        let
          u5_36 = ((replicate :: {_u ({_u Int (lzero,lzero)} -> {_u ({_u Int (lzero,lzero)} -> {_u ([] (lzero lzero CA@1594 CA@1595) (Int)) top}) lzero}) top} 100) :: {_u ({_u Int (lzero,lzero)} -> {_u ([] (lzero lzero CA@1594 CA@1595) (Int)) top}) lzero} u5_38) :: {_u ([] (lzero lzero CA@1594 CA@1595) (Int)) top}
        in
          let
            u5_34 = ((sum :: {_u ({_u (_'Num (CA@1739 CA@1733 CA@1737 top CA@1735 CA@1738 CA@1731 CA@1723 lone CA@1727 CA@1721 CA@1721 CA@1720 lone top CA@1728 lone CA@1700 CA@1701 CA@1701 CA@1706 lone top CA@1704 CA@1736 CA@1724 lone CA@1708 CA@1693 CA@1693 CA@1694 lone top CA@1730 CA@1725 CA@1696 CA@1698 CA@1698 CA@1697 lone top top lone lzero lone lone CA@1683 lzero top CA@1679 lone CA@1684 lone top top CA@1677 CA@1689 lone CA@1689 CA@1675 CA@1673 CA@1690 CA@1692 top lone lone lone lzero top CA@1672 CA@1732 CA@1715 CA@1716 top) (Int)) (lzero,top)} -> {_u ({_u ([] (lzero lzero CA@1657 lone) (Int)) (lzero,lone)} -> {_u Int lzero}) top}) top} Num_@DCT_@u88_18_0) :: {_u ({_u ([] (lzero lzero CA@1657 lone) (Int)) (lzero,lone)} -> {_u Int lzero}) top} u5_36) :: {_u Int lzero}
          in
            let
              main = ((print :: {_u ({_u (_'Show (CA@1966 CA@1969 lone lone lzero lone top CA@1972 CA@1970 CA@1964 CA@1965 CA@1935 lone CA@1929 CA@1932 CA@1968 CA@1930 CA@1931 CA@1933 CA@1958 CA@1957 CA@1954 CA@1953 CA@1950 CA@1949 CA@1956 CA@1955 CA@1952 CA@1951 CA@1963 CA@1928 CA@1934 CA@1961 lone CA@1960 CA@1962 CA@1945 CA@1938 CA@1943 CA@1939 CA@1944 CA@1941 CA@1946 CA@1940 CA@1947 CA@1942) (Int)) (lone,lone)} -> {_u ({_u Int (lzero,lone)} -> {_u (CA@2088 CA@1926) lone}) lone}) top} Show_@DCT_@u95_17_0) :: {_u ({_u Int (lzero,lone)} -> {_u (CA@2088 CA@1926) lone}) lone} u5_34) :: {_u (CA@2088 CA@1926) lone}
            in
              let
                u5_42 = () :: {_u () lzero}
              in
                let
                  main = ((ehcRunMain :: {_u ({_u (CA@2088 CA@2087) (lone,lone)} -> {_u ({_u () (lzero,lzero)} -> {_u (CA@2088 CA@2087) lone}) lone}) top} main) :: {_u ({_u () (lzero,lzero)} -> {_u (CA@2088 CA@2087) lone}) lone} u5_42) :: {_u (CA@2088 CA@2087) lone}
                in
                  main :: {_u (CA@2088 CA@2164) lone}
let
  lgo_@UNQ_@23 = \f_@NEW_@0_@UNQ_@20 ->
                   \z_@UNQ_@24 ->
                     \ys_@UNQ_@25 ->
                       let! u3_64_0_@UNQ_@27_@EVL = ys_@UNQ_@25
                       in case u3_64_0_@UNQ_@27_@EVL of
                            : x_@UNQ_@28_@FLD_@0 xs_@UNQ_@29_@FLD_@1 -> let
                                                                          z'_@UNQ_@32 = f_@NEW_@0_@UNQ_@20 z_@UNQ_@24 x_@UNQ_@28_@FLD_@0
                                                                        in lgo_@UNQ_@23 f_@NEW_@0_@UNQ_@20 z'_@UNQ_@32 xs_@UNQ_@29_@FLD_@1
                            []  -> z_@UNQ_@24
in let
     fo = \f_@UNQ_@20 ->
            \z0_@UNQ_@21 ->
              \xs0_@UNQ_@22 ->
                lgo_@UNQ_@23 f_@UNQ_@20 z0_@UNQ_@21 xs0_@UNQ_@22
   in let
        t6 = \x_@UNQ_@33 ->
               let
                 u5_28 = enumFromTo Enum_@DCT_@u88_35_0 1 x_@UNQ_@33
               in let
                    u5_27 = + Num_@DCT_@u88_18_0
                  in fo u5_27 0 u5_28
      in let
           u5_38 = t6 1000000
         in let
              u5_36 = replicate 100 u5_38
            in let
                 u5_34 = sum Num_@DCT_@u88_18_0 u5_36
               in let
                    main = print Show_@DCT_@u95_17_0 u5_34
                  in let
                       u5_42 = ()
                     in let
                          main = ehcRunMain main u5_42
                        in main
("opt-let",main)
("opt-let",MainOpts.main)
("opt-let",MainOpts.u5_34)
("opt-let",MainOpts.u5_36)
("opt-let",MainOpts.u5_28)
("opt-AltCon",[7_1])
("Transformation applied: ",6)
let
  lgo_@UNQ_@23 = \f_@NEW_@0_@UNQ_@20 ->
                   \z_@UNQ_@24 ->
                     \ys_@UNQ_@25 ->
                       let! u3_64_0_@UNQ_@27_@EVL = ys_@UNQ_@25
                       in case u3_64_0_@UNQ_@27_@EVL of
                            : x_@UNQ_@28_@FLD_@0 xs_@UNQ_@29_@FLD_@1 -> let! u7_1 = xs_@UNQ_@29_@FLD_@1
                                                                        in let
                                                                             z'_@UNQ_@32 = f_@NEW_@0_@UNQ_@20 z_@UNQ_@24 x_@UNQ_@28_@FLD_@0
                                                                           in lgo_@UNQ_@23 f_@NEW_@0_@UNQ_@20 z'_@UNQ_@32 xs_@UNQ_@29_@FLD_@1
                            []  -> z_@UNQ_@24
in let
     fo = \f_@UNQ_@20 ->
            \z0_@UNQ_@21 ->
              \xs0_@UNQ_@22 ->
                lgo_@UNQ_@23 f_@UNQ_@20 z0_@UNQ_@21 xs0_@UNQ_@22
   in let
        t6 = \x_@UNQ_@33 ->
               let! u5_28 = enumFromTo Enum_@DCT_@u88_35_0 1 x_@UNQ_@33
               in let
                    u5_27 = + Num_@DCT_@u88_18_0
                  in fo u5_27 0 u5_28
      in let
           u5_38 = t6 1000000
         in let! u5_36 = replicate 100 u5_38
            in let! u5_34 = sum Num_@DCT_@u88_18_0 u5_36
               in let! main = print Show_@DCT_@u95_17_0 u5_34
                  in let
                       u5_42 = ()
                     in let! main = ehcRunMain main u5_42
                        in main

Strict:
("TyGam: ",T ->
  Type Error: MainOpts.T dataTgi)
("DataGam: ",T 0 1
  MainOpts.T !{_u Bool (0,1)})
("num constraints: ",184)
("error eqann no top not equal",Annotation_Val {v_Annotation_Val = fromList [AnnPrim_One]},Annotation_Val {v_Annotation_Val = fromList [AnnPrim_Zero]})
("still to do cs",0,0)
("Tys",x_@UNQ_@7 ->
  {_u (forall {} . cs: 0 => Bool) (lzero,CA@34)}
y_@UNQ_@8 ->
  {_u (forall {CA@34} . cs: 0 => (T (lzero CA@34))) (lzero,lone)}
main ->
  {_u (forall {CA@766,CA@767} . cs: 0 => (CA@767 CA@766)) (lone,lone)}
x_@UNQ_@11_@FLD_@0 ->
  {_u (forall {} . cs: 0 => Bool) (CA@86,lone)}
u5_16_0 ->
  {_u (forall {CA@78,CA@86} . cs: 0 => ({_u (T (CA@86 lone)) (CA@78,lone)} -> {_u Bool CA@86})) (lone,lone)}
u3_133_0_@UNQ_@9 ->
  {_u (forall {} . cs: 0 => (T (CA@86 lone))) (CA@78,lone)}
f ->
  {_u (forall {CA@527} . cs: 0 => (T (lzero CA@527))) (lzero,lone)}
T ->
  {_u (forall {CA@6,CA@3,CA@2} . cs: 0 => ({_u Bool (CA@2,CA@3)} -> {_u (T (CA@2 CA@3)) CA@6})) (top,top)}
u3_133_0_@UNQ_@10_@EVL ->
  {_u (forall {} . cs: 0 => (T (CA@86 lone))) (lone,lomega)}
u5_14 ->
  {_u (forall {CA@621,CA@599,CA@847} . cs: 0 => ({_u Bool (lone,lone)} -> {_u (CA@847 CA@599) CA@621})) (lone,lone)}
x1_@UNQ_@6 ->
  {_u (forall {} . cs: 0 => Bool) (CA@2,CA@3)}
u5_15 ->
  {_u (forall {} . cs: 0 => Bool) (lzero,lone)}
main ->
  {_u (forall {CA@847,CA@846} . cs: 0 => (CA@847 CA@846)) (lone,lone)}
u5_23 ->
  {_u (forall {} . cs: 0 => ()) (lzero,lzero)})
"start optimizing"
let
  T = (\x1_@UNQ_@6 ->
         (MainOpts.T x1_@UNQ_@6) :: {_u (T (CA@2 CA@3)) CA@6}
      ) :: {_u ({_u Bool (CA@2,CA@3)} -> {_u (T (CA@2 CA@3)) CA@6}) top}
in
  let
    f = let
          x_@UNQ_@7 = ((&& :: {_u ({_u Bool (lzero,lone)} -> {_u ({_u Bool (lzero,{set {0,1}})} -> {_u Bool lzero}) lone}) top} True) :: {_u ({_u Bool (lzero,{set {0,1}})} -> {_u Bool lzero}) lone} False) :: {_u Bool lzero}
        in
          let
            y_@UNQ_@8 = (T :: {_u ({_u Bool (lzero,CA@34)} -> {_u (T (lzero CA@34)) lzero}) lone} x_@UNQ_@7) :: {_u (T (lzero CA@34)) lzero}
          in
            y_@UNQ_@8 :: {_u (T (lzero CA@527)) lzero}
  in
    let
      u5_16_0 = (\u3_133_0_@UNQ_@9 ->
                   let!
                     u3_133_0_@UNQ_@10_@EVL = u3_133_0_@UNQ_@9 :: {_u (T (CA@86 lone)) CA@78}
                   in
                     (case u3_133_0_@UNQ_@10_@EVL :: {_u (T (CA@86 lone)) lone} of
                        T x_@UNQ_@11_@FLD_@0 -> x_@UNQ_@11_@FLD_@0 :: {_u Bool CA@86}
                     ) :: {_u Bool CA@86}
                ) :: {_u ({_u (T (CA@86 lone)) (CA@78,lone)} -> {_u Bool CA@86}) lone}
    in
      let
        u5_15 = (u5_16_0 :: {_u ({_u (T (lzero lone)) (lzero,lone)} -> {_u Bool lzero}) lone} f) :: {_u Bool lzero}
      in
        let
          u5_14 = (print :: {_u ({_u (_'Show (CA@639 CA@642 lone lone lzero lone lzero CA@645 CA@643 CA@637 CA@638 CA@608 lone lzero CA@605 CA@641 lzero lone CA@606 CA@631 CA@630 CA@627 CA@626 CA@623 CA@622 CA@629 CA@628 CA@625 CA@624 CA@636 CA@601 CA@607 CA@634 lone CA@633 CA@635 CA@618 CA@611 CA@616 CA@612 CA@617 CA@614 CA@619 CA@613 CA@620 CA@615) (Bool)) (lone,lone)} -> {_u ({_u Bool (lone,lone)} -> {_u (CA@847 CA@599) CA@621}) lone}) top} Show_@DCT_@u116_7_0) :: {_u ({_u Bool (lone,lone)} -> {_u (CA@847 CA@599) CA@621}) lone}
        in
          let
            main = (($ :: {_u ({_u ({_u Bool (lone,lone)} -> {_u (CA@767 CA@766) lone}) (lone,lone)} -> {_u ({_u Bool (lzero,lone)} -> {_u (CA@767 CA@766) lone}) lone}) top} u5_14) :: {_u ({_u Bool (lzero,lone)} -> {_u (CA@767 CA@766) lone}) lone} u5_15) :: {_u (CA@767 CA@766) lone}
          in
            let
              u5_23 = () :: {_u () lzero}
            in
              let
                main = ((ehcRunMain :: {_u ({_u (CA@847 CA@846) (lone,lone)} -> {_u ({_u () (lzero,lzero)} -> {_u (CA@847 CA@846) lone}) lone}) top} main) :: {_u ({_u () (lzero,lzero)} -> {_u (CA@847 CA@846) lone}) lone} u5_23) :: {_u (CA@847 CA@846) lone}
              in
                main :: {_u (CA@899 CA@900) lone}
let
  T = \x1_@UNQ_@6 ->
        T MainOpts.x1_@UNQ_@6
in let
     f = let
           x_@UNQ_@7 = && True False
         in let
              y_@UNQ_@8 = T x_@UNQ_@7
            in y_@UNQ_@8
   in let
        u5_16_0 = \u3_133_0_@UNQ_@9 ->
                    let! u3_133_0_@UNQ_@10_@EVL = u3_133_0_@UNQ_@9
                    in case u3_133_0_@UNQ_@10_@EVL of
                         T x_@UNQ_@11_@FLD_@0 -> x_@UNQ_@11_@FLD_@0
      in let
           u5_15 = u5_16_0 f
         in let
              u5_14 = print Show_@DCT_@u116_7_0
            in let
                 main = $ u5_14 u5_15
               in let
                    u5_23 = ()
                  in let
                       main = ehcRunMain main u5_23
                     in main
("opt-let",main)
("opt-let",MainOpts.main)
("opt-let",MainOpts.u5_14)
("opt-let",MainOpts.u5_15)
("opt-let",MainOpts.y_@UNQ_@8)
("opt-let",MainOpts.f)
("Transformation applied: ",6)
let
  T = \x1_@UNQ_@6 ->
        T MainOpts.x1_@UNQ_@6
in let! f = let
              x_@UNQ_@7 = && True False
            in let! y_@UNQ_@8 = T x_@UNQ_@7
               in y_@UNQ_@8
   in let
        u5_16_0 = \u3_133_0_@UNQ_@9 ->
                    let! u3_133_0_@UNQ_@10_@EVL = u3_133_0_@UNQ_@9
                    in case u3_133_0_@UNQ_@10_@EVL of
                         T x_@UNQ_@11_@FLD_@0 -> x_@UNQ_@11_@FLD_@0
      in let! u5_15 = u5_16_0 f
         in let! u5_14 = print Show_@DCT_@u116_7_0
            in let! main = $ u5_14 u5_15
               in let
                    u5_23 = ()
                  in let! main = ehcRunMain main u5_23
                     in main

