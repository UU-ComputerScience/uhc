###########################################################################################
# this file
###########################################################################################

UHC_MK_PREFIX								:= $(UHC_TOP_PREFIX)mk/
MK_CONFIG_MKF								:= $(UHC_MK_PREFIX)config.mk

###########################################################################################
# current date
###########################################################################################

DATE			:= $(shell /bin/date +%Y%m%d)
TODAY			:= $(DATE)

###########################################################################################
# current development team
###########################################################################################

UHC_TEAM					:= Atze Dijkstra

###########################################################################################
# the overall version of EH
###########################################################################################

EH_VERSION_MAJOR			:= @EH_VERSION_MAJOR@
EH_VERSION_MINOR			:= @EH_VERSION_MINOR@
EH_VERSION_MINORMINOR		:= @EH_VERSION_MINORMINOR@
EH_VERSION_MINORMINORMINOR	:= @EH_VERSION_MINORMINORMINOR@
EH_VERSION_STABILITY		:= @EH_VERSION_STABILITY@
EH_VERSION_SHORT			:= @EH_VERSION_SHORT@
EH_VERSION_MEDIUM			:= @EH_VERSION_MEDIUM@
EH_VERSION_FULL				:= @EH_VERSION_FULL@
EH_VERSION_ASNUMBER			:= @EH_VERSION_ASNUMBER@

###########################################################################################
# Choice of aspects (by default empty, used of defined (if not here) in src/ehc/variant.mk)
###########################################################################################

ASPECTS					:= @ASPECTS@

###########################################################################################
# platform config, currently changed to config by autoconf
###########################################################################################

# EXEC_SUFFIX	: suffix for executables
# PATH_SEP		: separator in file paths
# PATHS_SEP		: separator in sequences of file paths, as in environments
# PATHS_SEP_COL	: separator in sequences of file paths, as in environments which do not use absolute paths
# STRIP_CMD		: strip cmd
# TOPABS_PREFIX	: absolute prefix/pathname to top dir

EXEC_SUFFIX			:= @SUFFIX_EXEC@
LIBC_SUFFIX			:= @SUFFIX_LIBC@
LIBJS_SUFFIX		:= @SUFFIX_LIBJS@
PATH_SEP			:= /
PATHS_SEP			:= @PATHS_SEP@
PATHS_SEP_COL		:= :
STRIP_CMD			:= strip
TOPABS_PREFIX		:= @TOP_ABS@/
TOPABS2_PREFIX		:= @TOP_ABS2@/

### remaining config
# which version (usually v1 = current, v2 == under development)
#RULER2_OPTS_VERSION	:= --v1
#RULER2_OPTS_VERSION	:= --v2
RULER2_OPTS_VERSION	:=

### names of packages assumed by the compiler driver
RTS_PKG_NAME				:= @RTS_PKG_NAME@
EXTLIBS_BGC_PKG_NAME		:= @EXTLIBS_BGC_PKG_NAME@
EXTLIBS_GMP_PKG_NAME		:= @EXTLIBS_GMP_PKG_NAME@

###########################################################################################
# naming of files
###########################################################################################

# name of pkg config file, assumed to be present for each package in its package dir
UHC_PKG_CONFIGFILE_NAME		:= installed-pkg-config

###########################################################################################
# Platform we develop on; stuff depending on it, in particular to cater for cygwin
###########################################################################################

# platform: UNIX, CYGWIN
DEVELOPMENT_PLATFORM				:= @DEVELOPMENT_PLATFORM@
# platform: as known by configure, with wordsize added
HOST_PLATFORM_NAME				:= @HOST_PLATFORM@
HOST_PLATFORM_NRWORDBITS		:= @NRWORDBITS_PLATFORM@

# A prefix to be added for direct access to otherwise hidden (by cygwin) locations
TOPLEVEL_SYSTEM_ABSPATH_PREFIX		:= @TOPLEVEL_SYSTEM_ABSPATH_PREFIX@

###########################################################################################
# inclusion of features
###########################################################################################

# use cabal sandbox
ifeq (@ENABLE_SANDBOX@,yes)
ENABLE_SANDBOX				:= yes
endif

# use cabal v2 commands
ifeq (@ENABLE_V2_COMMANDS@,yes)
ENABLE_V2_COMMANDS			:= yes
endif

# include CHR based type system
ifeq (@ENABLE_CHRTYSYS@,yes)
ENABLE_CHRTYSYS				:= yes
endif

# include java code generation
ifeq (@ENABLE_JAVA@,yes)
ENABLE_JAVA					:= yes
endif

# include clr code generation
ifeq (@ENABLE_CLR@,yes)
ENABLE_CLR					:= yes
endif

# include javascript code generation
ifeq (@ENABLE_JS@,yes)
ENABLE_JS					:= yes
endif

# include llvm code generation
ifeq (@ENABLE_LLVM@,yes)
ENABLE_LLVM					:= yes
endif

# include cmm route for C generation
ifeq (@ENABLE_CMM@,yes)
ENABLE_CMM					:= yes
endif

# include C backend combined using whole program analysis
ifeq (@ENABLE_WHOLEPROGC@,yes)
ENABLE_WHOLEPROGC			:= yes
ENABLE_WHOLEPROGANAL		:= yes
endif

# include whole program analysis
ifeq (@ENABLE_WHOLEPROGANAL@,yes)
ENABLE_WHOLEPROGANAL		:= yes
endif

# include use of Core as both backend & source
ifeq (@ENABLE_CORE_ASINPOUTP@,yes)
ENABLE_CORE_ASINPOUTP		:= yes
endif

# include use of CoreRun as source
ifeq (@ENABLE_CORERUN_ASINPOUTP@,yes)
ENABLE_CORERUN_ASINPOUTP	:= yes
endif

# include System F Ty generation for Core
ifeq (@ENABLE_CORESYSF@,yes)
ENABLE_CORESYSF				:= yes
endif

# include TyCore
ifeq (@ENABLE_TYCORE@,yes)
ENABLE_CORESYSF				:= yes
ENABLE_TYCORE				:= yes
endif

# include TyCore based transformations
ifeq (@ENABLE_TAUPHI@,yes)
ENABLE_CORESYSF				:= yes
ENABLE_TYCORE				:= yes
ENABLE_TAUPHI				:= yes
endif

